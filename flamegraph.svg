<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="2703"><g><title>`0x7FFCE155CC70 (1 samples, 0.04%)</title><rect x="0.0000%" y="933" width="0.0370%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>`0x7FFCDF11E473 (1 samples, 0.04%)</title><rect x="0.0370%" y="885" width="0.0370%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2870%" y="895.50"></text></g><g><title>kuramoto_oscillators.exe`pre_cpp_initialization() (1 samples, 0.04%)</title><rect x="0.0370%" y="869" width="0.0370%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2870%" y="879.50"></text></g><g><title>`0x7FFCDEDE09C5 (1 samples, 0.04%)</title><rect x="0.0370%" y="853" width="0.0370%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2870%" y="863.50"></text></g><g><title>`0x7FFCE157119C (1 samples, 0.04%)</title><rect x="0.0740%" y="725" width="0.0370%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3240%" y="735.50"></text></g><g><title>`0x7FFCE15ADBC4 (1 samples, 0.04%)</title><rect x="0.0740%" y="709" width="0.0370%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3240%" y="719.50"></text></g><g><title>`0x7FFCE1527B29 (1 samples, 0.04%)</title><rect x="0.1110%" y="693" width="0.0370%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.3610%" y="703.50"></text></g><g><title>`0x7FFCE15288A8 (1 samples, 0.04%)</title><rect x="0.1110%" y="677" width="0.0370%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.3610%" y="687.50"></text></g><g><title>`0x7FFCE1524479 (1 samples, 0.04%)</title><rect x="0.1110%" y="661" width="0.0370%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.3610%" y="671.50"></text></g><g><title>`0x7FFCE1524AAA (1 samples, 0.04%)</title><rect x="0.1110%" y="645" width="0.0370%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.3610%" y="655.50"></text></g><g><title>`0x7FFCE1524D42 (1 samples, 0.04%)</title><rect x="0.1110%" y="629" width="0.0370%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.3610%" y="639.50"></text></g><g><title>`0x7FFCE15ADA64 (1 samples, 0.04%)</title><rect x="0.1110%" y="613" width="0.0370%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3610%" y="623.50"></text></g><g><title>`0x7FFCE1571253 (2 samples, 0.07%)</title><rect x="0.1110%" y="725" width="0.0740%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="2"/><text x="0.3610%" y="735.50"></text></g><g><title>`0x7FFCE1524C14 (2 samples, 0.07%)</title><rect x="0.1110%" y="709" width="0.0740%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="2"/><text x="0.3610%" y="719.50"></text></g><g><title>`0x7FFCE1527BC4 (1 samples, 0.04%)</title><rect x="0.1480%" y="693" width="0.0370%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="0.3980%" y="703.50"></text></g><g><title>`0x7FFCE15427DA (1 samples, 0.04%)</title><rect x="0.1480%" y="677" width="0.0370%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="0.3980%" y="687.50"></text></g><g><title>`0x7FFCE15433D7 (1 samples, 0.04%)</title><rect x="0.1480%" y="661" width="0.0370%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="0.3980%" y="671.50"></text></g><g><title>`0x7FFCE15289F5 (1 samples, 0.04%)</title><rect x="0.1480%" y="645" width="0.0370%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="1"/><text x="0.3980%" y="655.50"></text></g><g><title>`0x7FFCE152FB53 (4 samples, 0.15%)</title><rect x="0.0740%" y="773" width="0.1480%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="4"/><text x="0.3240%" y="783.50"></text></g><g><title>`0x7FFCE157021F (4 samples, 0.15%)</title><rect x="0.0740%" y="757" width="0.1480%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="4"/><text x="0.3240%" y="767.50"></text></g><g><title>`0x7FFCE1570F80 (4 samples, 0.15%)</title><rect x="0.0740%" y="741" width="0.1480%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="4"/><text x="0.3240%" y="751.50"></text></g><g><title>`0x7FFCE1571271 (1 samples, 0.04%)</title><rect x="0.1850%" y="725" width="0.0370%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="0.4350%" y="735.50"></text></g><g><title>`0x7FFCE15AD744 (1 samples, 0.04%)</title><rect x="0.1850%" y="709" width="0.0370%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="0.4350%" y="719.50"></text></g><g><title>`0x7FFCE152FB5D (1 samples, 0.04%)</title><rect x="0.2220%" y="773" width="0.0370%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.4720%" y="783.50"></text></g><g><title>`0x7FFCE1570058 (1 samples, 0.04%)</title><rect x="0.2220%" y="757" width="0.0370%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.4720%" y="767.50"></text></g><g><title>`0x7FFCE1570138 (1 samples, 0.04%)</title><rect x="0.2220%" y="741" width="0.0370%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.4720%" y="751.50"></text></g><g><title>`0x7FFCE15426CC (1 samples, 0.04%)</title><rect x="0.2220%" y="725" width="0.0370%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.4720%" y="735.50"></text></g><g><title>`0x7FFCE154DBB4 (1 samples, 0.04%)</title><rect x="0.2590%" y="741" width="0.0370%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.5090%" y="751.50"></text></g><g><title>`0x7FFCE154DD38 (1 samples, 0.04%)</title><rect x="0.2590%" y="725" width="0.0370%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.5090%" y="735.50"></text></g><g><title>`0x7FFCDA59644E (1 samples, 0.04%)</title><rect x="0.2590%" y="709" width="0.0370%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.5090%" y="719.50"></text></g><g><title>`0x7FFCDA596507 (1 samples, 0.04%)</title><rect x="0.2590%" y="693" width="0.0370%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.5090%" y="703.50"></text></g><g><title>`0x7FFCDA596589 (1 samples, 0.04%)</title><rect x="0.2590%" y="677" width="0.0370%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.5090%" y="687.50"></text></g><g><title>`0x7FFCDA596B0C (1 samples, 0.04%)</title><rect x="0.2590%" y="661" width="0.0370%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.5090%" y="671.50"></text></g><g><title>`0x7FFCDA5961AE (1 samples, 0.04%)</title><rect x="0.2590%" y="645" width="0.0370%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="0.5090%" y="655.50"></text></g><g><title>`0x7FFCE15ADBC4 (1 samples, 0.04%)</title><rect x="0.2590%" y="629" width="0.0370%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="0.5090%" y="639.50"></text></g><g><title>`0x7FFCE154DCBA (1 samples, 0.04%)</title><rect x="0.2960%" y="709" width="0.0370%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="0.5460%" y="719.50"></text></g><g><title>`0x7FFCE1584618 (1 samples, 0.04%)</title><rect x="0.2960%" y="693" width="0.0370%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="0.5460%" y="703.50"></text></g><g><title>`0x7FFCE15ADEE4 (1 samples, 0.04%)</title><rect x="0.2960%" y="677" width="0.0370%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="0.5460%" y="687.50"></text></g><g><title>`0x7FFCE154D8FB (3 samples, 0.11%)</title><rect x="0.2590%" y="757" width="0.1110%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="3"/><text x="0.5090%" y="767.50"></text></g><g><title>`0x7FFCE154DBF4 (2 samples, 0.07%)</title><rect x="0.2960%" y="741" width="0.0740%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="2"/><text x="0.5460%" y="751.50"></text></g><g><title>`0x7FFCE154DBB4 (2 samples, 0.07%)</title><rect x="0.2960%" y="725" width="0.0740%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="2"/><text x="0.5460%" y="735.50"></text></g><g><title>`0x7FFCE154DD38 (1 samples, 0.04%)</title><rect x="0.3330%" y="709" width="0.0370%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="0.5830%" y="719.50"></text></g><g><title>`0x7FFCDA59644E (1 samples, 0.04%)</title><rect x="0.3330%" y="693" width="0.0370%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="0.5830%" y="703.50"></text></g><g><title>`0x7FFCDA596507 (1 samples, 0.04%)</title><rect x="0.3330%" y="677" width="0.0370%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="0.5830%" y="687.50"></text></g><g><title>`0x7FFCDA596589 (1 samples, 0.04%)</title><rect x="0.3330%" y="661" width="0.0370%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="0.5830%" y="671.50"></text></g><g><title>`0x7FFCDA596B0C (1 samples, 0.04%)</title><rect x="0.3330%" y="645" width="0.0370%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="0.5830%" y="655.50"></text></g><g><title>`0x7FFCDA5961AE (1 samples, 0.04%)</title><rect x="0.3330%" y="629" width="0.0370%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="0.5830%" y="639.50"></text></g><g><title>`0x7FFCE15ADBC4 (1 samples, 0.04%)</title><rect x="0.3330%" y="613" width="0.0370%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="1"/><text x="0.5830%" y="623.50"></text></g><g><title>`0x7FFCE02E78A7 (1 samples, 0.04%)</title><rect x="0.3700%" y="677" width="0.0370%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="1"/><text x="0.6200%" y="687.50"></text></g><g><title>`0x7FFCE02E7BAC (1 samples, 0.04%)</title><rect x="0.3700%" y="661" width="0.0370%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="1"/><text x="0.6200%" y="671.50"></text></g><g><title>`0x7FFCE031AB6F (1 samples, 0.04%)</title><rect x="0.3700%" y="645" width="0.0370%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="1"/><text x="0.6200%" y="655.50"></text></g><g><title>`0x7FFCE031A4EA (1 samples, 0.04%)</title><rect x="0.3700%" y="629" width="0.0370%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="1"/><text x="0.6200%" y="639.50"></text></g><g><title>`0x7FFCE02F4740 (1 samples, 0.04%)</title><rect x="0.3700%" y="613" width="0.0370%" height="15" fill="rgb(247,123,22)" fg:x="10" fg:w="1"/><text x="0.6200%" y="623.50"></text></g><g><title>`0x7FFCDF1205A2 (10 samples, 0.37%)</title><rect x="0.0740%" y="869" width="0.3700%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="10"/><text x="0.3240%" y="879.50"></text></g><g><title>`0x7FFCDF1219C7 (10 samples, 0.37%)</title><rect x="0.0740%" y="853" width="0.3700%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="10"/><text x="0.3240%" y="863.50"></text></g><g><title>`0x7FFCDF11C050 (10 samples, 0.37%)</title><rect x="0.0740%" y="837" width="0.3700%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="10"/><text x="0.3240%" y="847.50"></text></g><g><title>`0x7FFCDEDA2612 (10 samples, 0.37%)</title><rect x="0.0740%" y="821" width="0.3700%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="10"/><text x="0.3240%" y="831.50"></text></g><g><title>`0x7FFCE1526AF4 (10 samples, 0.37%)</title><rect x="0.0740%" y="805" width="0.3700%" height="15" fill="rgb(247,81,37)" fg:x="2" fg:w="10"/><text x="0.3240%" y="815.50"></text></g><g><title>`0x7FFCE15273E4 (10 samples, 0.37%)</title><rect x="0.0740%" y="789" width="0.3700%" height="15" fill="rgb(209,12,38)" fg:x="2" fg:w="10"/><text x="0.3240%" y="799.50"></text></g><g><title>`0x7FFCE152FBAE (5 samples, 0.18%)</title><rect x="0.2590%" y="773" width="0.1850%" height="15" fill="rgb(227,1,9)" fg:x="7" fg:w="5"/><text x="0.5090%" y="783.50"></text></g><g><title>`0x7FFCE154D947 (2 samples, 0.07%)</title><rect x="0.3700%" y="757" width="0.0740%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="2"/><text x="0.6200%" y="767.50"></text></g><g><title>`0x7FFCE157D120 (2 samples, 0.07%)</title><rect x="0.3700%" y="741" width="0.0740%" height="15" fill="rgb(221,10,30)" fg:x="10" fg:w="2"/><text x="0.6200%" y="751.50"></text></g><g><title>`0x7FFCE157D09A (2 samples, 0.07%)</title><rect x="0.3700%" y="725" width="0.0740%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="2"/><text x="0.6200%" y="735.50"></text></g><g><title>`0x7FFCE157D307 (2 samples, 0.07%)</title><rect x="0.3700%" y="709" width="0.0740%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="2"/><text x="0.6200%" y="719.50"></text></g><g><title>`0x7FFCE1529A1D (2 samples, 0.07%)</title><rect x="0.3700%" y="693" width="0.0740%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="2"/><text x="0.6200%" y="703.50"></text></g><g><title>`0x7FFCE02E78EF (1 samples, 0.04%)</title><rect x="0.4070%" y="677" width="0.0370%" height="15" fill="rgb(247,98,35)" fg:x="11" fg:w="1"/><text x="0.6570%" y="687.50"></text></g><g><title>`0x7FFCE0300AAE (1 samples, 0.04%)</title><rect x="0.4070%" y="661" width="0.0370%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="1"/><text x="0.6570%" y="671.50"></text></g><g><title>`0x7FFCE0300CA4 (1 samples, 0.04%)</title><rect x="0.4070%" y="645" width="0.0370%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="1"/><text x="0.6570%" y="655.50"></text></g><g><title>`0x7FFCE0300FAF (1 samples, 0.04%)</title><rect x="0.4070%" y="629" width="0.0370%" height="15" fill="rgb(246,177,23)" fg:x="11" fg:w="1"/><text x="0.6570%" y="639.50"></text></g><g><title>`0x7FFCE0354680 (1 samples, 0.04%)</title><rect x="0.4070%" y="613" width="0.0370%" height="15" fill="rgb(230,62,27)" fg:x="11" fg:w="1"/><text x="0.6570%" y="623.50"></text></g><g><title>`0x7FFCDEDC8ED0 (1 samples, 0.04%)</title><rect x="0.4440%" y="789" width="0.0370%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="0.6940%" y="799.50"></text></g><g><title>`0x7FFCDEE0E057 (1 samples, 0.04%)</title><rect x="0.4440%" y="773" width="0.0370%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="0.6940%" y="783.50"></text></g><g><title>`0x7FFCDEE29965 (1 samples, 0.04%)</title><rect x="0.4440%" y="757" width="0.0370%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="0.6940%" y="767.50"></text></g><g><title>`0x7FFCDEE0FC5B (1 samples, 0.04%)</title><rect x="0.4440%" y="741" width="0.0370%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="0.6940%" y="751.50"></text></g><g><title>`0x7FFCDEE26FFB (1 samples, 0.04%)</title><rect x="0.4440%" y="725" width="0.0370%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="0.6940%" y="735.50"></text></g><g><title>`0x7FFCDEE2699F (1 samples, 0.04%)</title><rect x="0.4440%" y="709" width="0.0370%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="0.6940%" y="719.50"></text></g><g><title>`0x7FFCDEE1DE96 (1 samples, 0.04%)</title><rect x="0.4440%" y="693" width="0.0370%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="0.6940%" y="703.50"></text></g><g><title>`0x7FFCDEE1F51C (1 samples, 0.04%)</title><rect x="0.4440%" y="677" width="0.0370%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="0.6940%" y="687.50"></text></g><g><title>`0x7FFCDEE0D150 (1 samples, 0.04%)</title><rect x="0.4440%" y="661" width="0.0370%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="0.6940%" y="671.50"></text></g><g><title>`0x7FFCDEE0B6B0 (1 samples, 0.04%)</title><rect x="0.4440%" y="645" width="0.0370%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="1"/><text x="0.6940%" y="655.50"></text></g><g><title>`0x7FFCDEE5A902 (1 samples, 0.04%)</title><rect x="0.4440%" y="629" width="0.0370%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="0.6940%" y="639.50"></text></g><g><title>`0x7FFCDEE5AAF6 (1 samples, 0.04%)</title><rect x="0.4440%" y="613" width="0.0370%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="1"/><text x="0.6940%" y="623.50"></text></g><g><title>`0x7FFCDEE5B264 (1 samples, 0.04%)</title><rect x="0.4440%" y="597" width="0.0370%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="1"/><text x="0.6940%" y="607.50"></text></g><g><title>`0x7FFCDEE5AF3E (1 samples, 0.04%)</title><rect x="0.4440%" y="581" width="0.0370%" height="15" fill="rgb(208,190,38)" fg:x="12" fg:w="1"/><text x="0.6940%" y="591.50"></text></g><g><title>`0x7FFCE15B01D4 (1 samples, 0.04%)</title><rect x="0.4440%" y="565" width="0.0370%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="1"/><text x="0.6940%" y="575.50"></text></g><g><title>`0x7FFCDF12045F (12 samples, 0.44%)</title><rect x="0.0740%" y="885" width="0.4440%" height="15" fill="rgb(237,122,38)" fg:x="2" fg:w="12"/><text x="0.3240%" y="895.50"></text></g><g><title>`0x7FFCDF1205BC (2 samples, 0.07%)</title><rect x="0.4440%" y="869" width="0.0740%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="2"/><text x="0.6940%" y="879.50"></text></g><g><title>`0x7FFCE0C5E3EB (2 samples, 0.07%)</title><rect x="0.4440%" y="853" width="0.0740%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="2"/><text x="0.6940%" y="863.50"></text></g><g><title>`0x7FFCE156EF8D (2 samples, 0.07%)</title><rect x="0.4440%" y="837" width="0.0740%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="2"/><text x="0.6940%" y="847.50"></text></g><g><title>`0x7FFCE156F1DA (2 samples, 0.07%)</title><rect x="0.4440%" y="821" width="0.0740%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="2"/><text x="0.6940%" y="831.50"></text></g><g><title>`0x7FFCE1529A1D (2 samples, 0.07%)</title><rect x="0.4440%" y="805" width="0.0740%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="2"/><text x="0.6940%" y="815.50"></text></g><g><title>`0x7FFCE0460F60 (1 samples, 0.04%)</title><rect x="0.4809%" y="789" width="0.0370%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="1"/><text x="0.7309%" y="799.50"></text></g><g><title>`0x7FFCE0476BA7 (1 samples, 0.04%)</title><rect x="0.4809%" y="773" width="0.0370%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="0.7309%" y="783.50"></text></g><g><title>`0x7FFCE047305B (1 samples, 0.04%)</title><rect x="0.4809%" y="757" width="0.0370%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="0.7309%" y="767.50"></text></g><g><title>kuramoto_oscillators.exe`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="0.5179%" y="789" width="0.0370%" height="15" fill="rgb(228,99,48)" fg:x="14" fg:w="1"/><text x="0.7679%" y="799.50"></text></g><g><title>kuramoto_oscillators.exe`std::rt::cleanup (1 samples, 0.04%)</title><rect x="0.5179%" y="773" width="0.0370%" height="15" fill="rgb(253,11,6)" fg:x="14" fg:w="1"/><text x="0.7679%" y="783.50"></text></g><g><title>kuramoto_oscillators.exe`std::sync::once::Once::call_once (1 samples, 0.04%)</title><rect x="0.5179%" y="757" width="0.0370%" height="15" fill="rgb(247,143,39)" fg:x="14" fg:w="1"/><text x="0.7679%" y="767.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys_common::once::queue::Once::call (1 samples, 0.04%)</title><rect x="0.5179%" y="741" width="0.0370%" height="15" fill="rgb(236,97,10)" fg:x="14" fg:w="1"/><text x="0.7679%" y="751.50"></text></g><g><title>kuramoto_oscillators.exe`core::cell::Cell::get (1 samples, 0.04%)</title><rect x="0.5179%" y="725" width="0.0370%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="1"/><text x="0.7679%" y="735.50"></text></g><g><title>kuramoto_oscillators.exe`std::sync::once::impl$2::call_once::closure$0&lt;std::rt::cleanup::closure_env$0&gt; (1 samples, 0.04%)</title><rect x="0.5179%" y="709" width="0.0370%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="1"/><text x="0.7679%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`std::rt::lang_start_internal::closure$1 (1 samples, 0.04%)</title><rect x="0.5549%" y="789" width="0.0370%" height="15" fill="rgb(220,129,5)" fg:x="15" fg:w="1"/><text x="0.8049%" y="799.50"></text></g><g><title>kuramoto_oscillators.exe`std::rt::init (1 samples, 0.04%)</title><rect x="0.5549%" y="773" width="0.0370%" height="15" fill="rgb(242,17,10)" fg:x="15" fg:w="1"/><text x="0.8049%" y="783.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::ffi::c_str::CString::new (1 samples, 0.04%)</title><rect x="0.5549%" y="757" width="0.0370%" height="15" fill="rgb(242,107,0)" fg:x="15" fg:w="1"/><text x="0.8049%" y="767.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::thread::Thread::set_name (1 samples, 0.04%)</title><rect x="0.5549%" y="741" width="0.0370%" height="15" fill="rgb(251,28,31)" fg:x="15" fg:w="1"/><text x="0.8049%" y="751.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="0.5549%" y="725" width="0.0370%" height="15" fill="rgb(233,223,10)" fg:x="15" fg:w="1"/><text x="0.8049%" y="735.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="0.5549%" y="709" width="0.0370%" height="15" fill="rgb(215,21,27)" fg:x="15" fg:w="1"/><text x="0.8049%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.04%)</title><rect x="0.5549%" y="693" width="0.0370%" height="15" fill="rgb(232,23,21)" fg:x="15" fg:w="1"/><text x="0.8049%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::current_memory (1 samples, 0.04%)</title><rect x="0.5549%" y="677" width="0.0370%" height="15" fill="rgb(244,5,23)" fg:x="15" fg:w="1"/><text x="0.8049%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::c::SetThreadDescription::load (1 samples, 0.04%)</title><rect x="0.5549%" y="661" width="0.0370%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="1"/><text x="0.8049%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::c::SetThreadDescription::load_from_module (1 samples, 0.04%)</title><rect x="0.5549%" y="645" width="0.0370%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="1"/><text x="0.8049%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`core::option::Option::and_then (1 samples, 0.04%)</title><rect x="0.5549%" y="629" width="0.0370%" height="15" fill="rgb(212,68,19)" fg:x="15" fg:w="1"/><text x="0.8049%" y="639.50"></text></g><g><title>`0x7FFCDEDA9766 (1 samples, 0.04%)</title><rect x="0.5549%" y="613" width="0.0370%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="1"/><text x="0.8049%" y="623.50"></text></g><g><title>`0x7FFCDEDA97DA (1 samples, 0.04%)</title><rect x="0.5549%" y="597" width="0.0370%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="1"/><text x="0.8049%" y="607.50"></text></g><g><title>`0x7FFCE1526870 (1 samples, 0.04%)</title><rect x="0.5549%" y="581" width="0.0370%" height="15" fill="rgb(206,192,2)" fg:x="15" fg:w="1"/><text x="0.8049%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="0.5919%" y="693" width="0.0370%" height="15" fill="rgb(241,108,4)" fg:x="16" fg:w="1"/><text x="0.8419%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="0.5919%" y="677" width="0.0370%" height="15" fill="rgb(247,173,49)" fg:x="16" fg:w="1"/><text x="0.8419%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="0.5919%" y="661" width="0.0370%" height="15" fill="rgb(224,114,35)" fg:x="16" fg:w="1"/><text x="0.8419%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="0.5919%" y="645" width="0.0370%" height="15" fill="rgb(245,159,27)" fg:x="16" fg:w="1"/><text x="0.8419%" y="655.50"></text></g><g><title>`0x7FFCDEDA1075 (1 samples, 0.04%)</title><rect x="0.5919%" y="629" width="0.0370%" height="15" fill="rgb(245,172,44)" fg:x="16" fg:w="1"/><text x="0.8419%" y="639.50"></text></g><g><title>`0x7FFCE15AD744 (1 samples, 0.04%)</title><rect x="0.5919%" y="613" width="0.0370%" height="15" fill="rgb(236,23,11)" fg:x="16" fg:w="1"/><text x="0.8419%" y="623.50"></text></g><g><title>`0x7FFCE1534760 (1 samples, 0.04%)</title><rect x="0.6289%" y="645" width="0.0370%" height="15" fill="rgb(205,117,38)" fg:x="17" fg:w="1"/><text x="0.8789%" y="655.50"></text></g><g><title>`0x7FFCE153478C (1 samples, 0.04%)</title><rect x="0.6659%" y="645" width="0.0370%" height="15" fill="rgb(237,72,25)" fg:x="18" fg:w="1"/><text x="0.9159%" y="655.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="0.7029%" y="645" width="0.0370%" height="15" fill="rgb(244,70,9)" fg:x="19" fg:w="1"/><text x="0.9529%" y="655.50"></text></g><g><title>`0x7FFCE15B776F (1 samples, 0.04%)</title><rect x="0.7029%" y="629" width="0.0370%" height="15" fill="rgb(217,125,39)" fg:x="19" fg:w="1"/><text x="0.9529%" y="639.50"></text></g><g><title>`0x7FFCE1530F01 (1 samples, 0.04%)</title><rect x="0.7029%" y="613" width="0.0370%" height="15" fill="rgb(235,36,10)" fg:x="19" fg:w="1"/><text x="0.9529%" y="623.50"></text></g><g><title>`0x7FFCE15144AF (1 samples, 0.04%)</title><rect x="0.7029%" y="597" width="0.0370%" height="15" fill="rgb(251,123,47)" fg:x="19" fg:w="1"/><text x="0.9529%" y="607.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="0.7029%" y="581" width="0.0370%" height="15" fill="rgb(221,13,13)" fg:x="19" fg:w="1"/><text x="0.9529%" y="591.50"></text></g><g><title>`0x7FFCE1535B74 (1 samples, 0.04%)</title><rect x="0.7029%" y="565" width="0.0370%" height="15" fill="rgb(238,131,9)" fg:x="19" fg:w="1"/><text x="0.9529%" y="575.50"></text></g><g><title>`0x7FFCE15364AB (1 samples, 0.04%)</title><rect x="0.7029%" y="549" width="0.0370%" height="15" fill="rgb(211,50,8)" fg:x="19" fg:w="1"/><text x="0.9529%" y="559.50"></text></g><g><title>`0x7FFCE151ED8A (1 samples, 0.04%)</title><rect x="0.7029%" y="533" width="0.0370%" height="15" fill="rgb(245,182,24)" fg:x="19" fg:w="1"/><text x="0.9529%" y="543.50"></text></g><g><title>`0x7FFCE15AD864 (1 samples, 0.04%)</title><rect x="0.7029%" y="517" width="0.0370%" height="15" fill="rgb(242,14,37)" fg:x="19" fg:w="1"/><text x="0.9529%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::push(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="0.7399%" y="645" width="0.0370%" height="15" fill="rgb(246,228,12)" fg:x="20" fg:w="1"/><text x="0.9899%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::write(alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.04%)</title><rect x="0.7399%" y="629" width="0.0370%" height="15" fill="rgb(213,55,15)" fg:x="20" fg:w="1"/><text x="0.9899%" y="639.50"></text></g><g><title>`0x7FFCE1535728 (1 samples, 0.04%)</title><rect x="0.7769%" y="613" width="0.0370%" height="15" fill="rgb(209,9,3)" fg:x="21" fg:w="1"/><text x="1.0269%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::ops::arith::impl$13::add (2 samples, 0.07%)</title><rect x="0.7769%" y="645" width="0.0740%" height="15" fill="rgb(230,59,30)" fg:x="21" fg:w="2"/><text x="1.0269%" y="655.50"></text></g><g><title>`0x7FFCE15347B1 (2 samples, 0.07%)</title><rect x="0.7769%" y="629" width="0.0740%" height="15" fill="rgb(209,121,21)" fg:x="21" fg:w="2"/><text x="1.0269%" y="639.50"></text></g><g><title>`0x7FFCE15B75A5 (1 samples, 0.04%)</title><rect x="0.8139%" y="613" width="0.0370%" height="15" fill="rgb(220,109,13)" fg:x="22" fg:w="1"/><text x="1.0639%" y="623.50"></text></g><g><title>`0x7FFCE0C558B0 (1 samples, 0.04%)</title><rect x="0.8509%" y="453" width="0.0370%" height="15" fill="rgb(232,18,1)" fg:x="23" fg:w="1"/><text x="1.1009%" y="463.50"></text></g><g><title>`0x7FFCE1534774 (2 samples, 0.07%)</title><rect x="0.8879%" y="453" width="0.0740%" height="15" fill="rgb(215,41,42)" fg:x="24" fg:w="2"/><text x="1.1379%" y="463.50"></text></g><g><title>`0x7FFCE1534797 (1 samples, 0.04%)</title><rect x="0.9619%" y="453" width="0.0370%" height="15" fill="rgb(224,123,36)" fg:x="26" fg:w="1"/><text x="1.2119%" y="463.50"></text></g><g><title>`0x7FFCE15347A3 (1 samples, 0.04%)</title><rect x="0.9989%" y="453" width="0.0370%" height="15" fill="rgb(240,125,3)" fg:x="27" fg:w="1"/><text x="1.2489%" y="463.50"></text></g><g><title>`0x7FFCE1535710 (2 samples, 0.07%)</title><rect x="1.0729%" y="437" width="0.0740%" height="15" fill="rgb(205,98,50)" fg:x="29" fg:w="2"/><text x="1.3229%" y="447.50"></text></g><g><title>`0x7FFCE1535715 (2 samples, 0.07%)</title><rect x="1.1469%" y="437" width="0.0740%" height="15" fill="rgb(205,185,37)" fg:x="31" fg:w="2"/><text x="1.3969%" y="447.50"></text></g><g><title>`0x7FFCE1535734 (1 samples, 0.04%)</title><rect x="1.2209%" y="437" width="0.0370%" height="15" fill="rgb(238,207,15)" fg:x="33" fg:w="1"/><text x="1.4709%" y="447.50"></text></g><g><title>`0x7FFCE1535937 (1 samples, 0.04%)</title><rect x="1.2579%" y="437" width="0.0370%" height="15" fill="rgb(213,199,42)" fg:x="34" fg:w="1"/><text x="1.5079%" y="447.50"></text></g><g><title>`0x7FFCE1535B43 (2 samples, 0.07%)</title><rect x="1.2949%" y="437" width="0.0740%" height="15" fill="rgb(235,201,11)" fg:x="35" fg:w="2"/><text x="1.5449%" y="447.50"></text></g><g><title>`0x7FFCE1535B51 (1 samples, 0.04%)</title><rect x="1.3688%" y="437" width="0.0370%" height="15" fill="rgb(207,46,11)" fg:x="37" fg:w="1"/><text x="1.6188%" y="447.50"></text></g><g><title>`0x7FFCE1535B99 (1 samples, 0.04%)</title><rect x="1.4058%" y="437" width="0.0370%" height="15" fill="rgb(241,35,35)" fg:x="38" fg:w="1"/><text x="1.6558%" y="447.50"></text></g><g><title>`0x7FFCE1535BBB (2 samples, 0.07%)</title><rect x="1.4428%" y="437" width="0.0740%" height="15" fill="rgb(243,32,47)" fg:x="39" fg:w="2"/><text x="1.6928%" y="447.50"></text></g><g><title>`0x7FFCE15B74B7 (1 samples, 0.04%)</title><rect x="1.5168%" y="437" width="0.0370%" height="15" fill="rgb(247,202,23)" fg:x="41" fg:w="1"/><text x="1.7668%" y="447.50"></text></g><g><title>`0x7FFCE15B74BA (2 samples, 0.07%)</title><rect x="1.5538%" y="437" width="0.0740%" height="15" fill="rgb(219,102,11)" fg:x="42" fg:w="2"/><text x="1.8038%" y="447.50"></text></g><g><title>`0x7FFCE15B74BF (1 samples, 0.04%)</title><rect x="1.6278%" y="437" width="0.0370%" height="15" fill="rgb(243,110,44)" fg:x="44" fg:w="1"/><text x="1.8778%" y="447.50"></text></g><g><title>`0x7FFCE15B74CB (1 samples, 0.04%)</title><rect x="1.6648%" y="437" width="0.0370%" height="15" fill="rgb(222,74,54)" fg:x="45" fg:w="1"/><text x="1.9148%" y="447.50"></text></g><g><title>`0x7FFCE15B74E8 (2 samples, 0.07%)</title><rect x="1.7018%" y="437" width="0.0740%" height="15" fill="rgb(216,99,12)" fg:x="46" fg:w="2"/><text x="1.9518%" y="447.50"></text></g><g><title>`0x7FFCE15B74EC (1 samples, 0.04%)</title><rect x="1.7758%" y="437" width="0.0370%" height="15" fill="rgb(226,22,26)" fg:x="48" fg:w="1"/><text x="2.0258%" y="447.50"></text></g><g><title>`0x7FFCE15B74F3 (2 samples, 0.07%)</title><rect x="1.8128%" y="437" width="0.0740%" height="15" fill="rgb(217,163,10)" fg:x="49" fg:w="2"/><text x="2.0628%" y="447.50"></text></g><g><title>`0x7FFCE15B74FB (1 samples, 0.04%)</title><rect x="1.8868%" y="437" width="0.0370%" height="15" fill="rgb(213,25,53)" fg:x="51" fg:w="1"/><text x="2.1368%" y="447.50"></text></g><g><title>`0x7FFCE15B750C (1 samples, 0.04%)</title><rect x="1.9238%" y="437" width="0.0370%" height="15" fill="rgb(252,105,26)" fg:x="52" fg:w="1"/><text x="2.1738%" y="447.50"></text></g><g><title>`0x7FFCE15B751D (1 samples, 0.04%)</title><rect x="1.9608%" y="437" width="0.0370%" height="15" fill="rgb(220,39,43)" fg:x="53" fg:w="1"/><text x="2.2108%" y="447.50"></text></g><g><title>`0x7FFCE15B7522 (1 samples, 0.04%)</title><rect x="1.9978%" y="437" width="0.0370%" height="15" fill="rgb(229,68,48)" fg:x="54" fg:w="1"/><text x="2.2478%" y="447.50"></text></g><g><title>`0x7FFCE15B7587 (1 samples, 0.04%)</title><rect x="2.0348%" y="437" width="0.0370%" height="15" fill="rgb(252,8,32)" fg:x="55" fg:w="1"/><text x="2.2848%" y="447.50"></text></g><g><title>`0x7FFCE15B7598 (1 samples, 0.04%)</title><rect x="2.0718%" y="437" width="0.0370%" height="15" fill="rgb(223,20,43)" fg:x="56" fg:w="1"/><text x="2.3218%" y="447.50"></text></g><g><title>`0x7FFCE15B75A5 (1 samples, 0.04%)</title><rect x="2.1088%" y="437" width="0.0370%" height="15" fill="rgb(229,81,49)" fg:x="57" fg:w="1"/><text x="2.3588%" y="447.50"></text></g><g><title>`0x7FFCE15B75B5 (1 samples, 0.04%)</title><rect x="2.1458%" y="437" width="0.0370%" height="15" fill="rgb(236,28,36)" fg:x="58" fg:w="1"/><text x="2.3958%" y="447.50"></text></g><g><title>`0x7FFCE15B75BA (7 samples, 0.26%)</title><rect x="2.1828%" y="437" width="0.2590%" height="15" fill="rgb(249,185,26)" fg:x="59" fg:w="7"/><text x="2.4328%" y="447.50"></text></g><g><title>`0x7FFCE15B75CE (1 samples, 0.04%)</title><rect x="2.4417%" y="437" width="0.0370%" height="15" fill="rgb(249,174,33)" fg:x="66" fg:w="1"/><text x="2.6917%" y="447.50"></text></g><g><title>`0x7FFCE15B75F2 (1 samples, 0.04%)</title><rect x="2.4787%" y="437" width="0.0370%" height="15" fill="rgb(233,201,37)" fg:x="67" fg:w="1"/><text x="2.7287%" y="447.50"></text></g><g><title>`0x7FFCE15364AB (1 samples, 0.04%)</title><rect x="2.5157%" y="357" width="0.0370%" height="15" fill="rgb(221,78,26)" fg:x="68" fg:w="1"/><text x="2.7657%" y="367.50"></text></g><g><title>`0x7FFCE151ED8A (1 samples, 0.04%)</title><rect x="2.5157%" y="341" width="0.0370%" height="15" fill="rgb(250,127,30)" fg:x="68" fg:w="1"/><text x="2.7657%" y="351.50"></text></g><g><title>`0x7FFCE15AD864 (1 samples, 0.04%)</title><rect x="2.5157%" y="325" width="0.0370%" height="15" fill="rgb(230,49,44)" fg:x="68" fg:w="1"/><text x="2.7657%" y="335.50"></text></g><g><title>`0x7FFCE15144AF (3 samples, 0.11%)</title><rect x="2.5157%" y="405" width="0.1110%" height="15" fill="rgb(229,67,23)" fg:x="68" fg:w="3"/><text x="2.7657%" y="415.50"></text></g><g><title>`0x7FFCE15347B1 (3 samples, 0.11%)</title><rect x="2.5157%" y="389" width="0.1110%" height="15" fill="rgb(249,83,47)" fg:x="68" fg:w="3"/><text x="2.7657%" y="399.50"></text></g><g><title>`0x7FFCE1535B74 (3 samples, 0.11%)</title><rect x="2.5157%" y="373" width="0.1110%" height="15" fill="rgb(215,43,3)" fg:x="68" fg:w="3"/><text x="2.7657%" y="383.50"></text></g><g><title>`0x7FFCE15365F6 (2 samples, 0.07%)</title><rect x="2.5527%" y="357" width="0.0740%" height="15" fill="rgb(238,154,13)" fg:x="69" fg:w="2"/><text x="2.8027%" y="367.50"></text></g><g><title>`0x7FFCE152E412 (2 samples, 0.07%)</title><rect x="2.5527%" y="341" width="0.0740%" height="15" fill="rgb(219,56,2)" fg:x="69" fg:w="2"/><text x="2.8027%" y="351.50"></text></g><g><title>`0x7FFCE152F35E (2 samples, 0.07%)</title><rect x="2.5527%" y="325" width="0.0740%" height="15" fill="rgb(233,0,4)" fg:x="69" fg:w="2"/><text x="2.8027%" y="335.50"></text></g><g><title>`0x7FFCE153095C (2 samples, 0.07%)</title><rect x="2.5527%" y="309" width="0.0740%" height="15" fill="rgb(235,30,7)" fg:x="69" fg:w="2"/><text x="2.8027%" y="319.50"></text></g><g><title>`0x7FFCE1519B1A (2 samples, 0.07%)</title><rect x="2.5527%" y="293" width="0.0740%" height="15" fill="rgb(250,79,13)" fg:x="69" fg:w="2"/><text x="2.8027%" y="303.50"></text></g><g><title>`0x7FFCE15AD924 (2 samples, 0.07%)</title><rect x="2.5527%" y="277" width="0.0740%" height="15" fill="rgb(211,146,34)" fg:x="69" fg:w="2"/><text x="2.8027%" y="287.50"></text></g><g><title>`0x7FFCE1530F01 (5 samples, 0.18%)</title><rect x="2.5157%" y="421" width="0.1850%" height="15" fill="rgb(228,22,38)" fg:x="68" fg:w="5"/><text x="2.7657%" y="431.50"></text></g><g><title>`0x7FFCE1514515 (2 samples, 0.07%)</title><rect x="2.6267%" y="405" width="0.0740%" height="15" fill="rgb(235,168,5)" fg:x="71" fg:w="2"/><text x="2.8767%" y="415.50"></text></g><g><title>`0x7FFCE15ADF64 (2 samples, 0.07%)</title><rect x="2.6267%" y="389" width="0.0740%" height="15" fill="rgb(221,155,16)" fg:x="71" fg:w="2"/><text x="2.8767%" y="399.50"></text></g><g><title>`0x7FFCE15144AF (1 samples, 0.04%)</title><rect x="2.7007%" y="405" width="0.0370%" height="15" fill="rgb(215,215,53)" fg:x="73" fg:w="1"/><text x="2.9507%" y="415.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="2.7007%" y="389" width="0.0370%" height="15" fill="rgb(223,4,10)" fg:x="73" fg:w="1"/><text x="2.9507%" y="399.50"></text></g><g><title>`0x7FFCE1535B74 (1 samples, 0.04%)</title><rect x="2.7007%" y="373" width="0.0370%" height="15" fill="rgb(234,103,6)" fg:x="73" fg:w="1"/><text x="2.9507%" y="383.50"></text></g><g><title>`0x7FFCE15365F6 (1 samples, 0.04%)</title><rect x="2.7007%" y="357" width="0.0370%" height="15" fill="rgb(227,97,0)" fg:x="73" fg:w="1"/><text x="2.9507%" y="367.50"></text></g><g><title>`0x7FFCE152E412 (1 samples, 0.04%)</title><rect x="2.7007%" y="341" width="0.0370%" height="15" fill="rgb(234,150,53)" fg:x="73" fg:w="1"/><text x="2.9507%" y="351.50"></text></g><g><title>`0x7FFCE152F35E (1 samples, 0.04%)</title><rect x="2.7007%" y="325" width="0.0370%" height="15" fill="rgb(228,201,54)" fg:x="73" fg:w="1"/><text x="2.9507%" y="335.50"></text></g><g><title>`0x7FFCE153095C (1 samples, 0.04%)</title><rect x="2.7007%" y="309" width="0.0370%" height="15" fill="rgb(222,22,37)" fg:x="73" fg:w="1"/><text x="2.9507%" y="319.50"></text></g><g><title>`0x7FFCE1519B1A (1 samples, 0.04%)</title><rect x="2.7007%" y="293" width="0.0370%" height="15" fill="rgb(237,53,32)" fg:x="73" fg:w="1"/><text x="2.9507%" y="303.50"></text></g><g><title>`0x7FFCE15AD924 (1 samples, 0.04%)</title><rect x="2.7007%" y="277" width="0.0370%" height="15" fill="rgb(233,25,53)" fg:x="73" fg:w="1"/><text x="2.9507%" y="287.50"></text></g><g><title>`0x7FFCE15B776F (7 samples, 0.26%)</title><rect x="2.5157%" y="437" width="0.2590%" height="15" fill="rgb(210,40,34)" fg:x="68" fg:w="7"/><text x="2.7657%" y="447.50"></text></g><g><title>`0x7FFCE1530F76 (2 samples, 0.07%)</title><rect x="2.7007%" y="421" width="0.0740%" height="15" fill="rgb(241,220,44)" fg:x="73" fg:w="2"/><text x="2.9507%" y="431.50"></text></g><g><title>`0x7FFCE1514515 (1 samples, 0.04%)</title><rect x="2.7377%" y="405" width="0.0370%" height="15" fill="rgb(235,28,35)" fg:x="74" fg:w="1"/><text x="2.9877%" y="415.50"></text></g><g><title>`0x7FFCE15ADF64 (1 samples, 0.04%)</title><rect x="2.7377%" y="389" width="0.0370%" height="15" fill="rgb(210,56,17)" fg:x="74" fg:w="1"/><text x="2.9877%" y="399.50"></text></g><g><title>`0x7FFCE15347B1 (48 samples, 1.78%)</title><rect x="1.0359%" y="453" width="1.7758%" height="15" fill="rgb(224,130,29)" fg:x="28" fg:w="48"/><text x="1.2859%" y="463.50">`..</text></g><g><title>`0x7FFCE15B78CE (1 samples, 0.04%)</title><rect x="2.7747%" y="437" width="0.0370%" height="15" fill="rgb(235,212,8)" fg:x="75" fg:w="1"/><text x="3.0247%" y="447.50"></text></g><g><title>`0x7FFCE15347BC (1 samples, 0.04%)</title><rect x="2.8117%" y="453" width="0.0370%" height="15" fill="rgb(223,33,50)" fg:x="76" fg:w="1"/><text x="3.0617%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`__rust_dealloc (2 samples, 0.07%)</title><rect x="2.8487%" y="453" width="0.0740%" height="15" fill="rgb(219,149,13)" fg:x="77" fg:w="2"/><text x="3.0987%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (57 samples, 2.11%)</title><rect x="0.8509%" y="485" width="2.1088%" height="15" fill="rgb(250,156,29)" fg:x="23" fg:w="57"/><text x="1.1009%" y="495.50">k..</text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::dealloc (57 samples, 2.11%)</title><rect x="0.8509%" y="469" width="2.1088%" height="15" fill="rgb(216,193,19)" fg:x="23" fg:w="57"/><text x="1.1009%" y="479.50">k..</text></g><g><title>kuramoto_oscillators.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.04%)</title><rect x="2.9227%" y="453" width="0.0370%" height="15" fill="rgb(216,135,14)" fg:x="79" fg:w="1"/><text x="3.1727%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::alloc::impl$0::dealloc (1 samples, 0.04%)</title><rect x="2.9227%" y="437" width="0.0370%" height="15" fill="rgb(241,47,5)" fg:x="79" fg:w="1"/><text x="3.1727%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::alloc::get_process_heap (1 samples, 0.04%)</title><rect x="2.9227%" y="421" width="0.0370%" height="15" fill="rgb(233,42,35)" fg:x="79" fg:w="1"/><text x="3.1727%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`core::sync::atomic::AtomicPtr::load (1 samples, 0.04%)</title><rect x="2.9227%" y="405" width="0.0370%" height="15" fill="rgb(231,13,6)" fg:x="79" fg:w="1"/><text x="3.1727%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="2.9227%" y="389" width="0.0370%" height="15" fill="rgb(207,181,40)" fg:x="79" fg:w="1"/><text x="3.1727%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$24::drop(alloc::vec::Vec (58 samples, 2.15%)</title><rect x="0.8509%" y="581" width="2.1458%" height="15" fill="rgb(254,173,49)" fg:x="23" fg:w="58"/><text x="1.1009%" y="591.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (58 samples, 2.15%)</title><rect x="0.8509%" y="565" width="2.1458%" height="15" fill="rgb(221,1,38)" fg:x="23" fg:w="58"/><text x="1.1009%" y="575.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place (58 samples, 2.15%)</title><rect x="0.8509%" y="549" width="2.1458%" height="15" fill="rgb(206,124,46)" fg:x="23" fg:w="58"/><text x="1.1009%" y="559.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (58 samples, 2.15%)</title><rect x="0.8509%" y="533" width="2.1458%" height="15" fill="rgb(249,21,11)" fg:x="23" fg:w="58"/><text x="1.1009%" y="543.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (58 samples, 2.15%)</title><rect x="0.8509%" y="517" width="2.1458%" height="15" fill="rgb(222,201,40)" fg:x="23" fg:w="58"/><text x="1.1009%" y="527.50">k..</text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (58 samples, 2.15%)</title><rect x="0.8509%" y="501" width="2.1458%" height="15" fill="rgb(235,61,29)" fg:x="23" fg:w="58"/><text x="1.1009%" y="511.50">k..</text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (1 samples, 0.04%)</title><rect x="2.9597%" y="485" width="0.0370%" height="15" fill="rgb(219,207,3)" fg:x="80" fg:w="1"/><text x="3.2097%" y="495.50"></text></g><g><title>`0x7FFCE15144AF (2 samples, 0.07%)</title><rect x="2.9967%" y="469" width="0.0740%" height="15" fill="rgb(222,56,46)" fg:x="81" fg:w="2"/><text x="3.2467%" y="479.50"></text></g><g><title>`0x7FFCE15347B1 (2 samples, 0.07%)</title><rect x="2.9967%" y="453" width="0.0740%" height="15" fill="rgb(239,76,54)" fg:x="81" fg:w="2"/><text x="3.2467%" y="463.50"></text></g><g><title>`0x7FFCE1535B74 (2 samples, 0.07%)</title><rect x="2.9967%" y="437" width="0.0740%" height="15" fill="rgb(231,124,27)" fg:x="81" fg:w="2"/><text x="3.2467%" y="447.50"></text></g><g><title>`0x7FFCE15365F6 (2 samples, 0.07%)</title><rect x="2.9967%" y="421" width="0.0740%" height="15" fill="rgb(249,195,6)" fg:x="81" fg:w="2"/><text x="3.2467%" y="431.50"></text></g><g><title>`0x7FFCE152E412 (2 samples, 0.07%)</title><rect x="2.9967%" y="405" width="0.0740%" height="15" fill="rgb(237,174,47)" fg:x="81" fg:w="2"/><text x="3.2467%" y="415.50"></text></g><g><title>`0x7FFCE152F35E (2 samples, 0.07%)</title><rect x="2.9967%" y="389" width="0.0740%" height="15" fill="rgb(206,201,31)" fg:x="81" fg:w="2"/><text x="3.2467%" y="399.50"></text></g><g><title>`0x7FFCE153095C (2 samples, 0.07%)</title><rect x="2.9967%" y="373" width="0.0740%" height="15" fill="rgb(231,57,52)" fg:x="81" fg:w="2"/><text x="3.2467%" y="383.50"></text></g><g><title>`0x7FFCE1519B1A (2 samples, 0.07%)</title><rect x="2.9967%" y="357" width="0.0740%" height="15" fill="rgb(248,177,22)" fg:x="81" fg:w="2"/><text x="3.2467%" y="367.50"></text></g><g><title>`0x7FFCE15AD924 (1 samples, 0.04%)</title><rect x="3.0337%" y="341" width="0.0370%" height="15" fill="rgb(215,211,37)" fg:x="82" fg:w="1"/><text x="3.2837%" y="351.50"></text></g><g><title>`0x7FFCE1530F01 (3 samples, 0.11%)</title><rect x="2.9967%" y="485" width="0.1110%" height="15" fill="rgb(241,128,51)" fg:x="81" fg:w="3"/><text x="3.2467%" y="495.50"></text></g><g><title>`0x7FFCE1514515 (1 samples, 0.04%)</title><rect x="3.0707%" y="469" width="0.0370%" height="15" fill="rgb(227,165,31)" fg:x="83" fg:w="1"/><text x="3.3207%" y="479.50"></text></g><g><title>`0x7FFCE15ADF64 (1 samples, 0.04%)</title><rect x="3.0707%" y="453" width="0.0370%" height="15" fill="rgb(228,167,24)" fg:x="83" fg:w="1"/><text x="3.3207%" y="463.50"></text></g><g><title>`0x7FFCE1536344 (1 samples, 0.04%)</title><rect x="3.1077%" y="421" width="0.0370%" height="15" fill="rgb(228,143,12)" fg:x="84" fg:w="1"/><text x="3.3577%" y="431.50"></text></g><g><title>`0x7FFCE152E412 (4 samples, 0.15%)</title><rect x="3.1447%" y="405" width="0.1480%" height="15" fill="rgb(249,149,8)" fg:x="85" fg:w="4"/><text x="3.3947%" y="415.50"></text></g><g><title>`0x7FFCE152F35E (4 samples, 0.15%)</title><rect x="3.1447%" y="389" width="0.1480%" height="15" fill="rgb(243,35,44)" fg:x="85" fg:w="4"/><text x="3.3947%" y="399.50"></text></g><g><title>`0x7FFCE153095C (4 samples, 0.15%)</title><rect x="3.1447%" y="373" width="0.1480%" height="15" fill="rgb(246,89,9)" fg:x="85" fg:w="4"/><text x="3.3947%" y="383.50"></text></g><g><title>`0x7FFCE1519B1A (4 samples, 0.15%)</title><rect x="3.1447%" y="357" width="0.1480%" height="15" fill="rgb(233,213,13)" fg:x="85" fg:w="4"/><text x="3.3947%" y="367.50"></text></g><g><title>`0x7FFCE15AD924 (4 samples, 0.15%)</title><rect x="3.1447%" y="341" width="0.1480%" height="15" fill="rgb(233,141,41)" fg:x="85" fg:w="4"/><text x="3.3947%" y="351.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;alloc::vec::Vec (67 samples, 2.48%)</title><rect x="0.8509%" y="613" width="2.4787%" height="15" fill="rgb(239,167,4)" fg:x="23" fg:w="67"/><text x="1.1009%" y="623.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (67 samples, 2.48%)</title><rect x="0.8509%" y="597" width="2.4787%" height="15" fill="rgb(209,217,16)" fg:x="23" fg:w="67"/><text x="1.1009%" y="607.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (9 samples, 0.33%)</title><rect x="2.9967%" y="581" width="0.3330%" height="15" fill="rgb(219,88,35)" fg:x="81" fg:w="9"/><text x="3.2467%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (9 samples, 0.33%)</title><rect x="2.9967%" y="565" width="0.3330%" height="15" fill="rgb(220,193,23)" fg:x="81" fg:w="9"/><text x="3.2467%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (9 samples, 0.33%)</title><rect x="2.9967%" y="549" width="0.3330%" height="15" fill="rgb(230,90,52)" fg:x="81" fg:w="9"/><text x="3.2467%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::dealloc (9 samples, 0.33%)</title><rect x="2.9967%" y="533" width="0.3330%" height="15" fill="rgb(252,106,19)" fg:x="81" fg:w="9"/><text x="3.2467%" y="543.50"></text></g><g><title>`0x7FFCE15347B1 (9 samples, 0.33%)</title><rect x="2.9967%" y="517" width="0.3330%" height="15" fill="rgb(206,74,20)" fg:x="81" fg:w="9"/><text x="3.2467%" y="527.50"></text></g><g><title>`0x7FFCE15B776F (9 samples, 0.33%)</title><rect x="2.9967%" y="501" width="0.3330%" height="15" fill="rgb(230,138,44)" fg:x="81" fg:w="9"/><text x="3.2467%" y="511.50"></text></g><g><title>`0x7FFCE1530F76 (6 samples, 0.22%)</title><rect x="3.1077%" y="485" width="0.2220%" height="15" fill="rgb(235,182,43)" fg:x="84" fg:w="6"/><text x="3.3577%" y="495.50"></text></g><g><title>`0x7FFCE15144AF (6 samples, 0.22%)</title><rect x="3.1077%" y="469" width="0.2220%" height="15" fill="rgb(242,16,51)" fg:x="84" fg:w="6"/><text x="3.3577%" y="479.50"></text></g><g><title>`0x7FFCE15347B1 (6 samples, 0.22%)</title><rect x="3.1077%" y="453" width="0.2220%" height="15" fill="rgb(248,9,4)" fg:x="84" fg:w="6"/><text x="3.3577%" y="463.50"></text></g><g><title>`0x7FFCE1535B74 (6 samples, 0.22%)</title><rect x="3.1077%" y="437" width="0.2220%" height="15" fill="rgb(210,31,22)" fg:x="84" fg:w="6"/><text x="3.3577%" y="447.50"></text></g><g><title>`0x7FFCE15365F6 (5 samples, 0.18%)</title><rect x="3.1447%" y="421" width="0.1850%" height="15" fill="rgb(239,54,39)" fg:x="85" fg:w="5"/><text x="3.3947%" y="431.50"></text></g><g><title>`0x7FFCE152E574 (1 samples, 0.04%)</title><rect x="3.2926%" y="405" width="0.0370%" height="15" fill="rgb(230,99,41)" fg:x="89" fg:w="1"/><text x="3.5426%" y="415.50"></text></g><g><title>`0x7FFCE1519B1A (1 samples, 0.04%)</title><rect x="3.2926%" y="389" width="0.0370%" height="15" fill="rgb(253,106,12)" fg:x="89" fg:w="1"/><text x="3.5426%" y="399.50"></text></g><g><title>`0x7FFCE15AD924 (1 samples, 0.04%)</title><rect x="3.2926%" y="373" width="0.0370%" height="15" fill="rgb(213,46,41)" fg:x="89" fg:w="1"/><text x="3.5426%" y="383.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (1 samples, 0.04%)</title><rect x="3.3296%" y="565" width="0.0370%" height="15" fill="rgb(215,133,35)" fg:x="90" fg:w="1"/><text x="3.5796%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;alloc::string::String&gt;*, core::ptr::non_null::NonNull (1 samples, 0.04%)</title><rect x="3.3296%" y="549" width="0.0370%" height="15" fill="rgb(213,28,5)" fg:x="90" fg:w="1"/><text x="3.5796%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::Buffer::writable (1 samples, 0.04%)</title><rect x="3.3666%" y="549" width="0.0370%" height="15" fill="rgb(215,77,49)" fg:x="91" fg:w="1"/><text x="3.6166%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$13::index_mut(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::ops::range::RangeFrom (1 samples, 0.04%)</title><rect x="3.3666%" y="533" width="0.0370%" height="15" fill="rgb(248,100,22)" fg:x="91" fg:w="1"/><text x="3.6166%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (1 samples, 0.04%)</title><rect x="3.3666%" y="517" width="0.0370%" height="15" fill="rgb(208,67,9)" fg:x="91" fg:w="1"/><text x="3.6166%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$6::index_mut(core::ops::range::RangeFrom&lt;usize&gt;, ref_mut$&lt;slice2$ (1 samples, 0.04%)</title><rect x="3.3666%" y="501" width="0.0370%" height="15" fill="rgb(219,133,21)" fg:x="91" fg:w="1"/><text x="3.6166%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$6::get_unchecked_mut(core::ops::range::RangeFrom&lt;usize&gt;, ptr_mut$&lt;slice2$ (1 samples, 0.04%)</title><rect x="3.3666%" y="485" width="0.0370%" height="15" fill="rgb(246,46,29)" fg:x="91" fg:w="1"/><text x="3.6166%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$4::get_unchecked_mut(core::ops::range::Range&lt;usize&gt;, ptr_mut$&lt;slice2$ (1 samples, 0.04%)</title><rect x="3.3666%" y="469" width="0.0370%" height="15" fill="rgb(246,185,52)" fg:x="91" fg:w="1"/><text x="3.6166%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::mut_ptr::impl$0::add (1 samples, 0.04%)</title><rect x="3.3666%" y="453" width="0.0370%" height="15" fill="rgb(252,136,11)" fg:x="91" fg:w="1"/><text x="3.6166%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::Writer&lt;std::fs::File&gt;::flush_buf (15 samples, 0.55%)</title><rect x="3.4036%" y="549" width="0.5549%" height="15" fill="rgb(219,138,53)" fg:x="92" fg:w="15"/><text x="3.6536%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (15 samples, 0.55%)</title><rect x="3.4036%" y="533" width="0.5549%" height="15" fill="rgb(211,51,23)" fg:x="92" fg:w="15"/><text x="3.6536%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::impl$9::write (15 samples, 0.55%)</title><rect x="3.4036%" y="517" width="0.5549%" height="15" fill="rgb(247,221,28)" fg:x="92" fg:w="15"/><text x="3.6536%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::handle::Handle::synchronous_write (15 samples, 0.55%)</title><rect x="3.4036%" y="501" width="0.5549%" height="15" fill="rgb(251,222,45)" fg:x="92" fg:w="15"/><text x="3.6536%" y="511.50"></text></g><g><title>`0x7FFCE15AD664 (15 samples, 0.55%)</title><rect x="3.4036%" y="485" width="0.5549%" height="15" fill="rgb(217,162,53)" fg:x="92" fg:w="15"/><text x="3.6536%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::Buffer::writable (1 samples, 0.04%)</title><rect x="3.9956%" y="533" width="0.0370%" height="15" fill="rgb(229,93,14)" fg:x="108" fg:w="1"/><text x="4.2456%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::Writer&lt;std::fs::File&gt;::flush_buf (4 samples, 0.15%)</title><rect x="4.0326%" y="533" width="0.1480%" height="15" fill="rgb(209,67,49)" fg:x="109" fg:w="4"/><text x="4.2826%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (4 samples, 0.15%)</title><rect x="4.0326%" y="517" width="0.1480%" height="15" fill="rgb(213,87,29)" fg:x="109" fg:w="4"/><text x="4.2826%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::impl$9::write (4 samples, 0.15%)</title><rect x="4.0326%" y="501" width="0.1480%" height="15" fill="rgb(205,151,52)" fg:x="109" fg:w="4"/><text x="4.2826%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::handle::Handle::synchronous_write (4 samples, 0.15%)</title><rect x="4.0326%" y="485" width="0.1480%" height="15" fill="rgb(253,215,39)" fg:x="109" fg:w="4"/><text x="4.2826%" y="495.50"></text></g><g><title>`0x7FFCE15AD664 (4 samples, 0.15%)</title><rect x="4.0326%" y="469" width="0.1480%" height="15" fill="rgb(221,220,41)" fg:x="109" fg:w="4"/><text x="4.2826%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::Writer&lt;std::fs::File&gt;::write_delimiter (10 samples, 0.37%)</title><rect x="3.9586%" y="549" width="0.3700%" height="15" fill="rgb(218,133,21)" fg:x="107" fg:w="10"/><text x="4.2086%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`csv_core::writer::Writer::delimiter(ref_mut$&lt;slice2$ (4 samples, 0.15%)</title><rect x="4.1805%" y="533" width="0.1480%" height="15" fill="rgb(221,193,43)" fg:x="113" fg:w="4"/><text x="4.4305%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`csv_core::writer::Writer::write(ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (1 samples, 0.04%)</title><rect x="4.2915%" y="517" width="0.0370%" height="15" fill="rgb(240,128,52)" fg:x="116" fg:w="1"/><text x="4.5415%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::impl$0::copy_from_slice(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.04%)</title><rect x="4.2915%" y="501" width="0.0370%" height="15" fill="rgb(253,114,12)" fg:x="116" fg:w="1"/><text x="4.5415%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="4.2915%" y="485" width="0.0370%" height="15" fill="rgb(215,223,47)" fg:x="116" fg:w="1"/><text x="4.5415%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`csv_core::writer::Writer::should_quote(ref$&lt;slice2$ (12 samples, 0.44%)</title><rect x="4.6615%" y="533" width="0.4440%" height="15" fill="rgb(248,225,23)" fg:x="126" fg:w="12"/><text x="4.9115%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`csv_core::writer::Writer::needs_quotes(ref$&lt;slice2$ (12 samples, 0.44%)</title><rect x="4.6615%" y="517" width="0.4440%" height="15" fill="rgb(250,108,0)" fg:x="126" fg:w="12"/><text x="4.9115%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::any(core::slice::iter::Iter (10 samples, 0.37%)</title><rect x="4.7355%" y="501" width="0.3700%" height="15" fill="rgb(228,208,7)" fg:x="128" fg:w="10"/><text x="4.9855%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (3 samples, 0.11%)</title><rect x="4.9945%" y="485" width="0.1110%" height="15" fill="rgb(244,45,10)" fg:x="135" fg:w="3"/><text x="5.2445%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (3 samples, 0.11%)</title><rect x="4.9945%" y="469" width="0.1110%" height="15" fill="rgb(207,125,25)" fg:x="135" fg:w="3"/><text x="5.2445%" y="479.50"></text></g><g><title>`0x7FFCC4ED1200 (2 samples, 0.07%)</title><rect x="5.1054%" y="485" width="0.0740%" height="15" fill="rgb(210,195,18)" fg:x="138" fg:w="2"/><text x="5.3554%" y="495.50"></text></g><g><title>`0x7FFCC4ED1228 (1 samples, 0.04%)</title><rect x="5.1794%" y="485" width="0.0370%" height="15" fill="rgb(249,80,12)" fg:x="140" fg:w="1"/><text x="5.4294%" y="495.50"></text></g><g><title>`0x7FFCC4ED12F9 (1 samples, 0.04%)</title><rect x="5.2164%" y="485" width="0.0370%" height="15" fill="rgb(221,65,9)" fg:x="141" fg:w="1"/><text x="5.4664%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::Writer&lt;std::fs::File&gt;::write_field_impl (53 samples, 1.96%)</title><rect x="3.3666%" y="565" width="1.9608%" height="15" fill="rgb(235,49,36)" fg:x="91" fg:w="53"/><text x="3.6166%" y="575.50">k..</text></g><g><title>kuramoto_oscillators.exe`csv_core::writer::Writer::field(ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (27 samples, 1.00%)</title><rect x="4.3285%" y="549" width="0.9989%" height="15" fill="rgb(225,32,20)" fg:x="117" fg:w="27"/><text x="4.5785%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`csv_core::writer::write_optimistic(ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (6 samples, 0.22%)</title><rect x="5.1054%" y="533" width="0.2220%" height="15" fill="rgb(215,141,46)" fg:x="138" fg:w="6"/><text x="5.3554%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::impl$0::copy_from_slice(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (6 samples, 0.22%)</title><rect x="5.1054%" y="517" width="0.2220%" height="15" fill="rgb(250,160,47)" fg:x="138" fg:w="6"/><text x="5.3554%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::intrinsics::copy_nonoverlapping (6 samples, 0.22%)</title><rect x="5.1054%" y="501" width="0.2220%" height="15" fill="rgb(216,222,40)" fg:x="138" fg:w="6"/><text x="5.3554%" y="511.50"></text></g><g><title>`0x7FFCC4ED3010 (2 samples, 0.07%)</title><rect x="5.2534%" y="485" width="0.0740%" height="15" fill="rgb(234,217,39)" fg:x="142" fg:w="2"/><text x="5.5034%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::Writer&lt;std::fs::File&gt;::check_field_count (1 samples, 0.04%)</title><rect x="5.3274%" y="549" width="0.0370%" height="15" fill="rgb(207,178,40)" fg:x="144" fg:w="1"/><text x="5.5774%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec (123 samples, 4.55%)</title><rect x="0.8509%" y="645" width="4.5505%" height="15" fill="rgb(221,136,13)" fg:x="23" fg:w="123"/><text x="1.1009%" y="655.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$24::drop(alloc::vec::Vec&lt;alloc::vec::Vec (123 samples, 4.55%)</title><rect x="0.8509%" y="629" width="4.5505%" height="15" fill="rgb(249,199,10)" fg:x="23" fg:w="123"/><text x="1.1009%" y="639.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`ode_solver::write_result&lt;std::fs::File&gt;(alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;*, csv::writer::Writer (56 samples, 2.07%)</title><rect x="3.3296%" y="613" width="2.0718%" height="15" fill="rgb(249,222,13)" fg:x="90" fg:w="56"/><text x="3.5796%" y="623.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;tuple$ (56 samples, 2.07%)</title><rect x="3.3296%" y="597" width="2.0718%" height="15" fill="rgb(244,185,38)" fg:x="90" fg:w="56"/><text x="3.5796%" y="607.50">k..</text></g><g><title>kuramoto_oscillators.exe`csv::writer::Writer&lt;std::fs::File&gt;::write_record&lt;std::fs::File,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,ref$&lt;alloc::string::String&gt; &gt;(alloc::vec::Vec (56 samples, 2.07%)</title><rect x="3.3296%" y="581" width="2.0718%" height="15" fill="rgb(236,202,9)" fg:x="90" fg:w="56"/><text x="3.5796%" y="591.50">k..</text></g><g><title>kuramoto_oscillators.exe`csv::writer::Writer&lt;std::fs::File&gt;::write_terminator (2 samples, 0.07%)</title><rect x="5.3274%" y="565" width="0.0740%" height="15" fill="rgb(250,229,37)" fg:x="144" fg:w="2"/><text x="5.5774%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`csv_core::writer::Writer::terminator(ref_mut$&lt;slice2$ (1 samples, 0.04%)</title><rect x="5.3644%" y="549" width="0.0370%" height="15" fill="rgb(206,174,23)" fg:x="145" fg:w="1"/><text x="5.6144%" y="559.50"></text></g><g><title>`0x7FFCE153478C (1 samples, 0.04%)</title><rect x="5.4014%" y="549" width="0.0370%" height="15" fill="rgb(211,33,43)" fg:x="146" fg:w="1"/><text x="5.6514%" y="559.50"></text></g><g><title>`0x7FFCE15B74E8 (1 samples, 0.04%)</title><rect x="5.4384%" y="533" width="0.0370%" height="15" fill="rgb(245,58,50)" fg:x="147" fg:w="1"/><text x="5.6884%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(matrix::Matrix (3 samples, 0.11%)</title><rect x="5.4014%" y="645" width="0.1110%" height="15" fill="rgb(244,68,36)" fg:x="146" fg:w="3"/><text x="5.6514%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.11%)</title><rect x="5.4014%" y="629" width="0.1110%" height="15" fill="rgb(232,229,15)" fg:x="146" fg:w="3"/><text x="5.6514%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.11%)</title><rect x="5.4014%" y="613" width="0.1110%" height="15" fill="rgb(254,30,23)" fg:x="146" fg:w="3"/><text x="5.6514%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 0.11%)</title><rect x="5.4014%" y="597" width="0.1110%" height="15" fill="rgb(235,160,14)" fg:x="146" fg:w="3"/><text x="5.6514%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.11%)</title><rect x="5.4014%" y="581" width="0.1110%" height="15" fill="rgb(212,155,44)" fg:x="146" fg:w="3"/><text x="5.6514%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::dealloc (3 samples, 0.11%)</title><rect x="5.4014%" y="565" width="0.1110%" height="15" fill="rgb(226,2,50)" fg:x="146" fg:w="3"/><text x="5.6514%" y="575.50"></text></g><g><title>`0x7FFCE15347B1 (2 samples, 0.07%)</title><rect x="5.4384%" y="549" width="0.0740%" height="15" fill="rgb(234,177,6)" fg:x="147" fg:w="2"/><text x="5.6884%" y="559.50"></text></g><g><title>`0x7FFCE15B750C (1 samples, 0.04%)</title><rect x="5.4754%" y="533" width="0.0370%" height="15" fill="rgb(217,24,9)" fg:x="148" fg:w="1"/><text x="5.7254%" y="543.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="5.5124%" y="629" width="0.0370%" height="15" fill="rgb(220,13,46)" fg:x="149" fg:w="1"/><text x="5.7624%" y="639.50"></text></g><g><title>`0x7FFCE15B75BA (1 samples, 0.04%)</title><rect x="5.5124%" y="613" width="0.0370%" height="15" fill="rgb(239,221,27)" fg:x="149" fg:w="1"/><text x="5.7624%" y="623.50"></text></g><g><title>`0x7FFCE1534760 (1 samples, 0.04%)</title><rect x="5.5494%" y="565" width="0.0370%" height="15" fill="rgb(222,198,25)" fg:x="150" fg:w="1"/><text x="5.7994%" y="575.50"></text></g><g><title>`0x7FFCE1535715 (1 samples, 0.04%)</title><rect x="5.5864%" y="549" width="0.0370%" height="15" fill="rgb(211,99,13)" fg:x="151" fg:w="1"/><text x="5.8364%" y="559.50"></text></g><g><title>`0x7FFCE153592A (1 samples, 0.04%)</title><rect x="5.6234%" y="549" width="0.0370%" height="15" fill="rgb(232,111,31)" fg:x="152" fg:w="1"/><text x="5.8734%" y="559.50"></text></g><g><title>`0x7FFCE1535C05 (1 samples, 0.04%)</title><rect x="5.6604%" y="533" width="0.0370%" height="15" fill="rgb(245,82,37)" fg:x="153" fg:w="1"/><text x="5.9104%" y="543.50"></text></g><g><title>`0x7FFCE1535B74 (2 samples, 0.07%)</title><rect x="5.6604%" y="549" width="0.0740%" height="15" fill="rgb(227,149,46)" fg:x="153" fg:w="2"/><text x="5.9104%" y="559.50"></text></g><g><title>`0x7FFCE1536362 (1 samples, 0.04%)</title><rect x="5.6974%" y="533" width="0.0370%" height="15" fill="rgb(218,36,50)" fg:x="154" fg:w="1"/><text x="5.9474%" y="543.50"></text></g><g><title>`0x7FFCE15B74BA (1 samples, 0.04%)</title><rect x="5.7344%" y="549" width="0.0370%" height="15" fill="rgb(226,80,48)" fg:x="155" fg:w="1"/><text x="5.9844%" y="559.50"></text></g><g><title>`0x7FFCE15B74CF (1 samples, 0.04%)</title><rect x="5.7714%" y="549" width="0.0370%" height="15" fill="rgb(238,224,15)" fg:x="156" fg:w="1"/><text x="6.0214%" y="559.50"></text></g><g><title>`0x7FFCE15B750F (1 samples, 0.04%)</title><rect x="5.8084%" y="549" width="0.0370%" height="15" fill="rgb(241,136,10)" fg:x="157" fg:w="1"/><text x="6.0584%" y="559.50"></text></g><g><title>`0x7FFCE15347B1 (9 samples, 0.33%)</title><rect x="5.5864%" y="565" width="0.3330%" height="15" fill="rgb(208,32,45)" fg:x="151" fg:w="9"/><text x="5.8364%" y="575.50"></text></g><g><title>`0x7FFCE15B75BA (2 samples, 0.07%)</title><rect x="5.8454%" y="549" width="0.0740%" height="15" fill="rgb(207,135,9)" fg:x="158" fg:w="2"/><text x="6.0954%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(matrix::Matrix (11 samples, 0.41%)</title><rect x="5.5494%" y="629" width="0.4070%" height="15" fill="rgb(206,86,44)" fg:x="150" fg:w="11"/><text x="5.7994%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (11 samples, 0.41%)</title><rect x="5.5494%" y="613" width="0.4070%" height="15" fill="rgb(245,177,15)" fg:x="150" fg:w="11"/><text x="5.7994%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (11 samples, 0.41%)</title><rect x="5.5494%" y="597" width="0.4070%" height="15" fill="rgb(206,64,50)" fg:x="150" fg:w="11"/><text x="5.7994%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (11 samples, 0.41%)</title><rect x="5.5494%" y="581" width="0.4070%" height="15" fill="rgb(234,36,40)" fg:x="150" fg:w="11"/><text x="5.7994%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::current_memory (1 samples, 0.04%)</title><rect x="5.9193%" y="565" width="0.0370%" height="15" fill="rgb(213,64,8)" fg:x="160" fg:w="1"/><text x="6.1693%" y="575.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="5.9193%" y="549" width="0.0370%" height="15" fill="rgb(210,75,36)" fg:x="160" fg:w="1"/><text x="6.1693%" y="559.50"></text></g><g><title>`0x7FFCE15B74BA (1 samples, 0.04%)</title><rect x="5.9193%" y="533" width="0.0370%" height="15" fill="rgb(229,88,21)" fg:x="160" fg:w="1"/><text x="6.1693%" y="543.50"></text></g><g><title>`0x7FFCE153B73C (1 samples, 0.04%)</title><rect x="5.9563%" y="469" width="0.0370%" height="15" fill="rgb(252,204,47)" fg:x="161" fg:w="1"/><text x="6.2063%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.07%)</title><rect x="5.9563%" y="549" width="0.0740%" height="15" fill="rgb(208,77,27)" fg:x="161" fg:w="2"/><text x="6.2063%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="5.9563%" y="533" width="0.0740%" height="15" fill="rgb(221,76,26)" fg:x="161" fg:w="2"/><text x="6.2063%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="5.9563%" y="517" width="0.0740%" height="15" fill="rgb(225,139,18)" fg:x="161" fg:w="2"/><text x="6.2063%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (2 samples, 0.07%)</title><rect x="5.9563%" y="501" width="0.0740%" height="15" fill="rgb(230,137,11)" fg:x="161" fg:w="2"/><text x="6.2063%" y="511.50"></text></g><g><title>`0x7FFCE153B3C7 (2 samples, 0.07%)</title><rect x="5.9563%" y="485" width="0.0740%" height="15" fill="rgb(212,28,1)" fg:x="161" fg:w="2"/><text x="6.2063%" y="495.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="5.9933%" y="469" width="0.0370%" height="15" fill="rgb(248,164,17)" fg:x="162" fg:w="1"/><text x="6.2433%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt; &gt; &gt;*, tuple$ (6 samples, 0.22%)</title><rect x="6.0673%" y="453" width="0.2220%" height="15" fill="rgb(222,171,42)" fg:x="164" fg:w="6"/><text x="6.3173%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (6 samples, 0.22%)</title><rect x="6.0673%" y="437" width="0.2220%" height="15" fill="rgb(243,84,45)" fg:x="164" fg:w="6"/><text x="6.3173%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::write (6 samples, 0.22%)</title><rect x="6.0673%" y="421" width="0.2220%" height="15" fill="rgb(252,49,23)" fg:x="164" fg:w="6"/><text x="6.3173%" y="431.50"></text></g><g><title>`0x7FFCDF12F5CB (1 samples, 0.04%)</title><rect x="6.2523%" y="405" width="0.0370%" height="15" fill="rgb(215,19,7)" fg:x="169" fg:w="1"/><text x="6.5023%" y="415.50"></text></g><g><title>`0x7FFCDF12F5C0 (1 samples, 0.04%)</title><rect x="6.4373%" y="405" width="0.0370%" height="15" fill="rgb(238,81,41)" fg:x="174" fg:w="1"/><text x="6.6873%" y="415.50"></text></g><g><title>`0x7FFCDF12F5C4 (1 samples, 0.04%)</title><rect x="6.4743%" y="405" width="0.0370%" height="15" fill="rgb(210,199,37)" fg:x="175" fg:w="1"/><text x="6.7243%" y="415.50"></text></g><g><title>`0x7FFCDF12F5CB (2 samples, 0.07%)</title><rect x="6.5113%" y="405" width="0.0740%" height="15" fill="rgb(244,192,49)" fg:x="176" fg:w="2"/><text x="6.7613%" y="415.50"></text></g><g><title>`0x7FFCDF12F92D (1 samples, 0.04%)</title><rect x="6.5853%" y="405" width="0.0370%" height="15" fill="rgb(226,211,11)" fg:x="178" fg:w="1"/><text x="6.8353%" y="415.50"></text></g><g><title>`0x7FFCDF12F934 (2 samples, 0.07%)</title><rect x="6.6223%" y="405" width="0.0740%" height="15" fill="rgb(236,162,54)" fg:x="179" fg:w="2"/><text x="6.8723%" y="415.50"></text></g><g><title>`0x7FFCDF12F93A (1 samples, 0.04%)</title><rect x="6.6963%" y="405" width="0.0370%" height="15" fill="rgb(220,229,9)" fg:x="181" fg:w="1"/><text x="6.9463%" y="415.50"></text></g><g><title>`0x7FFCDF12F941 (2 samples, 0.07%)</title><rect x="6.7333%" y="405" width="0.0740%" height="15" fill="rgb(250,87,22)" fg:x="182" fg:w="2"/><text x="6.9833%" y="415.50"></text></g><g><title>`0x7FFCDF12F990 (1 samples, 0.04%)</title><rect x="6.8073%" y="405" width="0.0370%" height="15" fill="rgb(239,43,17)" fg:x="184" fg:w="1"/><text x="7.0573%" y="415.50"></text></g><g><title>`0x7FFCDF12F9A5 (2 samples, 0.07%)</title><rect x="6.8442%" y="405" width="0.0740%" height="15" fill="rgb(231,177,25)" fg:x="185" fg:w="2"/><text x="7.0942%" y="415.50"></text></g><g><title>`0x7FFCDF12F9AE (2 samples, 0.07%)</title><rect x="6.9182%" y="405" width="0.0740%" height="15" fill="rgb(219,179,1)" fg:x="187" fg:w="2"/><text x="7.1682%" y="415.50"></text></g><g><title>`0x7FFCDF12F9B7 (2 samples, 0.07%)</title><rect x="6.9922%" y="405" width="0.0740%" height="15" fill="rgb(238,219,53)" fg:x="189" fg:w="2"/><text x="7.2422%" y="415.50"></text></g><g><title>`0x7FFCDF12F9CD (3 samples, 0.11%)</title><rect x="7.0662%" y="405" width="0.1110%" height="15" fill="rgb(232,167,36)" fg:x="191" fg:w="3"/><text x="7.3162%" y="415.50"></text></g><g><title>`0x7FFCDF12F9D2 (6 samples, 0.22%)</title><rect x="7.1772%" y="405" width="0.2220%" height="15" fill="rgb(244,19,51)" fg:x="194" fg:w="6"/><text x="7.4272%" y="415.50"></text></g><g><title>`0x7FFCDF12F9E7 (1 samples, 0.04%)</title><rect x="7.3992%" y="405" width="0.0370%" height="15" fill="rgb(224,6,22)" fg:x="200" fg:w="1"/><text x="7.6492%" y="415.50"></text></g><g><title>`0x7FFCDF12F9F2 (1 samples, 0.04%)</title><rect x="7.4362%" y="405" width="0.0370%" height="15" fill="rgb(224,145,5)" fg:x="201" fg:w="1"/><text x="7.6862%" y="415.50"></text></g><g><title>`0x7FFCDF12F9F9 (1 samples, 0.04%)</title><rect x="7.4732%" y="405" width="0.0370%" height="15" fill="rgb(234,130,49)" fg:x="202" fg:w="1"/><text x="7.7232%" y="415.50"></text></g><g><title>`0x7FFCDF12F540 (1 samples, 0.04%)</title><rect x="7.5102%" y="389" width="0.0370%" height="15" fill="rgb(254,6,2)" fg:x="203" fg:w="1"/><text x="7.7602%" y="399.50"></text></g><g><title>`0x7FFCDF12F54C (2 samples, 0.07%)</title><rect x="7.5472%" y="389" width="0.0740%" height="15" fill="rgb(208,96,46)" fg:x="204" fg:w="2"/><text x="7.7972%" y="399.50"></text></g><g><title>`0x7FFCDF12F554 (1 samples, 0.04%)</title><rect x="7.6212%" y="389" width="0.0370%" height="15" fill="rgb(239,3,39)" fg:x="206" fg:w="1"/><text x="7.8712%" y="399.50"></text></g><g><title>`0x7FFCDF12F55D (3 samples, 0.11%)</title><rect x="7.6582%" y="389" width="0.1110%" height="15" fill="rgb(233,210,1)" fg:x="207" fg:w="3"/><text x="7.9082%" y="399.50"></text></g><g><title>`0x7FFCDF12F561 (5 samples, 0.18%)</title><rect x="7.7691%" y="389" width="0.1850%" height="15" fill="rgb(244,137,37)" fg:x="210" fg:w="5"/><text x="8.0191%" y="399.50"></text></g><g><title>`0x7FFCDF12F565 (1 samples, 0.04%)</title><rect x="7.9541%" y="389" width="0.0370%" height="15" fill="rgb(240,136,2)" fg:x="215" fg:w="1"/><text x="8.2041%" y="399.50"></text></g><g><title>`0x7FFCDF12F57B (1 samples, 0.04%)</title><rect x="7.9911%" y="389" width="0.0370%" height="15" fill="rgb(239,18,37)" fg:x="216" fg:w="1"/><text x="8.2411%" y="399.50"></text></g><g><title>`0x7FFCDF12F584 (2 samples, 0.07%)</title><rect x="8.0281%" y="389" width="0.0740%" height="15" fill="rgb(218,185,22)" fg:x="217" fg:w="2"/><text x="8.2781%" y="399.50"></text></g><g><title>`0x7FFCDF12F590 (3 samples, 0.11%)</title><rect x="8.1021%" y="389" width="0.1110%" height="15" fill="rgb(225,218,4)" fg:x="219" fg:w="3"/><text x="8.3521%" y="399.50"></text></g><g><title>`0x7FFCDF12F5A1 (5 samples, 0.18%)</title><rect x="8.2131%" y="389" width="0.1850%" height="15" fill="rgb(230,182,32)" fg:x="222" fg:w="5"/><text x="8.4631%" y="399.50"></text></g><g><title>`0x7FFCDF12F5A5 (4 samples, 0.15%)</title><rect x="8.3981%" y="389" width="0.1480%" height="15" fill="rgb(242,56,43)" fg:x="227" fg:w="4"/><text x="8.6481%" y="399.50"></text></g><g><title>`0x7FFCDF12FA04 (30 samples, 1.11%)</title><rect x="7.5102%" y="405" width="1.1099%" height="15" fill="rgb(233,99,24)" fg:x="203" fg:w="30"/><text x="7.7602%" y="415.50"></text></g><g><title>`0x7FFCDF12F5B2 (2 samples, 0.07%)</title><rect x="8.5461%" y="389" width="0.0740%" height="15" fill="rgb(234,209,42)" fg:x="231" fg:w="2"/><text x="8.7961%" y="399.50"></text></g><g><title>`0x7FFCDF12FA0D (3 samples, 0.11%)</title><rect x="8.6201%" y="405" width="0.1110%" height="15" fill="rgb(227,7,12)" fg:x="233" fg:w="3"/><text x="8.8701%" y="415.50"></text></g><g><title>`0x7FFCDF12FA20 (1 samples, 0.04%)</title><rect x="8.7310%" y="405" width="0.0370%" height="15" fill="rgb(245,203,43)" fg:x="236" fg:w="1"/><text x="8.9810%" y="415.50"></text></g><g><title>`0x7FFCDF12FA29 (1 samples, 0.04%)</title><rect x="8.7680%" y="405" width="0.0370%" height="15" fill="rgb(238,205,33)" fg:x="237" fg:w="1"/><text x="9.0180%" y="415.50"></text></g><g><title>`0x7FFCDF12FA4F (4 samples, 0.15%)</title><rect x="8.8050%" y="405" width="0.1480%" height="15" fill="rgb(231,56,7)" fg:x="238" fg:w="4"/><text x="9.0550%" y="415.50"></text></g><g><title>`0x7FFCDF12FA53 (1 samples, 0.04%)</title><rect x="8.9530%" y="405" width="0.0370%" height="15" fill="rgb(244,186,29)" fg:x="242" fg:w="1"/><text x="9.2030%" y="415.50"></text></g><g><title>`0x7FFCDF12FA60 (3 samples, 0.11%)</title><rect x="8.9900%" y="405" width="0.1110%" height="15" fill="rgb(234,111,31)" fg:x="243" fg:w="3"/><text x="9.2400%" y="415.50"></text></g><g><title>`0x7FFCDF12FA64 (1 samples, 0.04%)</title><rect x="9.1010%" y="405" width="0.0370%" height="15" fill="rgb(241,149,10)" fg:x="246" fg:w="1"/><text x="9.3510%" y="415.50"></text></g><g><title>`0x7FFCDF12FA88 (2 samples, 0.07%)</title><rect x="9.1380%" y="405" width="0.0740%" height="15" fill="rgb(249,206,44)" fg:x="247" fg:w="2"/><text x="9.3880%" y="415.50"></text></g><g><title>`0x7FFCDF12FA99 (3 samples, 0.11%)</title><rect x="9.2120%" y="405" width="0.1110%" height="15" fill="rgb(251,153,30)" fg:x="249" fg:w="3"/><text x="9.4620%" y="415.50"></text></g><g><title>`0x7FFCDF12FAAF (1 samples, 0.04%)</title><rect x="9.3230%" y="405" width="0.0370%" height="15" fill="rgb(239,152,38)" fg:x="252" fg:w="1"/><text x="9.5730%" y="415.50"></text></g><g><title>`0x7FFCDF12FACF (3 samples, 0.11%)</title><rect x="9.3600%" y="405" width="0.1110%" height="15" fill="rgb(249,139,47)" fg:x="253" fg:w="3"/><text x="9.6100%" y="415.50"></text></g><g><title>`0x7FFCDF12FAD3 (2 samples, 0.07%)</title><rect x="9.4710%" y="405" width="0.0740%" height="15" fill="rgb(244,64,35)" fg:x="256" fg:w="2"/><text x="9.7210%" y="415.50"></text></g><g><title>`0x7FFCDF12FAE1 (1 samples, 0.04%)</title><rect x="9.5450%" y="405" width="0.0370%" height="15" fill="rgb(216,46,15)" fg:x="258" fg:w="1"/><text x="9.7950%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (97 samples, 3.59%)</title><rect x="6.0303%" y="549" width="3.5886%" height="15" fill="rgb(250,74,19)" fg:x="163" fg:w="97"/><text x="6.2803%" y="559.50">kura..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (97 samples, 3.59%)</title><rect x="6.0303%" y="533" width="3.5886%" height="15" fill="rgb(249,42,33)" fg:x="163" fg:w="97"/><text x="6.2803%" y="543.50">kura..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (97 samples, 3.59%)</title><rect x="6.0303%" y="517" width="3.5886%" height="15" fill="rgb(242,149,17)" fg:x="163" fg:w="97"/><text x="6.2803%" y="527.50">kura..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (97 samples, 3.59%)</title><rect x="6.0303%" y="501" width="3.5886%" height="15" fill="rgb(244,29,21)" fg:x="163" fg:w="97"/><text x="6.2803%" y="511.50">kura..</text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,f64,tuple$&lt;&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (97 samples, 3.59%)</title><rect x="6.0303%" y="485" width="3.5886%" height="15" fill="rgb(220,130,37)" fg:x="163" fg:w="97"/><text x="6.2803%" y="495.50">kura..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,f64,tuple$&lt;&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt; &gt; &gt; &gt;*, tuple$ (96 samples, 3.55%)</title><rect x="6.0673%" y="469" width="3.5516%" height="15" fill="rgb(211,67,2)" fg:x="164" fg:w="96"/><text x="6.3173%" y="479.50">kura..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::float::impl$2::sin::closure$0(matrix::ops::float::impl$2::sin::closure_env$0 (90 samples, 3.33%)</title><rect x="6.2893%" y="453" width="3.3296%" height="15" fill="rgb(235,68,52)" fg:x="170" fg:w="90"/><text x="6.5393%" y="463.50">kur..</text></g><g><title>kuramoto_oscillators.exe`num_traits::float::impl$3::sin (90 samples, 3.33%)</title><rect x="6.2893%" y="437" width="3.3296%" height="15" fill="rgb(246,142,3)" fg:x="170" fg:w="90"/><text x="6.5393%" y="447.50">kur..</text></g><g><title>kuramoto_oscillators.exe`std::f64::impl$0::sin (90 samples, 3.33%)</title><rect x="6.2893%" y="421" width="3.3296%" height="15" fill="rgb(241,25,7)" fg:x="170" fg:w="90"/><text x="6.5393%" y="431.50">kur..</text></g><g><title>`0x7FFCDF12FAF9 (1 samples, 0.04%)</title><rect x="9.5819%" y="405" width="0.0370%" height="15" fill="rgb(242,119,39)" fg:x="259" fg:w="1"/><text x="9.8319%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (100 samples, 3.70%)</title><rect x="5.9563%" y="613" width="3.6996%" height="15" fill="rgb(241,98,45)" fg:x="161" fg:w="100"/><text x="6.2063%" y="623.50">kura..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$14::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (100 samples, 3.70%)</title><rect x="5.9563%" y="597" width="3.6996%" height="15" fill="rgb(254,28,30)" fg:x="161" fg:w="100"/><text x="6.2063%" y="607.50">kura..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (100 samples, 3.70%)</title><rect x="5.9563%" y="581" width="3.6996%" height="15" fill="rgb(241,142,54)" fg:x="161" fg:w="100"/><text x="6.2063%" y="591.50">kura..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (100 samples, 3.70%)</title><rect x="5.9563%" y="565" width="3.6996%" height="15" fill="rgb(222,85,15)" fg:x="161" fg:w="100"/><text x="6.2063%" y="575.50">kura..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::size_hint(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (1 samples, 0.04%)</title><rect x="9.6189%" y="549" width="0.0370%" height="15" fill="rgb(210,85,47)" fg:x="260" fg:w="1"/><text x="9.8689%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::size_hint(core::slice::iter::Iter (1 samples, 0.04%)</title><rect x="9.6189%" y="533" width="0.0370%" height="15" fill="rgb(224,206,25)" fg:x="260" fg:w="1"/><text x="9.8689%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::NonNull&lt;f64&gt;::sub_ptr(core::ptr::non_null::NonNull&lt;f64&gt;, core::ptr::non_null::NonNull (1 samples, 0.04%)</title><rect x="9.6189%" y="517" width="0.0370%" height="15" fill="rgb(243,201,19)" fg:x="260" fg:w="1"/><text x="9.8689%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::const_ptr::impl$0::sub_ptr (1 samples, 0.04%)</title><rect x="9.6189%" y="501" width="0.0370%" height="15" fill="rgb(236,59,4)" fg:x="260" fg:w="1"/><text x="9.8689%" y="511.50"></text></g><g><title>`0x7FFCE1535715 (1 samples, 0.04%)</title><rect x="9.6559%" y="469" width="0.0370%" height="15" fill="rgb(254,179,45)" fg:x="261" fg:w="1"/><text x="9.9059%" y="479.50"></text></g><g><title>`0x7FFCE1535B90 (1 samples, 0.04%)</title><rect x="9.6929%" y="469" width="0.0370%" height="15" fill="rgb(226,14,10)" fg:x="262" fg:w="1"/><text x="9.9429%" y="479.50"></text></g><g><title>`0x7FFCE15347B1 (3 samples, 0.11%)</title><rect x="9.6559%" y="485" width="0.1110%" height="15" fill="rgb(244,27,41)" fg:x="261" fg:w="3"/><text x="9.9059%" y="495.50"></text></g><g><title>`0x7FFCE15B75BA (1 samples, 0.04%)</title><rect x="9.7299%" y="469" width="0.0370%" height="15" fill="rgb(235,35,32)" fg:x="263" fg:w="1"/><text x="9.9799%" y="479.50"></text></g><g><title>`0x7FFCE153B3C2 (1 samples, 0.04%)</title><rect x="9.7669%" y="485" width="0.0370%" height="15" fill="rgb(218,68,31)" fg:x="264" fg:w="1"/><text x="10.0169%" y="495.50"></text></g><g><title>`0x7FFCE153B7A2 (2 samples, 0.07%)</title><rect x="9.8039%" y="469" width="0.0740%" height="15" fill="rgb(207,120,37)" fg:x="265" fg:w="2"/><text x="10.0539%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (7 samples, 0.26%)</title><rect x="9.6559%" y="549" width="0.2590%" height="15" fill="rgb(227,98,0)" fg:x="261" fg:w="7"/><text x="9.9059%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.26%)</title><rect x="9.6559%" y="533" width="0.2590%" height="15" fill="rgb(207,7,3)" fg:x="261" fg:w="7"/><text x="9.9059%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.26%)</title><rect x="9.6559%" y="517" width="0.2590%" height="15" fill="rgb(206,98,19)" fg:x="261" fg:w="7"/><text x="9.9059%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (7 samples, 0.26%)</title><rect x="9.6559%" y="501" width="0.2590%" height="15" fill="rgb(217,5,26)" fg:x="261" fg:w="7"/><text x="9.9059%" y="511.50"></text></g><g><title>`0x7FFCE153B3C7 (3 samples, 0.11%)</title><rect x="9.8039%" y="485" width="0.1110%" height="15" fill="rgb(235,190,38)" fg:x="265" fg:w="3"/><text x="10.0539%" y="495.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="9.8779%" y="469" width="0.0370%" height="15" fill="rgb(247,86,24)" fg:x="267" fg:w="1"/><text x="10.1279%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt; &gt; &gt;*, tuple$ (2 samples, 0.07%)</title><rect x="9.9519%" y="453" width="0.0740%" height="15" fill="rgb(205,101,16)" fg:x="269" fg:w="2"/><text x="10.2019%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (2 samples, 0.07%)</title><rect x="9.9519%" y="437" width="0.0740%" height="15" fill="rgb(246,168,33)" fg:x="269" fg:w="2"/><text x="10.2019%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::write (2 samples, 0.07%)</title><rect x="9.9519%" y="421" width="0.0740%" height="15" fill="rgb(231,114,1)" fg:x="269" fg:w="2"/><text x="10.2019%" y="431.50"></text></g><g><title>`0x7FFCDF12F5C0 (1 samples, 0.04%)</title><rect x="10.0629%" y="405" width="0.0370%" height="15" fill="rgb(207,184,53)" fg:x="272" fg:w="1"/><text x="10.3129%" y="415.50"></text></g><g><title>`0x7FFCDF12F934 (1 samples, 0.04%)</title><rect x="10.0999%" y="405" width="0.0370%" height="15" fill="rgb(224,95,51)" fg:x="273" fg:w="1"/><text x="10.3499%" y="415.50"></text></g><g><title>`0x7FFCDF12F9B7 (2 samples, 0.07%)</title><rect x="10.1369%" y="405" width="0.0740%" height="15" fill="rgb(212,188,45)" fg:x="274" fg:w="2"/><text x="10.3869%" y="415.50"></text></g><g><title>`0x7FFCDF12F9C0 (1 samples, 0.04%)</title><rect x="10.2109%" y="405" width="0.0370%" height="15" fill="rgb(223,154,38)" fg:x="276" fg:w="1"/><text x="10.4609%" y="415.50"></text></g><g><title>`0x7FFCDF12F9CD (1 samples, 0.04%)</title><rect x="10.2479%" y="405" width="0.0370%" height="15" fill="rgb(251,22,52)" fg:x="277" fg:w="1"/><text x="10.4979%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (19 samples, 0.70%)</title><rect x="9.6559%" y="613" width="0.7029%" height="15" fill="rgb(229,209,22)" fg:x="261" fg:w="19"/><text x="9.9059%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$14::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (19 samples, 0.70%)</title><rect x="9.6559%" y="597" width="0.7029%" height="15" fill="rgb(234,138,34)" fg:x="261" fg:w="19"/><text x="9.9059%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (19 samples, 0.70%)</title><rect x="9.6559%" y="581" width="0.7029%" height="15" fill="rgb(212,95,11)" fg:x="261" fg:w="19"/><text x="9.9059%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (19 samples, 0.70%)</title><rect x="9.6559%" y="565" width="0.7029%" height="15" fill="rgb(240,179,47)" fg:x="261" fg:w="19"/><text x="9.9059%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (12 samples, 0.44%)</title><rect x="9.9149%" y="549" width="0.4440%" height="15" fill="rgb(240,163,11)" fg:x="268" fg:w="12"/><text x="10.1649%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (12 samples, 0.44%)</title><rect x="9.9149%" y="533" width="0.4440%" height="15" fill="rgb(236,37,12)" fg:x="268" fg:w="12"/><text x="10.1649%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (12 samples, 0.44%)</title><rect x="9.9149%" y="517" width="0.4440%" height="15" fill="rgb(232,164,16)" fg:x="268" fg:w="12"/><text x="10.1649%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (12 samples, 0.44%)</title><rect x="9.9149%" y="501" width="0.4440%" height="15" fill="rgb(244,205,15)" fg:x="268" fg:w="12"/><text x="10.1649%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,f64,tuple$&lt;&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0 (12 samples, 0.44%)</title><rect x="9.9149%" y="485" width="0.4440%" height="15" fill="rgb(223,117,47)" fg:x="268" fg:w="12"/><text x="10.1649%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,f64,tuple$&lt;&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$2::sin::closure_env$0&lt;f64&gt; &gt; &gt; &gt; &gt;*, tuple$ (11 samples, 0.41%)</title><rect x="9.9519%" y="469" width="0.4070%" height="15" fill="rgb(244,107,35)" fg:x="269" fg:w="11"/><text x="10.2019%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::float::impl$2::sin::closure$0(matrix::ops::float::impl$2::sin::closure_env$0 (9 samples, 0.33%)</title><rect x="10.0259%" y="453" width="0.3330%" height="15" fill="rgb(205,140,8)" fg:x="271" fg:w="9"/><text x="10.2759%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`num_traits::float::impl$3::sin (9 samples, 0.33%)</title><rect x="10.0259%" y="437" width="0.3330%" height="15" fill="rgb(228,84,46)" fg:x="271" fg:w="9"/><text x="10.2759%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`std::f64::impl$0::sin (9 samples, 0.33%)</title><rect x="10.0259%" y="421" width="0.3330%" height="15" fill="rgb(254,188,9)" fg:x="271" fg:w="9"/><text x="10.2759%" y="431.50"></text></g><g><title>`0x7FFCDF12F9D2 (2 samples, 0.07%)</title><rect x="10.2849%" y="405" width="0.0740%" height="15" fill="rgb(206,112,54)" fg:x="278" fg:w="2"/><text x="10.5349%" y="415.50"></text></g><g><title>`0x7FFCE153B2A6 (1 samples, 0.04%)</title><rect x="10.3959%" y="453" width="0.0370%" height="15" fill="rgb(216,84,49)" fg:x="281" fg:w="1"/><text x="10.6459%" y="463.50"></text></g><g><title>`0x7FFCE153B73C (1 samples, 0.04%)</title><rect x="10.4329%" y="437" width="0.0370%" height="15" fill="rgb(214,194,35)" fg:x="282" fg:w="1"/><text x="10.6829%" y="447.50"></text></g><g><title>`0x7FFCE153B748 (1 samples, 0.04%)</title><rect x="10.4698%" y="437" width="0.0370%" height="15" fill="rgb(249,28,3)" fg:x="283" fg:w="1"/><text x="10.7198%" y="447.50"></text></g><g><title>`0x7FFCE153B86B (1 samples, 0.04%)</title><rect x="10.5068%" y="437" width="0.0370%" height="15" fill="rgb(222,56,52)" fg:x="284" fg:w="1"/><text x="10.7568%" y="447.50"></text></g><g><title>`0x7FFCE15143E2 (1 samples, 0.04%)</title><rect x="10.5068%" y="421" width="0.0370%" height="15" fill="rgb(245,217,50)" fg:x="284" fg:w="1"/><text x="10.7568%" y="431.50"></text></g><g><title>`0x7FFCE153B3C7 (4 samples, 0.15%)</title><rect x="10.4329%" y="453" width="0.1480%" height="15" fill="rgb(213,201,24)" fg:x="282" fg:w="4"/><text x="10.6829%" y="463.50"></text></g><g><title>`0x7FFCE153B88E (1 samples, 0.04%)</title><rect x="10.5438%" y="437" width="0.0370%" height="15" fill="rgb(248,116,28)" fg:x="285" fg:w="1"/><text x="10.7938%" y="447.50"></text></g><g><title>`0x7FFCE153D644 (1 samples, 0.04%)</title><rect x="10.5808%" y="437" width="0.0370%" height="15" fill="rgb(219,72,43)" fg:x="286" fg:w="1"/><text x="10.8308%" y="447.50"></text></g><g><title>`0x7FFCE153D897 (1 samples, 0.04%)</title><rect x="10.6178%" y="437" width="0.0370%" height="15" fill="rgb(209,138,14)" fg:x="287" fg:w="1"/><text x="10.8678%" y="447.50"></text></g><g><title>`0x7FFCE153DA0F (1 samples, 0.04%)</title><rect x="10.6548%" y="437" width="0.0370%" height="15" fill="rgb(222,18,33)" fg:x="288" fg:w="1"/><text x="10.9048%" y="447.50"></text></g><g><title>`0x7FFCE153DB3B (1 samples, 0.04%)</title><rect x="10.6918%" y="437" width="0.0370%" height="15" fill="rgb(213,199,7)" fg:x="289" fg:w="1"/><text x="10.9418%" y="447.50"></text></g><g><title>`0x7FFCE153E2FA (1 samples, 0.04%)</title><rect x="10.7288%" y="437" width="0.0370%" height="15" fill="rgb(250,110,10)" fg:x="290" fg:w="1"/><text x="10.9788%" y="447.50"></text></g><g><title>`0x7FFCE153B44D (6 samples, 0.22%)</title><rect x="10.5808%" y="453" width="0.2220%" height="15" fill="rgb(248,123,6)" fg:x="286" fg:w="6"/><text x="10.8308%" y="463.50"></text></g><g><title>`0x7FFCE153EE54 (1 samples, 0.04%)</title><rect x="10.7658%" y="437" width="0.0370%" height="15" fill="rgb(206,91,31)" fg:x="291" fg:w="1"/><text x="11.0158%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (12 samples, 0.44%)</title><rect x="10.3959%" y="565" width="0.4440%" height="15" fill="rgb(211,154,13)" fg:x="281" fg:w="12"/><text x="10.6459%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.44%)</title><rect x="10.3959%" y="549" width="0.4440%" height="15" fill="rgb(225,148,7)" fg:x="281" fg:w="12"/><text x="10.6459%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.44%)</title><rect x="10.3959%" y="533" width="0.4440%" height="15" fill="rgb(220,160,43)" fg:x="281" fg:w="12"/><text x="10.6459%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (12 samples, 0.44%)</title><rect x="10.3959%" y="517" width="0.4440%" height="15" fill="rgb(213,52,39)" fg:x="281" fg:w="12"/><text x="10.6459%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::allocate (12 samples, 0.44%)</title><rect x="10.3959%" y="501" width="0.4440%" height="15" fill="rgb(243,137,7)" fg:x="281" fg:w="12"/><text x="10.6459%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::Global::alloc_impl (12 samples, 0.44%)</title><rect x="10.3959%" y="485" width="0.4440%" height="15" fill="rgb(230,79,13)" fg:x="281" fg:w="12"/><text x="10.6459%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::alloc (12 samples, 0.44%)</title><rect x="10.3959%" y="469" width="0.4440%" height="15" fill="rgb(247,105,23)" fg:x="281" fg:w="12"/><text x="10.6459%" y="479.50"></text></g><g><title>`0x7FFCE153B633 (1 samples, 0.04%)</title><rect x="10.8028%" y="453" width="0.0370%" height="15" fill="rgb(223,179,41)" fg:x="292" fg:w="1"/><text x="11.0528%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt; &gt;*, tuple$ (2 samples, 0.07%)</title><rect x="10.8398%" y="469" width="0.0740%" height="15" fill="rgb(218,9,34)" fg:x="293" fg:w="2"/><text x="11.0898%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (2 samples, 0.07%)</title><rect x="10.8398%" y="453" width="0.0740%" height="15" fill="rgb(222,106,8)" fg:x="293" fg:w="2"/><text x="11.0898%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::write (2 samples, 0.07%)</title><rect x="10.8398%" y="437" width="0.0740%" height="15" fill="rgb(211,220,0)" fg:x="293" fg:w="2"/><text x="11.0898%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$104::sum::closure$0(core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (48 samples, 1.78%)</title><rect x="14.5764%" y="373" width="1.7758%" height="15" fill="rgb(229,52,16)" fg:x="394" fg:w="48"/><text x="14.8264%" y="383.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt; &gt; &gt; &gt;*, double, tuple$&lt;ref$&lt;f64&gt;,ref$ (87 samples, 3.22%)</title><rect x="14.5764%" y="389" width="3.2186%" height="15" fill="rgb(212,155,18)" fg:x="394" fg:w="87"/><text x="14.8264%" y="399.50">kur..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul::closure$3::closure$0(matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;*, tuple$&lt;ref$&lt;f64&gt;,ref$ (39 samples, 1.44%)</title><rect x="16.3522%" y="373" width="1.4428%" height="15" fill="rgb(242,21,14)" fg:x="442" fg:w="39"/><text x="16.6022%" y="383.50"></text></g><g><title>kuramoto_oscillators.exe`core::ops::arith::impl$125::mul (39 samples, 1.44%)</title><rect x="16.3522%" y="357" width="1.4428%" height="15" fill="rgb(222,19,48)" fg:x="442" fg:w="39"/><text x="16.6022%" y="367.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (223 samples, 8.25%)</title><rect x="10.3959%" y="597" width="8.2501%" height="15" fill="rgb(232,45,27)" fg:x="281" fg:w="223"/><text x="10.6459%" y="607.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (223 samples, 8.25%)</title><rect x="10.3959%" y="581" width="8.2501%" height="15" fill="rgb(249,103,42)" fg:x="281" fg:w="223"/><text x="10.6459%" y="591.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (211 samples, 7.81%)</title><rect x="10.8398%" y="565" width="7.8061%" height="15" fill="rgb(246,81,33)" fg:x="293" fg:w="211"/><text x="11.0898%" y="575.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (211 samples, 7.81%)</title><rect x="10.8398%" y="549" width="7.8061%" height="15" fill="rgb(252,33,42)" fg:x="293" fg:w="211"/><text x="11.0898%" y="559.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (211 samples, 7.81%)</title><rect x="10.8398%" y="533" width="7.8061%" height="15" fill="rgb(209,212,41)" fg:x="293" fg:w="211"/><text x="11.0898%" y="543.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (211 samples, 7.81%)</title><rect x="10.8398%" y="517" width="7.8061%" height="15" fill="rgb(207,154,6)" fg:x="293" fg:w="211"/><text x="11.0898%" y="527.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Chunks&lt;f64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;f64&gt; &gt;,f64,tuple$&lt;&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (211 samples, 7.81%)</title><rect x="10.8398%" y="501" width="7.8061%" height="15" fill="rgb(223,64,47)" fg:x="293" fg:w="211"/><text x="11.0898%" y="511.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;f64&gt; &gt;,f64,tuple$&lt;&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, ref$&lt;slice2$ (211 samples, 7.81%)</title><rect x="10.8398%" y="485" width="7.8061%" height="15" fill="rgb(211,161,38)" fg:x="293" fg:w="211"/><text x="11.0898%" y="495.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul::closure$3(matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;*, ref$&lt;slice2$ (209 samples, 7.73%)</title><rect x="10.9138%" y="469" width="7.7321%" height="15" fill="rgb(219,138,40)" fg:x="295" fg:w="209"/><text x="11.1638%" y="479.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (209 samples, 7.73%)</title><rect x="10.9138%" y="453" width="7.7321%" height="15" fill="rgb(241,228,46)" fg:x="295" fg:w="209"/><text x="11.1638%" y="463.50">kuramoto_os..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$104::sum(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (207 samples, 7.66%)</title><rect x="10.9878%" y="437" width="7.6582%" height="15" fill="rgb(223,209,38)" fg:x="297" fg:w="207"/><text x="11.2378%" y="447.50">kuramoto_o..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt; &gt;, double, core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (207 samples, 7.66%)</title><rect x="10.9878%" y="421" width="7.6582%" height="15" fill="rgb(236,164,45)" fg:x="297" fg:w="207"/><text x="11.2378%" y="431.50">kuramoto_o..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;, double, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (207 samples, 7.66%)</title><rect x="10.9878%" y="405" width="7.6582%" height="15" fill="rgb(231,15,5)" fg:x="297" fg:w="207"/><text x="11.2378%" y="415.50">kuramoto_o..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (23 samples, 0.85%)</title><rect x="17.7950%" y="389" width="0.8509%" height="15" fill="rgb(252,35,15)" fg:x="481" fg:w="23"/><text x="18.0450%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$5::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (23 samples, 0.85%)</title><rect x="17.7950%" y="373" width="0.8509%" height="15" fill="rgb(248,181,18)" fg:x="481" fg:w="23"/><text x="18.0450%" y="383.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::Matrix&lt;f64&gt;::sin (344 samples, 12.73%)</title><rect x="5.9563%" y="629" width="12.7266%" height="15" fill="rgb(233,39,42)" fg:x="161" fg:w="344"/><text x="6.2063%" y="639.50">kuramoto_oscillator..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul&lt;f64&gt;(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (225 samples, 8.32%)</title><rect x="10.3589%" y="613" width="8.3241%" height="15" fill="rgb(238,110,33)" fg:x="280" fg:w="225"/><text x="10.6089%" y="623.50">kuramoto_osc..</text></g><g><title>kuramoto_oscillators.exe`matrix::Matrix&lt;f64&gt;::is_scalar (1 samples, 0.04%)</title><rect x="18.6459%" y="597" width="0.0370%" height="15" fill="rgb(233,195,10)" fg:x="504" fg:w="1"/><text x="18.8959%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_mut_ptr (33 samples, 1.22%)</title><rect x="33.2593%" y="597" width="1.2209%" height="15" fill="rgb(254,105,3)" fg:x="899" fg:w="33"/><text x="33.5093%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::ptr (33 samples, 1.22%)</title><rect x="33.2593%" y="581" width="1.2209%" height="15" fill="rgb(221,225,9)" fg:x="899" fg:w="33"/><text x="33.5093%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (436 samples, 16.13%)</title><rect x="21.1987%" y="613" width="16.1302%" height="15" fill="rgb(224,227,45)" fg:x="573" fg:w="436"/><text x="21.4487%" y="623.50">kuramoto_oscillators.exe`..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::write (77 samples, 2.85%)</title><rect x="34.4802%" y="597" width="2.8487%" height="15" fill="rgb(229,198,43)" fg:x="932" fg:w="77"/><text x="34.7302%" y="607.50">ku..</text></g><g><title>`0x7FFCE153B3F0 (1 samples, 0.04%)</title><rect x="37.3659%" y="549" width="0.0370%" height="15" fill="rgb(206,209,35)" fg:x="1010" fg:w="1"/><text x="37.6159%" y="559.50"></text></g><g><title>`0x7FFCE153D314 (1 samples, 0.04%)</title><rect x="37.4029%" y="533" width="0.0370%" height="15" fill="rgb(245,195,53)" fg:x="1011" fg:w="1"/><text x="37.6529%" y="543.50"></text></g><g><title>`0x7FFCE153D695 (1 samples, 0.04%)</title><rect x="37.4399%" y="533" width="0.0370%" height="15" fill="rgb(240,92,26)" fg:x="1012" fg:w="1"/><text x="37.6899%" y="543.50"></text></g><g><title>`0x7FFCE153D6AA (1 samples, 0.04%)</title><rect x="37.4769%" y="533" width="0.0370%" height="15" fill="rgb(207,40,23)" fg:x="1013" fg:w="1"/><text x="37.7269%" y="543.50"></text></g><g><title>`0x7FFCE153D7C1 (1 samples, 0.04%)</title><rect x="37.5139%" y="533" width="0.0370%" height="15" fill="rgb(223,111,35)" fg:x="1014" fg:w="1"/><text x="37.7639%" y="543.50"></text></g><g><title>`0x7FFCE151ED8A (3 samples, 0.11%)</title><rect x="37.5509%" y="517" width="0.1110%" height="15" fill="rgb(229,147,28)" fg:x="1015" fg:w="3"/><text x="37.8009%" y="527.50"></text></g><g><title>`0x7FFCE15AD864 (3 samples, 0.11%)</title><rect x="37.5509%" y="501" width="0.1110%" height="15" fill="rgb(211,29,28)" fg:x="1015" fg:w="3"/><text x="37.8009%" y="511.50"></text></g><g><title>`0x7FFCE153DB07 (4 samples, 0.15%)</title><rect x="37.5509%" y="533" width="0.1480%" height="15" fill="rgb(228,72,33)" fg:x="1015" fg:w="4"/><text x="37.8009%" y="543.50"></text></g><g><title>`0x7FFCE151ED99 (1 samples, 0.04%)</title><rect x="37.6619%" y="517" width="0.0370%" height="15" fill="rgb(205,214,31)" fg:x="1018" fg:w="1"/><text x="37.9119%" y="527.50"></text></g><g><title>`0x7FFCE1534859 (1 samples, 0.04%)</title><rect x="37.6619%" y="501" width="0.0370%" height="15" fill="rgb(224,111,15)" fg:x="1018" fg:w="1"/><text x="37.9119%" y="511.50"></text></g><g><title>`0x7FFCE151E348 (1 samples, 0.04%)</title><rect x="37.6989%" y="517" width="0.0370%" height="15" fill="rgb(253,21,26)" fg:x="1019" fg:w="1"/><text x="37.9489%" y="527.50"></text></g><g><title>`0x7FFCE153DBFA (4 samples, 0.15%)</title><rect x="37.6989%" y="533" width="0.1480%" height="15" fill="rgb(245,139,43)" fg:x="1019" fg:w="4"/><text x="37.9489%" y="543.50"></text></g><g><title>`0x7FFCE151E37B (3 samples, 0.11%)</title><rect x="37.7358%" y="517" width="0.1110%" height="15" fill="rgb(252,170,7)" fg:x="1020" fg:w="3"/><text x="37.9858%" y="527.50"></text></g><g><title>`0x7FFCE151E715 (3 samples, 0.11%)</title><rect x="37.7358%" y="501" width="0.1110%" height="15" fill="rgb(231,118,14)" fg:x="1020" fg:w="3"/><text x="37.9858%" y="511.50"></text></g><g><title>`0x7FFCE15AD864 (2 samples, 0.07%)</title><rect x="37.7728%" y="485" width="0.0740%" height="15" fill="rgb(238,83,0)" fg:x="1021" fg:w="2"/><text x="38.0228%" y="495.50"></text></g><g><title>`0x7FFCE153DE8B (1 samples, 0.04%)</title><rect x="37.8468%" y="533" width="0.0370%" height="15" fill="rgb(221,39,39)" fg:x="1023" fg:w="1"/><text x="38.0968%" y="543.50"></text></g><g><title>`0x7FFCE153DEA9 (1 samples, 0.04%)</title><rect x="37.8838%" y="533" width="0.0370%" height="15" fill="rgb(222,119,46)" fg:x="1024" fg:w="1"/><text x="38.1338%" y="543.50"></text></g><g><title>`0x7FFCE153DFDF (1 samples, 0.04%)</title><rect x="37.9208%" y="533" width="0.0370%" height="15" fill="rgb(222,165,49)" fg:x="1025" fg:w="1"/><text x="38.1708%" y="543.50"></text></g><g><title>`0x7FFCE153DFFA (1 samples, 0.04%)</title><rect x="37.9578%" y="533" width="0.0370%" height="15" fill="rgb(219,113,52)" fg:x="1026" fg:w="1"/><text x="38.2078%" y="543.50"></text></g><g><title>`0x7FFCE153E1B4 (1 samples, 0.04%)</title><rect x="37.9948%" y="533" width="0.0370%" height="15" fill="rgb(214,7,15)" fg:x="1027" fg:w="1"/><text x="38.2448%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (21 samples, 0.78%)</title><rect x="37.3289%" y="613" width="0.7769%" height="15" fill="rgb(235,32,4)" fg:x="1009" fg:w="21"/><text x="37.5789%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (21 samples, 0.78%)</title><rect x="37.3289%" y="597" width="0.7769%" height="15" fill="rgb(238,90,54)" fg:x="1009" fg:w="21"/><text x="37.5789%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (20 samples, 0.74%)</title><rect x="37.3659%" y="581" width="0.7399%" height="15" fill="rgb(213,208,19)" fg:x="1010" fg:w="20"/><text x="37.6159%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (20 samples, 0.74%)</title><rect x="37.3659%" y="565" width="0.7399%" height="15" fill="rgb(233,156,4)" fg:x="1010" fg:w="20"/><text x="37.6159%" y="575.50"></text></g><g><title>`0x7FFCE153B44D (19 samples, 0.70%)</title><rect x="37.4029%" y="549" width="0.7029%" height="15" fill="rgb(207,194,5)" fg:x="1011" fg:w="19"/><text x="37.6529%" y="559.50"></text></g><g><title>`0x7FFCE153E5A7 (2 samples, 0.07%)</title><rect x="38.0318%" y="533" width="0.0740%" height="15" fill="rgb(206,111,30)" fg:x="1028" fg:w="2"/><text x="38.2818%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$12::index(alloc::vec::Vec (37 samples, 1.37%)</title><rect x="38.1058%" y="613" width="1.3688%" height="15" fill="rgb(243,70,54)" fg:x="1030" fg:w="37"/><text x="38.3558%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (37 samples, 1.37%)</title><rect x="38.1058%" y="597" width="1.3688%" height="15" fill="rgb(242,28,8)" fg:x="1030" fg:w="37"/><text x="38.3558%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (37 samples, 1.37%)</title><rect x="38.1058%" y="581" width="1.3688%" height="15" fill="rgb(219,106,18)" fg:x="1030" fg:w="37"/><text x="38.3558%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`core::cmp::impls::impl$54::lt (61 samples, 2.26%)</title><rect x="39.4747%" y="581" width="2.2568%" height="15" fill="rgb(244,222,10)" fg:x="1067" fg:w="61"/><text x="39.7247%" y="591.50">k..</text></g><g><title>kuramoto_oscillators.exe`matrix::Matrix&lt;f64&gt;::transpose&lt;f64&gt; (625 samples, 23.12%)</title><rect x="18.6829%" y="629" width="23.1225%" height="15" fill="rgb(236,179,52)" fg:x="505" fg:w="625"/><text x="18.9329%" y="639.50">kuramoto_oscillators.exe`matrix::Matr..</text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$6::next(core::ops::range::Range (63 samples, 2.33%)</title><rect x="39.4747%" y="613" width="2.3307%" height="15" fill="rgb(213,23,39)" fg:x="1067" fg:w="63"/><text x="39.7247%" y="623.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (63 samples, 2.33%)</title><rect x="39.4747%" y="597" width="2.3307%" height="15" fill="rgb(238,48,10)" fg:x="1067" fg:w="63"/><text x="39.7247%" y="607.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$43::forward_unchecked (2 samples, 0.07%)</title><rect x="41.7314%" y="581" width="0.0740%" height="15" fill="rgb(251,196,23)" fg:x="1128" fg:w="2"/><text x="41.9814%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$11::unchecked_add (2 samples, 0.07%)</title><rect x="41.7314%" y="565" width="0.0740%" height="15" fill="rgb(250,152,24)" fg:x="1128" fg:w="2"/><text x="41.9814%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(matrix::Matrix (1 samples, 0.04%)</title><rect x="41.8054%" y="613" width="0.0370%" height="15" fill="rgb(209,150,17)" fg:x="1130" fg:w="1"/><text x="42.0554%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="41.8054%" y="597" width="0.0370%" height="15" fill="rgb(234,202,34)" fg:x="1130" fg:w="1"/><text x="42.0554%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="41.8054%" y="581" width="0.0370%" height="15" fill="rgb(253,148,53)" fg:x="1130" fg:w="1"/><text x="42.0554%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="41.8054%" y="565" width="0.0370%" height="15" fill="rgb(218,129,16)" fg:x="1130" fg:w="1"/><text x="42.0554%" y="575.50"></text></g><g><title>`0x7FFCE153476F (1 samples, 0.04%)</title><rect x="41.8054%" y="549" width="0.0370%" height="15" fill="rgb(216,85,19)" fg:x="1130" fg:w="1"/><text x="42.0554%" y="559.50"></text></g><g><title>`0x7FFCE1534765 (1 samples, 0.04%)</title><rect x="41.8424%" y="597" width="0.0370%" height="15" fill="rgb(235,228,7)" fg:x="1131" fg:w="1"/><text x="42.0924%" y="607.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="41.8794%" y="597" width="0.0370%" height="15" fill="rgb(245,175,0)" fg:x="1132" fg:w="1"/><text x="42.1294%" y="607.50"></text></g><g><title>`0x7FFCE15B75BA (1 samples, 0.04%)</title><rect x="41.8794%" y="581" width="0.0370%" height="15" fill="rgb(208,168,36)" fg:x="1132" fg:w="1"/><text x="42.1294%" y="591.50"></text></g><g><title>`0x7FFCE153A9A0 (1 samples, 0.04%)</title><rect x="41.9164%" y="501" width="0.0370%" height="15" fill="rgb(246,171,24)" fg:x="1133" fg:w="1"/><text x="42.1664%" y="511.50"></text></g><g><title>`0x7FFCE153A9CA (1 samples, 0.04%)</title><rect x="41.9534%" y="501" width="0.0370%" height="15" fill="rgb(215,142,24)" fg:x="1134" fg:w="1"/><text x="42.2034%" y="511.50"></text></g><g><title>`0x7FFCE153B371 (1 samples, 0.04%)</title><rect x="41.9904%" y="501" width="0.0370%" height="15" fill="rgb(250,187,7)" fg:x="1135" fg:w="1"/><text x="42.2404%" y="511.50"></text></g><g><title>`0x7FFCE153B665 (1 samples, 0.04%)</title><rect x="42.0274%" y="485" width="0.0370%" height="15" fill="rgb(228,66,33)" fg:x="1136" fg:w="1"/><text x="42.2774%" y="495.50"></text></g><g><title>`0x7FFCE153B847 (1 samples, 0.04%)</title><rect x="42.0644%" y="485" width="0.0370%" height="15" fill="rgb(234,215,21)" fg:x="1137" fg:w="1"/><text x="42.3144%" y="495.50"></text></g><g><title>`0x7FFCE153B862 (1 samples, 0.04%)</title><rect x="42.1014%" y="485" width="0.0370%" height="15" fill="rgb(222,191,20)" fg:x="1138" fg:w="1"/><text x="42.3514%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::add::impl$3::add(matrix::Matrix&lt;f64&gt;, matrix::Matrix (10 samples, 0.37%)</title><rect x="41.8054%" y="629" width="0.3700%" height="15" fill="rgb(245,79,54)" fg:x="1130" fg:w="10"/><text x="42.0554%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::add::impl$0::add(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (9 samples, 0.33%)</title><rect x="41.8424%" y="613" width="0.3330%" height="15" fill="rgb(240,10,37)" fg:x="1131" fg:w="9"/><text x="42.0924%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::add::impl$0::add::closure_env$0&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::add::impl$0::add::closure_env$0 (7 samples, 0.26%)</title><rect x="41.9164%" y="597" width="0.2590%" height="15" fill="rgb(214,192,32)" fg:x="1133" fg:w="7"/><text x="42.1664%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::add::impl$0::add::closure_env$0 (7 samples, 0.26%)</title><rect x="41.9164%" y="581" width="0.2590%" height="15" fill="rgb(209,36,54)" fg:x="1133" fg:w="7"/><text x="42.1664%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (7 samples, 0.26%)</title><rect x="41.9164%" y="565" width="0.2590%" height="15" fill="rgb(220,10,11)" fg:x="1133" fg:w="7"/><text x="42.1664%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.26%)</title><rect x="41.9164%" y="549" width="0.2590%" height="15" fill="rgb(221,106,17)" fg:x="1133" fg:w="7"/><text x="42.1664%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.26%)</title><rect x="41.9164%" y="533" width="0.2590%" height="15" fill="rgb(251,142,44)" fg:x="1133" fg:w="7"/><text x="42.1664%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (7 samples, 0.26%)</title><rect x="41.9164%" y="517" width="0.2590%" height="15" fill="rgb(238,13,15)" fg:x="1133" fg:w="7"/><text x="42.1664%" y="527.50"></text></g><g><title>`0x7FFCE153B3C7 (4 samples, 0.15%)</title><rect x="42.0274%" y="501" width="0.1480%" height="15" fill="rgb(208,107,27)" fg:x="1136" fg:w="4"/><text x="42.2774%" y="511.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="42.1384%" y="485" width="0.0370%" height="15" fill="rgb(205,136,37)" fg:x="1139" fg:w="1"/><text x="42.3884%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::current_memory (1 samples, 0.04%)</title><rect x="42.1754%" y="549" width="0.0370%" height="15" fill="rgb(250,205,27)" fg:x="1140" fg:w="1"/><text x="42.4254%" y="559.50"></text></g><g><title>`0x7FFCE153B385 (1 samples, 0.04%)</title><rect x="42.2863%" y="389" width="0.0370%" height="15" fill="rgb(210,80,43)" fg:x="1143" fg:w="1"/><text x="42.5363%" y="399.50"></text></g><g><title>`0x7FFCE153B721 (3 samples, 0.11%)</title><rect x="42.3233%" y="373" width="0.1110%" height="15" fill="rgb(247,160,36)" fg:x="1144" fg:w="3"/><text x="42.5733%" y="383.50"></text></g><g><title>`0x7FFCE153B726 (1 samples, 0.04%)</title><rect x="42.4343%" y="373" width="0.0370%" height="15" fill="rgb(234,13,49)" fg:x="1147" fg:w="1"/><text x="42.6843%" y="383.50"></text></g><g><title>`0x7FFCE153B748 (2 samples, 0.07%)</title><rect x="42.4713%" y="373" width="0.0740%" height="15" fill="rgb(234,122,0)" fg:x="1148" fg:w="2"/><text x="42.7213%" y="383.50"></text></g><g><title>`0x7FFCE153B785 (1 samples, 0.04%)</title><rect x="42.5453%" y="373" width="0.0370%" height="15" fill="rgb(207,146,38)" fg:x="1150" fg:w="1"/><text x="42.7953%" y="383.50"></text></g><g><title>`0x7FFCE153B80A (1 samples, 0.04%)</title><rect x="42.5823%" y="373" width="0.0370%" height="15" fill="rgb(207,177,25)" fg:x="1151" fg:w="1"/><text x="42.8323%" y="383.50"></text></g><g><title>`0x7FFCE153B813 (1 samples, 0.04%)</title><rect x="42.6193%" y="373" width="0.0370%" height="15" fill="rgb(211,178,42)" fg:x="1152" fg:w="1"/><text x="42.8693%" y="383.50"></text></g><g><title>`0x7FFCE153B862 (1 samples, 0.04%)</title><rect x="42.6563%" y="373" width="0.0370%" height="15" fill="rgb(230,69,54)" fg:x="1153" fg:w="1"/><text x="42.9063%" y="383.50"></text></g><g><title>`0x7FFCE153B86B (1 samples, 0.04%)</title><rect x="42.6933%" y="373" width="0.0370%" height="15" fill="rgb(214,135,41)" fg:x="1154" fg:w="1"/><text x="42.9433%" y="383.50"></text></g><g><title>`0x7FFCE15143FD (1 samples, 0.04%)</title><rect x="42.6933%" y="357" width="0.0370%" height="15" fill="rgb(237,67,25)" fg:x="1154" fg:w="1"/><text x="42.9433%" y="367.50"></text></g><g><title>`0x7FFCE153B3C7 (12 samples, 0.44%)</title><rect x="42.3233%" y="389" width="0.4440%" height="15" fill="rgb(222,189,50)" fg:x="1144" fg:w="12"/><text x="42.5733%" y="399.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="42.7303%" y="373" width="0.0370%" height="15" fill="rgb(245,148,34)" fg:x="1155" fg:w="1"/><text x="42.9803%" y="383.50"></text></g><g><title>`0x7FFCE153B522 (1 samples, 0.04%)</title><rect x="42.7673%" y="389" width="0.0370%" height="15" fill="rgb(222,29,6)" fg:x="1156" fg:w="1"/><text x="43.0173%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (15 samples, 0.55%)</title><rect x="42.2863%" y="501" width="0.5549%" height="15" fill="rgb(221,189,43)" fg:x="1143" fg:w="15"/><text x="42.5363%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (15 samples, 0.55%)</title><rect x="42.2863%" y="485" width="0.5549%" height="15" fill="rgb(207,36,27)" fg:x="1143" fg:w="15"/><text x="42.5363%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (15 samples, 0.55%)</title><rect x="42.2863%" y="469" width="0.5549%" height="15" fill="rgb(217,90,24)" fg:x="1143" fg:w="15"/><text x="42.5363%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (15 samples, 0.55%)</title><rect x="42.2863%" y="453" width="0.5549%" height="15" fill="rgb(224,66,35)" fg:x="1143" fg:w="15"/><text x="42.5363%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::allocate (15 samples, 0.55%)</title><rect x="42.2863%" y="437" width="0.5549%" height="15" fill="rgb(221,13,50)" fg:x="1143" fg:w="15"/><text x="42.5363%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::Global::alloc_impl (15 samples, 0.55%)</title><rect x="42.2863%" y="421" width="0.5549%" height="15" fill="rgb(236,68,49)" fg:x="1143" fg:w="15"/><text x="42.5363%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::alloc (15 samples, 0.55%)</title><rect x="42.2863%" y="405" width="0.5549%" height="15" fill="rgb(229,146,28)" fg:x="1143" fg:w="15"/><text x="42.5363%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.04%)</title><rect x="42.8043%" y="389" width="0.0370%" height="15" fill="rgb(225,31,38)" fg:x="1157" fg:w="1"/><text x="43.0543%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt; &gt;*, tuple$ (2 samples, 0.07%)</title><rect x="42.8413%" y="405" width="0.0740%" height="15" fill="rgb(250,208,3)" fg:x="1158" fg:w="2"/><text x="43.0913%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (2 samples, 0.07%)</title><rect x="42.8413%" y="389" width="0.0740%" height="15" fill="rgb(246,54,23)" fg:x="1158" fg:w="2"/><text x="43.0913%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::write (2 samples, 0.07%)</title><rect x="42.8413%" y="373" width="0.0740%" height="15" fill="rgb(243,76,11)" fg:x="1158" fg:w="2"/><text x="43.0913%" y="383.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$104::sum::closure$0(core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (89 samples, 3.29%)</title><rect x="49.0566%" y="309" width="3.2926%" height="15" fill="rgb(245,21,50)" fg:x="1326" fg:w="89"/><text x="49.3066%" y="319.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt; &gt; &gt; &gt;*, double, tuple$&lt;ref$&lt;f64&gt;,ref$ (159 samples, 5.88%)</title><rect x="49.0566%" y="325" width="5.8824%" height="15" fill="rgb(228,9,43)" fg:x="1326" fg:w="159"/><text x="49.3066%" y="335.50">kuramot..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul::closure$3::closure$0(matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;*, tuple$&lt;ref$&lt;f64&gt;,ref$ (70 samples, 2.59%)</title><rect x="52.3492%" y="309" width="2.5897%" height="15" fill="rgb(208,100,47)" fg:x="1415" fg:w="70"/><text x="52.5992%" y="319.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::ops::arith::impl$125::mul (70 samples, 2.59%)</title><rect x="52.3492%" y="293" width="2.5897%" height="15" fill="rgb(232,26,8)" fg:x="1415" fg:w="70"/><text x="52.5992%" y="303.50">ku..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (333 samples, 12.32%)</title><rect x="42.8413%" y="501" width="12.3196%" height="15" fill="rgb(216,166,38)" fg:x="1158" fg:w="333"/><text x="43.0913%" y="511.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (333 samples, 12.32%)</title><rect x="42.8413%" y="485" width="12.3196%" height="15" fill="rgb(251,202,51)" fg:x="1158" fg:w="333"/><text x="43.0913%" y="495.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (333 samples, 12.32%)</title><rect x="42.8413%" y="469" width="12.3196%" height="15" fill="rgb(254,216,34)" fg:x="1158" fg:w="333"/><text x="43.0913%" y="479.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (333 samples, 12.32%)</title><rect x="42.8413%" y="453" width="12.3196%" height="15" fill="rgb(251,32,27)" fg:x="1158" fg:w="333"/><text x="43.0913%" y="463.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Chunks&lt;f64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;f64&gt; &gt;,f64,tuple$&lt;&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (333 samples, 12.32%)</title><rect x="42.8413%" y="437" width="12.3196%" height="15" fill="rgb(208,127,28)" fg:x="1158" fg:w="333"/><text x="43.0913%" y="447.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;f64&gt; &gt;,f64,tuple$&lt;&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, ref$&lt;slice2$ (333 samples, 12.32%)</title><rect x="42.8413%" y="421" width="12.3196%" height="15" fill="rgb(224,137,22)" fg:x="1158" fg:w="333"/><text x="43.0913%" y="431.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul::closure$3(matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;*, ref$&lt;slice2$ (331 samples, 12.25%)</title><rect x="42.9153%" y="405" width="12.2457%" height="15" fill="rgb(254,70,32)" fg:x="1160" fg:w="331"/><text x="43.1653%" y="415.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (331 samples, 12.25%)</title><rect x="42.9153%" y="389" width="12.2457%" height="15" fill="rgb(229,75,37)" fg:x="1160" fg:w="331"/><text x="43.1653%" y="399.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$104::sum(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (328 samples, 12.13%)</title><rect x="43.0263%" y="373" width="12.1347%" height="15" fill="rgb(252,64,23)" fg:x="1163" fg:w="328"/><text x="43.2763%" y="383.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt; &gt;, double, core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (328 samples, 12.13%)</title><rect x="43.0263%" y="357" width="12.1347%" height="15" fill="rgb(232,162,48)" fg:x="1163" fg:w="328"/><text x="43.2763%" y="367.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;, double, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (328 samples, 12.13%)</title><rect x="43.0263%" y="341" width="12.1347%" height="15" fill="rgb(246,160,12)" fg:x="1163" fg:w="328"/><text x="43.2763%" y="351.50">kuramoto_oscillato..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (6 samples, 0.22%)</title><rect x="54.9390%" y="325" width="0.2220%" height="15" fill="rgb(247,166,0)" fg:x="1485" fg:w="6"/><text x="55.1890%" y="335.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$5::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (6 samples, 0.22%)</title><rect x="54.9390%" y="309" width="0.2220%" height="15" fill="rgb(249,219,21)" fg:x="1485" fg:w="6"/><text x="55.1890%" y="319.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$4::mul(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (353 samples, 13.06%)</title><rect x="42.1754%" y="629" width="13.0596%" height="15" fill="rgb(205,209,3)" fg:x="1140" fg:w="353"/><text x="42.4254%" y="639.50">kuramoto_oscillators..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(matrix::Matrix (353 samples, 13.06%)</title><rect x="42.1754%" y="613" width="13.0596%" height="15" fill="rgb(243,44,1)" fg:x="1140" fg:w="353"/><text x="42.4254%" y="623.50">kuramoto_oscillators..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (353 samples, 13.06%)</title><rect x="42.1754%" y="597" width="13.0596%" height="15" fill="rgb(206,159,16)" fg:x="1140" fg:w="353"/><text x="42.4254%" y="607.50">kuramoto_oscillators..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (353 samples, 13.06%)</title><rect x="42.1754%" y="581" width="13.0596%" height="15" fill="rgb(244,77,30)" fg:x="1140" fg:w="353"/><text x="42.4254%" y="591.50">kuramoto_oscillators..</text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (353 samples, 13.06%)</title><rect x="42.1754%" y="565" width="13.0596%" height="15" fill="rgb(218,69,12)" fg:x="1140" fg:w="353"/><text x="42.4254%" y="575.50">kuramoto_oscillators..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul&lt;f64&gt;(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (352 samples, 13.02%)</title><rect x="42.2124%" y="549" width="13.0226%" height="15" fill="rgb(212,87,7)" fg:x="1141" fg:w="352"/><text x="42.4624%" y="559.50">kuramoto_oscillators..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (351 samples, 12.99%)</title><rect x="42.2494%" y="533" width="12.9856%" height="15" fill="rgb(245,114,25)" fg:x="1142" fg:w="351"/><text x="42.4994%" y="543.50">kuramoto_oscillators..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (350 samples, 12.95%)</title><rect x="42.2863%" y="517" width="12.9486%" height="15" fill="rgb(210,61,42)" fg:x="1143" fg:w="350"/><text x="42.5363%" y="527.50">kuramoto_oscillator..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::size_hint(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (2 samples, 0.07%)</title><rect x="55.1609%" y="501" width="0.0740%" height="15" fill="rgb(211,52,33)" fg:x="1491" fg:w="2"/><text x="55.4109%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$70::size_hint(core::slice::iter::Chunks (2 samples, 0.07%)</title><rect x="55.1609%" y="485" width="0.0740%" height="15" fill="rgb(234,58,33)" fg:x="1491" fg:w="2"/><text x="55.4109%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(matrix::Matrix (1 samples, 0.04%)</title><rect x="55.2349%" y="613" width="0.0370%" height="15" fill="rgb(220,115,36)" fg:x="1493" fg:w="1"/><text x="55.4849%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="55.2349%" y="597" width="0.0370%" height="15" fill="rgb(243,153,54)" fg:x="1493" fg:w="1"/><text x="55.4849%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="55.2349%" y="581" width="0.0370%" height="15" fill="rgb(251,47,18)" fg:x="1493" fg:w="1"/><text x="55.4849%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="55.2349%" y="565" width="0.0370%" height="15" fill="rgb(242,102,42)" fg:x="1493" fg:w="1"/><text x="55.4849%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="55.2719%" y="597" width="0.0370%" height="15" fill="rgb(234,31,38)" fg:x="1494" fg:w="1"/><text x="55.5219%" y="607.50"></text></g><g><title>`0x7FFCE153B748 (1 samples, 0.04%)</title><rect x="55.3089%" y="485" width="0.0370%" height="15" fill="rgb(221,117,51)" fg:x="1495" fg:w="1"/><text x="55.5589%" y="495.50"></text></g><g><title>`0x7FFCE153B7A2 (1 samples, 0.04%)</title><rect x="55.3459%" y="485" width="0.0370%" height="15" fill="rgb(212,20,18)" fg:x="1496" fg:w="1"/><text x="55.5959%" y="495.50"></text></g><g><title>`0x7FFCE153B86B (1 samples, 0.04%)</title><rect x="55.3829%" y="485" width="0.0370%" height="15" fill="rgb(245,133,36)" fg:x="1497" fg:w="1"/><text x="55.6329%" y="495.50"></text></g><g><title>`0x7FFCE151440B (1 samples, 0.04%)</title><rect x="55.3829%" y="469" width="0.0370%" height="15" fill="rgb(212,6,19)" fg:x="1497" fg:w="1"/><text x="55.6329%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (4 samples, 0.15%)</title><rect x="55.3089%" y="597" width="0.1480%" height="15" fill="rgb(218,1,36)" fg:x="1495" fg:w="4"/><text x="55.5589%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (4 samples, 0.15%)</title><rect x="55.3089%" y="581" width="0.1480%" height="15" fill="rgb(246,84,54)" fg:x="1495" fg:w="4"/><text x="55.5589%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (4 samples, 0.15%)</title><rect x="55.3089%" y="565" width="0.1480%" height="15" fill="rgb(242,110,6)" fg:x="1495" fg:w="4"/><text x="55.5589%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.15%)</title><rect x="55.3089%" y="549" width="0.1480%" height="15" fill="rgb(214,47,5)" fg:x="1495" fg:w="4"/><text x="55.5589%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.15%)</title><rect x="55.3089%" y="533" width="0.1480%" height="15" fill="rgb(218,159,25)" fg:x="1495" fg:w="4"/><text x="55.5589%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (4 samples, 0.15%)</title><rect x="55.3089%" y="517" width="0.1480%" height="15" fill="rgb(215,211,28)" fg:x="1495" fg:w="4"/><text x="55.5589%" y="527.50"></text></g><g><title>`0x7FFCE153B3C7 (4 samples, 0.15%)</title><rect x="55.3089%" y="501" width="0.1480%" height="15" fill="rgb(238,59,32)" fg:x="1495" fg:w="4"/><text x="55.5589%" y="511.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="55.4199%" y="485" width="0.0370%" height="15" fill="rgb(226,82,3)" fg:x="1498" fg:w="1"/><text x="55.6699%" y="495.50"></text></g><g><title>`0x7FFCE153B3C7 (1 samples, 0.04%)</title><rect x="55.4939%" y="437" width="0.0370%" height="15" fill="rgb(240,164,32)" fg:x="1500" fg:w="1"/><text x="55.7439%" y="447.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="55.4939%" y="421" width="0.0370%" height="15" fill="rgb(232,46,7)" fg:x="1500" fg:w="1"/><text x="55.7439%" y="431.50"></text></g><g><title>`0x7FFCE153B5D4 (1 samples, 0.04%)</title><rect x="55.5309%" y="437" width="0.0370%" height="15" fill="rgb(229,129,53)" fg:x="1501" fg:w="1"/><text x="55.7809%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (3 samples, 0.11%)</title><rect x="55.4939%" y="549" width="0.1110%" height="15" fill="rgb(234,188,29)" fg:x="1500" fg:w="3"/><text x="55.7439%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="55.4939%" y="533" width="0.1110%" height="15" fill="rgb(246,141,4)" fg:x="1500" fg:w="3"/><text x="55.7439%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="55.4939%" y="517" width="0.1110%" height="15" fill="rgb(229,23,39)" fg:x="1500" fg:w="3"/><text x="55.7439%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (3 samples, 0.11%)</title><rect x="55.4939%" y="501" width="0.1110%" height="15" fill="rgb(206,12,3)" fg:x="1500" fg:w="3"/><text x="55.7439%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::allocate (3 samples, 0.11%)</title><rect x="55.4939%" y="485" width="0.1110%" height="15" fill="rgb(252,226,20)" fg:x="1500" fg:w="3"/><text x="55.7439%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.11%)</title><rect x="55.4939%" y="469" width="0.1110%" height="15" fill="rgb(216,123,35)" fg:x="1500" fg:w="3"/><text x="55.7439%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::alloc (3 samples, 0.11%)</title><rect x="55.4939%" y="453" width="0.1110%" height="15" fill="rgb(212,68,40)" fg:x="1500" fg:w="3"/><text x="55.7439%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.04%)</title><rect x="55.5679%" y="437" width="0.0370%" height="15" fill="rgb(254,125,32)" fg:x="1502" fg:w="1"/><text x="55.8179%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::alloc::impl$0::alloc (1 samples, 0.04%)</title><rect x="55.5679%" y="421" width="0.0370%" height="15" fill="rgb(253,97,22)" fg:x="1502" fg:w="1"/><text x="55.8179%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::alloc::allocate (1 samples, 0.04%)</title><rect x="55.5679%" y="405" width="0.0370%" height="15" fill="rgb(241,101,14)" fg:x="1502" fg:w="1"/><text x="55.8179%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$104::sum::closure$0(core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (7 samples, 0.26%)</title><rect x="56.1968%" y="357" width="0.2590%" height="15" fill="rgb(238,103,29)" fg:x="1519" fg:w="7"/><text x="56.4468%" y="367.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt; &gt; &gt; &gt;*, double, tuple$&lt;ref$&lt;f64&gt;,ref$ (16 samples, 0.59%)</title><rect x="56.1968%" y="373" width="0.5919%" height="15" fill="rgb(233,195,47)" fg:x="1519" fg:w="16"/><text x="56.4468%" y="383.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul::closure$3::closure$0(matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;*, tuple$&lt;ref$&lt;f64&gt;,ref$ (9 samples, 0.33%)</title><rect x="56.4558%" y="357" width="0.3330%" height="15" fill="rgb(246,218,30)" fg:x="1526" fg:w="9"/><text x="56.7058%" y="367.50"></text></g><g><title>kuramoto_oscillators.exe`core::ops::arith::impl$125::mul (9 samples, 0.33%)</title><rect x="56.4558%" y="341" width="0.3330%" height="15" fill="rgb(219,145,47)" fg:x="1526" fg:w="9"/><text x="56.7058%" y="351.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::sub::impl$1::sub(matrix::Matrix&lt;f64&gt;, matrix::Matrix (45 samples, 1.66%)</title><rect x="55.2349%" y="629" width="1.6648%" height="15" fill="rgb(243,12,26)" fg:x="1493" fg:w="45"/><text x="55.4849%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::sub::impl$0::sub(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (44 samples, 1.63%)</title><rect x="55.2719%" y="613" width="1.6278%" height="15" fill="rgb(214,87,16)" fg:x="1494" fg:w="44"/><text x="55.5219%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul&lt;f64&gt;(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (39 samples, 1.44%)</title><rect x="55.4569%" y="597" width="1.4428%" height="15" fill="rgb(208,99,42)" fg:x="1499" fg:w="39"/><text x="55.7069%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (39 samples, 1.44%)</title><rect x="55.4569%" y="581" width="1.4428%" height="15" fill="rgb(253,99,2)" fg:x="1499" fg:w="39"/><text x="55.7069%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (39 samples, 1.44%)</title><rect x="55.4569%" y="565" width="1.4428%" height="15" fill="rgb(220,168,23)" fg:x="1499" fg:w="39"/><text x="55.7069%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (35 samples, 1.29%)</title><rect x="55.6049%" y="549" width="1.2949%" height="15" fill="rgb(242,38,24)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (35 samples, 1.29%)</title><rect x="55.6049%" y="533" width="1.2949%" height="15" fill="rgb(225,182,9)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (35 samples, 1.29%)</title><rect x="55.6049%" y="517" width="1.2949%" height="15" fill="rgb(243,178,37)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (35 samples, 1.29%)</title><rect x="55.6049%" y="501" width="1.2949%" height="15" fill="rgb(232,139,19)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Chunks&lt;f64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;f64&gt; &gt;,f64,tuple$&lt;&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3 (35 samples, 1.29%)</title><rect x="55.6049%" y="485" width="1.2949%" height="15" fill="rgb(225,201,24)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;f64&gt; &gt;,f64,tuple$&lt;&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Chunks&lt;f64&gt;,matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, ref$&lt;slice2$ (35 samples, 1.29%)</title><rect x="55.6049%" y="469" width="1.2949%" height="15" fill="rgb(221,47,46)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul::closure$3(matrix::ops::matmul::impl$2::mul::closure_env$3&lt;f64&gt;*, ref$&lt;slice2$ (35 samples, 1.29%)</title><rect x="55.6049%" y="453" width="1.2949%" height="15" fill="rgb(249,23,13)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (35 samples, 1.29%)</title><rect x="55.6049%" y="437" width="1.2949%" height="15" fill="rgb(219,9,5)" fg:x="1503" fg:w="35"/><text x="55.8549%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$104::sum(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (34 samples, 1.26%)</title><rect x="55.6419%" y="421" width="1.2579%" height="15" fill="rgb(254,171,16)" fg:x="1504" fg:w="34"/><text x="55.8919%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt; &gt;, double, core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (34 samples, 1.26%)</title><rect x="55.6419%" y="405" width="1.2579%" height="15" fill="rgb(230,171,20)" fg:x="1504" fg:w="34"/><text x="55.8919%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;, double, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure$3::closure_env$0 (34 samples, 1.26%)</title><rect x="55.6419%" y="389" width="1.2579%" height="15" fill="rgb(210,71,41)" fg:x="1504" fg:w="34"/><text x="55.8919%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (3 samples, 0.11%)</title><rect x="56.7888%" y="373" width="0.1110%" height="15" fill="rgb(206,173,20)" fg:x="1535" fg:w="3"/><text x="57.0388%" y="383.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$5::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (3 samples, 0.11%)</title><rect x="56.7888%" y="357" width="0.1110%" height="15" fill="rgb(233,88,34)" fg:x="1535" fg:w="3"/><text x="57.0388%" y="367.50"></text></g><g><title>`0x7FFCE1535B5B (1 samples, 0.04%)</title><rect x="56.9737%" y="581" width="0.0370%" height="15" fill="rgb(223,209,46)" fg:x="1540" fg:w="1"/><text x="57.2237%" y="591.50"></text></g><g><title>`0x7FFCE1535DE7 (1 samples, 0.04%)</title><rect x="57.0107%" y="565" width="0.0370%" height="15" fill="rgb(250,43,18)" fg:x="1541" fg:w="1"/><text x="57.2607%" y="575.50"></text></g><g><title>`0x7FFCE151A7BC (1 samples, 0.04%)</title><rect x="57.0477%" y="549" width="0.0370%" height="15" fill="rgb(208,13,10)" fg:x="1542" fg:w="1"/><text x="57.2977%" y="559.50"></text></g><g><title>`0x7FFCE1535B74 (3 samples, 0.11%)</title><rect x="57.0107%" y="581" width="0.1110%" height="15" fill="rgb(212,200,36)" fg:x="1541" fg:w="3"/><text x="57.2607%" y="591.50"></text></g><g><title>`0x7FFCE1536491 (2 samples, 0.07%)</title><rect x="57.0477%" y="565" width="0.0740%" height="15" fill="rgb(225,90,30)" fg:x="1542" fg:w="2"/><text x="57.2977%" y="575.50"></text></g><g><title>`0x7FFCE151A817 (1 samples, 0.04%)</title><rect x="57.0847%" y="549" width="0.0370%" height="15" fill="rgb(236,182,39)" fg:x="1543" fg:w="1"/><text x="57.3347%" y="559.50"></text></g><g><title>`0x7FFCE15B7487 (2 samples, 0.07%)</title><rect x="57.1217%" y="581" width="0.0740%" height="15" fill="rgb(212,144,35)" fg:x="1544" fg:w="2"/><text x="57.3717%" y="591.50"></text></g><g><title>`0x7FFCE15B74F3 (1 samples, 0.04%)</title><rect x="57.1957%" y="581" width="0.0370%" height="15" fill="rgb(228,63,44)" fg:x="1546" fg:w="1"/><text x="57.4457%" y="591.50"></text></g><g><title>`0x7FFCE15347B1 (8 samples, 0.30%)</title><rect x="56.9737%" y="597" width="0.2960%" height="15" fill="rgb(228,109,6)" fg:x="1540" fg:w="8"/><text x="57.2237%" y="607.50"></text></g><g><title>`0x7FFCE15B75BA (1 samples, 0.04%)</title><rect x="57.2327%" y="581" width="0.0370%" height="15" fill="rgb(238,117,24)" fg:x="1547" fg:w="1"/><text x="57.4827%" y="591.50"></text></g><g><title>`0x7FFCE153B84E (1 samples, 0.04%)</title><rect x="57.2697%" y="485" width="0.0370%" height="15" fill="rgb(242,26,26)" fg:x="1548" fg:w="1"/><text x="57.5197%" y="495.50"></text></g><g><title>`0x7FFCE153B3C7 (2 samples, 0.07%)</title><rect x="57.2697%" y="501" width="0.0740%" height="15" fill="rgb(221,92,48)" fg:x="1548" fg:w="2"/><text x="57.5197%" y="511.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="57.3067%" y="485" width="0.0370%" height="15" fill="rgb(209,209,32)" fg:x="1549" fg:w="1"/><text x="57.5567%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (3 samples, 0.11%)</title><rect x="57.2697%" y="565" width="0.1110%" height="15" fill="rgb(221,70,22)" fg:x="1548" fg:w="3"/><text x="57.5197%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="57.2697%" y="549" width="0.1110%" height="15" fill="rgb(248,145,5)" fg:x="1548" fg:w="3"/><text x="57.5197%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="57.2697%" y="533" width="0.1110%" height="15" fill="rgb(226,116,26)" fg:x="1548" fg:w="3"/><text x="57.5197%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (3 samples, 0.11%)</title><rect x="57.2697%" y="517" width="0.1110%" height="15" fill="rgb(244,5,17)" fg:x="1548" fg:w="3"/><text x="57.5197%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.04%)</title><rect x="57.3437%" y="501" width="0.0370%" height="15" fill="rgb(252,159,33)" fg:x="1550" fg:w="1"/><text x="57.5937%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::kuramoto_oscillators::impl$1::dot_x(kuramoto_oscillators::kuramoto_oscillators::KuramotoOscillators*, matrix::Matrix (1,406 samples, 52.02%)</title><rect x="5.5124%" y="645" width="52.0163%" height="15" fill="rgb(206,71,0)" fg:x="149" fg:w="1406"/><text x="5.7624%" y="655.50">kuramoto_oscillators.exe`kuramoto_oscillators::kuramoto_oscillators::impl$1::dot_x(kur..</text></g><g><title>kuramoto_oscillators.exe`matrix::ops::sub::impl$2::sub(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (17 samples, 0.63%)</title><rect x="56.8997%" y="629" width="0.6289%" height="15" fill="rgb(233,118,54)" fg:x="1538" fg:w="17"/><text x="57.1497%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::sub::impl$0::sub(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (17 samples, 0.63%)</title><rect x="56.8997%" y="613" width="0.6289%" height="15" fill="rgb(234,83,48)" fg:x="1538" fg:w="17"/><text x="57.1497%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (7 samples, 0.26%)</title><rect x="57.2697%" y="597" width="0.2590%" height="15" fill="rgb(228,3,54)" fg:x="1548" fg:w="7"/><text x="57.5197%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (7 samples, 0.26%)</title><rect x="57.2697%" y="581" width="0.2590%" height="15" fill="rgb(226,155,13)" fg:x="1548" fg:w="7"/><text x="57.5197%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (4 samples, 0.15%)</title><rect x="57.3807%" y="565" width="0.1480%" height="15" fill="rgb(241,28,37)" fg:x="1551" fg:w="4"/><text x="57.6307%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (4 samples, 0.15%)</title><rect x="57.3807%" y="549" width="0.1480%" height="15" fill="rgb(233,93,10)" fg:x="1551" fg:w="4"/><text x="57.6307%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (4 samples, 0.15%)</title><rect x="57.3807%" y="533" width="0.1480%" height="15" fill="rgb(225,113,19)" fg:x="1551" fg:w="4"/><text x="57.6307%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (4 samples, 0.15%)</title><rect x="57.3807%" y="517" width="0.1480%" height="15" fill="rgb(241,2,18)" fg:x="1551" fg:w="4"/><text x="57.6307%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,tuple$&lt;&gt;,matrix::ops::sub::impl$0::sub::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::sub::impl$0::sub::closure_env$0 (4 samples, 0.15%)</title><rect x="57.3807%" y="501" width="0.1480%" height="15" fill="rgb(228,207,21)" fg:x="1551" fg:w="4"/><text x="57.6307%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (1 samples, 0.04%)</title><rect x="57.4917%" y="485" width="0.0370%" height="15" fill="rgb(213,211,35)" fg:x="1554" fg:w="1"/><text x="57.7417%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$5::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter (1 samples, 0.04%)</title><rect x="57.4917%" y="469" width="0.0370%" height="15" fill="rgb(209,83,10)" fg:x="1554" fg:w="1"/><text x="57.7417%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.07%)</title><rect x="57.5287%" y="549" width="0.0740%" height="15" fill="rgb(209,164,1)" fg:x="1555" fg:w="2"/><text x="57.7787%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.5287%" y="533" width="0.0740%" height="15" fill="rgb(213,184,43)" fg:x="1555" fg:w="2"/><text x="57.7787%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.5287%" y="517" width="0.0740%" height="15" fill="rgb(231,61,34)" fg:x="1555" fg:w="2"/><text x="57.7787%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (2 samples, 0.07%)</title><rect x="57.5287%" y="501" width="0.0740%" height="15" fill="rgb(235,75,3)" fg:x="1555" fg:w="2"/><text x="57.7787%" y="511.50"></text></g><g><title>`0x7FFCE153B3C7 (1 samples, 0.04%)</title><rect x="57.5657%" y="485" width="0.0370%" height="15" fill="rgb(220,106,47)" fg:x="1556" fg:w="1"/><text x="57.8157%" y="495.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="57.5657%" y="469" width="0.0370%" height="15" fill="rgb(210,196,33)" fg:x="1556" fg:w="1"/><text x="57.8157%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0&lt;f64&gt; &gt; &gt; &gt;*, tuple$ (1 samples, 0.04%)</title><rect x="57.6027%" y="453" width="0.0370%" height="15" fill="rgb(229,154,42)" fg:x="1557" fg:w="1"/><text x="57.8527%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (1 samples, 0.04%)</title><rect x="57.6027%" y="437" width="0.0370%" height="15" fill="rgb(228,114,26)" fg:x="1557" fg:w="1"/><text x="57.8527%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::write (1 samples, 0.04%)</title><rect x="57.6027%" y="421" width="0.0370%" height="15" fill="rgb(208,144,1)" fg:x="1557" fg:w="1"/><text x="57.8527%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::kuramoto_oscillators::impl$1::post_process(kuramoto_oscillators::kuramoto_oscillators::KuramotoOscillators*, matrix::Matrix (5 samples, 0.18%)</title><rect x="57.5287%" y="645" width="0.1850%" height="15" fill="rgb(239,112,37)" fg:x="1555" fg:w="5"/><text x="57.7787%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::Matrix&lt;f64&gt;::repeat (5 samples, 0.18%)</title><rect x="57.5287%" y="629" width="0.1850%" height="15" fill="rgb(210,96,50)" fg:x="1555" fg:w="5"/><text x="57.7787%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (5 samples, 0.18%)</title><rect x="57.5287%" y="613" width="0.1850%" height="15" fill="rgb(222,178,2)" fg:x="1555" fg:w="5"/><text x="57.7787%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$14::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (5 samples, 0.18%)</title><rect x="57.5287%" y="597" width="0.1850%" height="15" fill="rgb(226,74,18)" fg:x="1555" fg:w="5"/><text x="57.7787%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (5 samples, 0.18%)</title><rect x="57.5287%" y="581" width="0.1850%" height="15" fill="rgb(225,67,54)" fg:x="1555" fg:w="5"/><text x="57.7787%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (5 samples, 0.18%)</title><rect x="57.5287%" y="565" width="0.1850%" height="15" fill="rgb(251,92,32)" fg:x="1555" fg:w="5"/><text x="57.7787%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (3 samples, 0.11%)</title><rect x="57.6027%" y="549" width="0.1110%" height="15" fill="rgb(228,149,22)" fg:x="1557" fg:w="3"/><text x="57.8527%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (3 samples, 0.11%)</title><rect x="57.6027%" y="533" width="0.1110%" height="15" fill="rgb(243,54,13)" fg:x="1557" fg:w="3"/><text x="57.8527%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (3 samples, 0.11%)</title><rect x="57.6027%" y="517" width="0.1110%" height="15" fill="rgb(243,180,28)" fg:x="1557" fg:w="3"/><text x="57.8527%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (3 samples, 0.11%)</title><rect x="57.6027%" y="501" width="0.1110%" height="15" fill="rgb(208,167,24)" fg:x="1557" fg:w="3"/><text x="57.8527%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,f64,tuple$&lt;&gt;,matrix::ops::float::impl$0::repeat::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0 (3 samples, 0.11%)</title><rect x="57.6027%" y="485" width="0.1110%" height="15" fill="rgb(245,73,45)" fg:x="1557" fg:w="3"/><text x="57.8527%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,f64,tuple$&lt;&gt;,matrix::ops::float::impl$0::repeat::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::float::impl$0::repeat::closure_env$0&lt;f64&gt; &gt; &gt; &gt; &gt;*, tuple$ (3 samples, 0.11%)</title><rect x="57.6027%" y="469" width="0.1110%" height="15" fill="rgb(237,203,48)" fg:x="1557" fg:w="3"/><text x="57.8527%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::float::impl$0::repeat::closure$0(matrix::ops::float::impl$0::repeat::closure_env$0 (2 samples, 0.07%)</title><rect x="57.6397%" y="453" width="0.0740%" height="15" fill="rgb(211,197,16)" fg:x="1558" fg:w="2"/><text x="57.8897%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`core::ops::arith::impl$69::sub (1 samples, 0.04%)</title><rect x="57.6767%" y="437" width="0.0370%" height="15" fill="rgb(243,99,51)" fg:x="1559" fg:w="1"/><text x="57.9267%" y="447.50"></text></g><g><title>`0x7FFCE15B749B (1 samples, 0.04%)</title><rect x="57.7137%" y="517" width="0.0370%" height="15" fill="rgb(215,123,29)" fg:x="1560" fg:w="1"/><text x="57.9637%" y="527.50"></text></g><g><title>`0x7FFCE15B7598 (1 samples, 0.04%)</title><rect x="57.7506%" y="517" width="0.0370%" height="15" fill="rgb(239,186,37)" fg:x="1561" fg:w="1"/><text x="58.0006%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(matrix::Matrix (3 samples, 0.11%)</title><rect x="57.7137%" y="629" width="0.1110%" height="15" fill="rgb(252,136,39)" fg:x="1560" fg:w="3"/><text x="57.9637%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.11%)</title><rect x="57.7137%" y="613" width="0.1110%" height="15" fill="rgb(223,213,32)" fg:x="1560" fg:w="3"/><text x="57.9637%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.11%)</title><rect x="57.7137%" y="597" width="0.1110%" height="15" fill="rgb(233,115,5)" fg:x="1560" fg:w="3"/><text x="57.9637%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 0.11%)</title><rect x="57.7137%" y="581" width="0.1110%" height="15" fill="rgb(207,226,44)" fg:x="1560" fg:w="3"/><text x="57.9637%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.11%)</title><rect x="57.7137%" y="565" width="0.1110%" height="15" fill="rgb(208,126,0)" fg:x="1560" fg:w="3"/><text x="57.9637%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::dealloc (3 samples, 0.11%)</title><rect x="57.7137%" y="549" width="0.1110%" height="15" fill="rgb(244,66,21)" fg:x="1560" fg:w="3"/><text x="57.9637%" y="559.50"></text></g><g><title>`0x7FFCE15347B1 (3 samples, 0.11%)</title><rect x="57.7137%" y="533" width="0.1110%" height="15" fill="rgb(222,97,12)" fg:x="1560" fg:w="3"/><text x="57.9637%" y="543.50"></text></g><g><title>`0x7FFCE15B75BA (1 samples, 0.04%)</title><rect x="57.7876%" y="517" width="0.0370%" height="15" fill="rgb(219,213,19)" fg:x="1562" fg:w="1"/><text x="58.0376%" y="527.50"></text></g><g><title>`0x7FFCE153B655 (1 samples, 0.04%)</title><rect x="57.8616%" y="501" width="0.0370%" height="15" fill="rgb(252,169,30)" fg:x="1564" fg:w="1"/><text x="58.1116%" y="511.50"></text></g><g><title>`0x7FFCE153B748 (1 samples, 0.04%)</title><rect x="57.8986%" y="501" width="0.0370%" height="15" fill="rgb(206,32,51)" fg:x="1565" fg:w="1"/><text x="58.1486%" y="511.50"></text></g><g><title>`0x7FFCE153B7A2 (1 samples, 0.04%)</title><rect x="57.9356%" y="501" width="0.0370%" height="15" fill="rgb(250,172,42)" fg:x="1566" fg:w="1"/><text x="58.1856%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::add::impl$0::add::closure_env$0&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::add::impl$0::add::closure_env$0 (5 samples, 0.18%)</title><rect x="57.8246%" y="613" width="0.1850%" height="15" fill="rgb(209,34,43)" fg:x="1563" fg:w="5"/><text x="58.0746%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::slice::iter::Iter&lt;f64&gt; &gt;,matrix::ops::add::impl$0::add::closure_env$0 (4 samples, 0.15%)</title><rect x="57.8616%" y="597" width="0.1480%" height="15" fill="rgb(223,11,35)" fg:x="1564" fg:w="4"/><text x="58.1116%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (4 samples, 0.15%)</title><rect x="57.8616%" y="581" width="0.1480%" height="15" fill="rgb(251,219,26)" fg:x="1564" fg:w="4"/><text x="58.1116%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.15%)</title><rect x="57.8616%" y="565" width="0.1480%" height="15" fill="rgb(231,119,3)" fg:x="1564" fg:w="4"/><text x="58.1116%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.15%)</title><rect x="57.8616%" y="549" width="0.1480%" height="15" fill="rgb(216,97,11)" fg:x="1564" fg:w="4"/><text x="58.1116%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (4 samples, 0.15%)</title><rect x="57.8616%" y="533" width="0.1480%" height="15" fill="rgb(223,59,9)" fg:x="1564" fg:w="4"/><text x="58.1116%" y="543.50"></text></g><g><title>`0x7FFCE153B3C7 (4 samples, 0.15%)</title><rect x="57.8616%" y="517" width="0.1480%" height="15" fill="rgb(233,93,31)" fg:x="1564" fg:w="4"/><text x="58.1116%" y="527.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="57.9726%" y="501" width="0.0370%" height="15" fill="rgb(239,81,33)" fg:x="1567" fg:w="1"/><text x="58.2226%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::add::impl$2::add(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (9 samples, 0.33%)</title><rect x="57.7137%" y="645" width="0.3330%" height="15" fill="rgb(213,120,34)" fg:x="1560" fg:w="9"/><text x="57.9637%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::add::impl$0::add(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (6 samples, 0.22%)</title><rect x="57.8246%" y="629" width="0.2220%" height="15" fill="rgb(243,49,53)" fg:x="1563" fg:w="6"/><text x="58.0746%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::impl$0::iter(ref$&lt;slice2$ (1 samples, 0.04%)</title><rect x="58.0096%" y="613" width="0.0370%" height="15" fill="rgb(247,216,33)" fg:x="1568" fg:w="1"/><text x="58.2596%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::Iter&lt;f64&gt;::new(ref$&lt;slice2$ (1 samples, 0.04%)</title><rect x="58.0096%" y="597" width="0.0370%" height="15" fill="rgb(226,26,14)" fg:x="1568" fg:w="1"/><text x="58.2596%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::const_ptr::impl$0::add (1 samples, 0.04%)</title><rect x="58.0096%" y="581" width="0.0370%" height="15" fill="rgb(215,49,53)" fg:x="1568" fg:w="1"/><text x="58.2596%" y="591.50"></text></g><g><title>`0x7FFCE15347AC (1 samples, 0.04%)</title><rect x="58.0466%" y="597" width="0.0370%" height="15" fill="rgb(245,162,40)" fg:x="1569" fg:w="1"/><text x="58.2966%" y="607.50"></text></g><g><title>`0x7FFCE1535F99 (1 samples, 0.04%)</title><rect x="58.0836%" y="565" width="0.0370%" height="15" fill="rgb(229,68,17)" fg:x="1570" fg:w="1"/><text x="58.3336%" y="575.50"></text></g><g><title>`0x7FFCE1536088 (2 samples, 0.07%)</title><rect x="58.1206%" y="565" width="0.0740%" height="15" fill="rgb(213,182,10)" fg:x="1571" fg:w="2"/><text x="58.3706%" y="575.50"></text></g><g><title>`0x7FFCE1536340 (1 samples, 0.04%)</title><rect x="58.1946%" y="565" width="0.0370%" height="15" fill="rgb(245,125,30)" fg:x="1573" fg:w="1"/><text x="58.4446%" y="575.50"></text></g><g><title>`0x7FFCE1536344 (2 samples, 0.07%)</title><rect x="58.2316%" y="565" width="0.0740%" height="15" fill="rgb(232,202,2)" fg:x="1574" fg:w="2"/><text x="58.4816%" y="575.50"></text></g><g><title>`0x7FFCE152E2D8 (1 samples, 0.04%)</title><rect x="58.3056%" y="549" width="0.0370%" height="15" fill="rgb(237,140,51)" fg:x="1576" fg:w="1"/><text x="58.5556%" y="559.50"></text></g><g><title>`0x7FFCE152E940 (1 samples, 0.04%)</title><rect x="58.3426%" y="533" width="0.0370%" height="15" fill="rgb(236,157,25)" fg:x="1577" fg:w="1"/><text x="58.5926%" y="543.50"></text></g><g><title>`0x7FFCE152E3AD (2 samples, 0.07%)</title><rect x="58.3426%" y="549" width="0.0740%" height="15" fill="rgb(219,209,0)" fg:x="1577" fg:w="2"/><text x="58.5926%" y="559.50"></text></g><g><title>`0x7FFCE152E9EA (1 samples, 0.04%)</title><rect x="58.3796%" y="533" width="0.0370%" height="15" fill="rgb(240,116,54)" fg:x="1578" fg:w="1"/><text x="58.6296%" y="543.50"></text></g><g><title>`0x7FFCE15AD920 (1 samples, 0.04%)</title><rect x="58.4906%" y="485" width="0.0370%" height="15" fill="rgb(216,10,36)" fg:x="1581" fg:w="1"/><text x="58.7406%" y="495.50"></text></g><g><title>`0x7FFCE153095C (21 samples, 0.78%)</title><rect x="58.4166%" y="517" width="0.7769%" height="15" fill="rgb(222,72,44)" fg:x="1579" fg:w="21"/><text x="58.6666%" y="527.50"></text></g><g><title>`0x7FFCE1519B1A (21 samples, 0.78%)</title><rect x="58.4166%" y="501" width="0.7769%" height="15" fill="rgb(232,159,9)" fg:x="1579" fg:w="21"/><text x="58.6666%" y="511.50"></text></g><g><title>`0x7FFCE15AD924 (18 samples, 0.67%)</title><rect x="58.5276%" y="485" width="0.6659%" height="15" fill="rgb(210,39,32)" fg:x="1582" fg:w="18"/><text x="58.7776%" y="495.50"></text></g><g><title>`0x7FFCE1534859 (1 samples, 0.04%)</title><rect x="59.1935%" y="501" width="0.0370%" height="15" fill="rgb(216,194,45)" fg:x="1600" fg:w="1"/><text x="59.4435%" y="511.50"></text></g><g><title>`0x7FFCE152E412 (23 samples, 0.85%)</title><rect x="58.4166%" y="549" width="0.8509%" height="15" fill="rgb(218,18,35)" fg:x="1579" fg:w="23"/><text x="58.6666%" y="559.50"></text></g><g><title>`0x7FFCE152F35E (23 samples, 0.85%)</title><rect x="58.4166%" y="533" width="0.8509%" height="15" fill="rgb(207,83,51)" fg:x="1579" fg:w="23"/><text x="58.6666%" y="543.50"></text></g><g><title>`0x7FFCE153096B (2 samples, 0.07%)</title><rect x="59.1935%" y="517" width="0.0740%" height="15" fill="rgb(225,63,43)" fg:x="1600" fg:w="2"/><text x="59.4435%" y="527.50"></text></g><g><title>`0x7FFCE1534860 (1 samples, 0.04%)</title><rect x="59.2305%" y="501" width="0.0370%" height="15" fill="rgb(207,57,36)" fg:x="1601" fg:w="1"/><text x="59.4805%" y="511.50"></text></g><g><title>`0x7FFCE152EC28 (1 samples, 0.04%)</title><rect x="59.2675%" y="501" width="0.0370%" height="15" fill="rgb(216,99,33)" fg:x="1602" fg:w="1"/><text x="59.5175%" y="511.50"></text></g><g><title>`0x7FFCE152EA31 (3 samples, 0.11%)</title><rect x="59.2675%" y="533" width="0.1110%" height="15" fill="rgb(225,42,16)" fg:x="1602" fg:w="3"/><text x="59.5175%" y="543.50"></text></g><g><title>`0x7FFCE152E2A9 (3 samples, 0.11%)</title><rect x="59.2675%" y="517" width="0.1110%" height="15" fill="rgb(220,201,45)" fg:x="1602" fg:w="3"/><text x="59.5175%" y="527.50"></text></g><g><title>`0x7FFCE152EC7A (2 samples, 0.07%)</title><rect x="59.3045%" y="501" width="0.0740%" height="15" fill="rgb(225,33,4)" fg:x="1603" fg:w="2"/><text x="59.5545%" y="511.50"></text></g><g><title>`0x7FFCE157EB08 (1 samples, 0.04%)</title><rect x="59.3785%" y="501" width="0.0370%" height="15" fill="rgb(224,33,50)" fg:x="1605" fg:w="1"/><text x="59.6285%" y="511.50"></text></g><g><title>`0x7FFCE152EAD2 (2 samples, 0.07%)</title><rect x="59.3785%" y="533" width="0.0740%" height="15" fill="rgb(246,198,51)" fg:x="1605" fg:w="2"/><text x="59.6285%" y="543.50"></text></g><g><title>`0x7FFCE152E249 (2 samples, 0.07%)</title><rect x="59.3785%" y="517" width="0.0740%" height="15" fill="rgb(205,22,4)" fg:x="1605" fg:w="2"/><text x="59.6285%" y="527.50"></text></g><g><title>`0x7FFCE157EB1C (1 samples, 0.04%)</title><rect x="59.4155%" y="501" width="0.0370%" height="15" fill="rgb(206,3,8)" fg:x="1606" fg:w="1"/><text x="59.6655%" y="511.50"></text></g><g><title>`0x7FFCE15365F6 (32 samples, 1.18%)</title><rect x="58.3056%" y="565" width="1.1839%" height="15" fill="rgb(251,23,15)" fg:x="1576" fg:w="32"/><text x="58.5556%" y="575.50"></text></g><g><title>`0x7FFCE152E430 (6 samples, 0.22%)</title><rect x="59.2675%" y="549" width="0.2220%" height="15" fill="rgb(252,88,28)" fg:x="1602" fg:w="6"/><text x="59.5175%" y="559.50"></text></g><g><title>`0x7FFCE152EB7B (1 samples, 0.04%)</title><rect x="59.4525%" y="533" width="0.0370%" height="15" fill="rgb(212,127,14)" fg:x="1607" fg:w="1"/><text x="59.7025%" y="543.50"></text></g><g><title>`0x7FFCE15370A7 (1 samples, 0.04%)</title><rect x="59.4895%" y="565" width="0.0370%" height="15" fill="rgb(247,145,37)" fg:x="1608" fg:w="1"/><text x="59.7395%" y="575.50"></text></g><g><title>`0x7FFCE1535B74 (40 samples, 1.48%)</title><rect x="58.0836%" y="581" width="1.4798%" height="15" fill="rgb(209,117,53)" fg:x="1570" fg:w="40"/><text x="58.3336%" y="591.50"></text></g><g><title>`0x7FFCE1537138 (1 samples, 0.04%)</title><rect x="59.5265%" y="565" width="0.0370%" height="15" fill="rgb(212,90,42)" fg:x="1609" fg:w="1"/><text x="59.7765%" y="575.50"></text></g><g><title>`0x7FFCE15347B1 (41 samples, 1.52%)</title><rect x="58.0836%" y="597" width="1.5168%" height="15" fill="rgb(218,164,37)" fg:x="1570" fg:w="41"/><text x="58.3336%" y="607.50"></text></g><g><title>`0x7FFCE1535BBB (1 samples, 0.04%)</title><rect x="59.5634%" y="581" width="0.0370%" height="15" fill="rgb(246,65,34)" fg:x="1610" fg:w="1"/><text x="59.8134%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::scalarmul::impl$3::mul(matrix::Matrix (43 samples, 1.59%)</title><rect x="58.0466%" y="645" width="1.5908%" height="15" fill="rgb(231,100,33)" fg:x="1569" fg:w="43"/><text x="58.2966%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::scalarmul::impl$2::mul(matrix::Matrix (43 samples, 1.59%)</title><rect x="58.0466%" y="629" width="1.5908%" height="15" fill="rgb(228,126,14)" fg:x="1569" fg:w="43"/><text x="58.2966%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (43 samples, 1.59%)</title><rect x="58.0466%" y="613" width="1.5908%" height="15" fill="rgb(215,173,21)" fg:x="1569" fg:w="43"/><text x="58.2966%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$14::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::scalarmul::impl$2::mul::closure_env$0 (1 samples, 0.04%)</title><rect x="59.6004%" y="597" width="0.0370%" height="15" fill="rgb(210,6,40)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::scalarmul::impl$2::mul::closure_env$0 (1 samples, 0.04%)</title><rect x="59.6004%" y="581" width="0.0370%" height="15" fill="rgb(212,48,18)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,matrix::ops::scalarmul::impl$2::mul::closure_env$0 (1 samples, 0.04%)</title><rect x="59.6004%" y="565" width="0.0370%" height="15" fill="rgb(230,214,11)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.04%)</title><rect x="59.6004%" y="549" width="0.0370%" height="15" fill="rgb(254,105,39)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="59.6004%" y="533" width="0.0370%" height="15" fill="rgb(245,158,5)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="59.6004%" y="517" width="0.0370%" height="15" fill="rgb(249,208,11)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (1 samples, 0.04%)</title><rect x="59.6004%" y="501" width="0.0370%" height="15" fill="rgb(210,39,28)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="511.50"></text></g><g><title>`0x7FFCE153B3C7 (1 samples, 0.04%)</title><rect x="59.6004%" y="485" width="0.0370%" height="15" fill="rgb(211,56,53)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="495.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="59.6004%" y="469" width="0.0370%" height="15" fill="rgb(226,201,30)" fg:x="1611" fg:w="1"/><text x="59.8504%" y="479.50"></text></g><g><title>`0x7FFCE0C558B0 (1 samples, 0.04%)</title><rect x="59.7114%" y="629" width="0.0370%" height="15" fill="rgb(239,101,34)" fg:x="1614" fg:w="1"/><text x="59.9614%" y="639.50"></text></g><g><title>`0x7FFCE1534760 (2 samples, 0.07%)</title><rect x="59.7484%" y="629" width="0.0740%" height="15" fill="rgb(226,209,5)" fg:x="1615" fg:w="2"/><text x="59.9984%" y="639.50"></text></g><g><title>`0x7FFCE1535B66 (1 samples, 0.04%)</title><rect x="59.8224%" y="613" width="0.0370%" height="15" fill="rgb(250,105,47)" fg:x="1617" fg:w="1"/><text x="60.0724%" y="623.50"></text></g><g><title>`0x7FFCE1535D6F (1 samples, 0.04%)</title><rect x="59.8594%" y="597" width="0.0370%" height="15" fill="rgb(230,72,3)" fg:x="1618" fg:w="1"/><text x="60.1094%" y="607.50"></text></g><g><title>`0x7FFCE15307EF (1 samples, 0.04%)</title><rect x="59.8594%" y="581" width="0.0370%" height="15" fill="rgb(232,218,39)" fg:x="1618" fg:w="1"/><text x="60.1094%" y="591.50"></text></g><g><title>`0x7FFCE15368B8 (1 samples, 0.04%)</title><rect x="59.8964%" y="597" width="0.0370%" height="15" fill="rgb(248,166,6)" fg:x="1619" fg:w="1"/><text x="60.1464%" y="607.50"></text></g><g><title>`0x7FFCE1536904 (1 samples, 0.04%)</title><rect x="59.9334%" y="597" width="0.0370%" height="15" fill="rgb(247,89,20)" fg:x="1620" fg:w="1"/><text x="60.1834%" y="607.50"></text></g><g><title>`0x7FFCE1536B5B (1 samples, 0.04%)</title><rect x="59.9704%" y="597" width="0.0370%" height="15" fill="rgb(248,130,54)" fg:x="1621" fg:w="1"/><text x="60.2204%" y="607.50"></text></g><g><title>`0x7FFCE1535B74 (5 samples, 0.18%)</title><rect x="59.8594%" y="613" width="0.1850%" height="15" fill="rgb(234,196,4)" fg:x="1618" fg:w="5"/><text x="60.1094%" y="623.50"></text></g><g><title>`0x7FFCE153706E (1 samples, 0.04%)</title><rect x="60.0074%" y="597" width="0.0370%" height="15" fill="rgb(250,143,31)" fg:x="1622" fg:w="1"/><text x="60.2574%" y="607.50"></text></g><g><title>`0x7FFCE15347B1 (7 samples, 0.26%)</title><rect x="59.8224%" y="629" width="0.2590%" height="15" fill="rgb(211,110,34)" fg:x="1617" fg:w="7"/><text x="60.0724%" y="639.50"></text></g><g><title>`0x7FFCE15B78C8 (1 samples, 0.04%)</title><rect x="60.0444%" y="613" width="0.0370%" height="15" fill="rgb(215,124,48)" fg:x="1623" fg:w="1"/><text x="60.2944%" y="623.50"></text></g><g><title>`0x7FFCE153A9A0 (1 samples, 0.04%)</title><rect x="60.0814%" y="565" width="0.0370%" height="15" fill="rgb(216,46,13)" fg:x="1624" fg:w="1"/><text x="60.3314%" y="575.50"></text></g><g><title>`0x7FFCE153A9A5 (2 samples, 0.07%)</title><rect x="60.1184%" y="565" width="0.0740%" height="15" fill="rgb(205,184,25)" fg:x="1625" fg:w="2"/><text x="60.3684%" y="575.50"></text></g><g><title>`0x7FFCE153AA25 (1 samples, 0.04%)</title><rect x="60.1924%" y="565" width="0.0370%" height="15" fill="rgb(228,1,10)" fg:x="1627" fg:w="1"/><text x="60.4424%" y="575.50"></text></g><g><title>`0x7FFCE153AA30 (1 samples, 0.04%)</title><rect x="60.2294%" y="565" width="0.0370%" height="15" fill="rgb(213,116,27)" fg:x="1628" fg:w="1"/><text x="60.4794%" y="575.50"></text></g><g><title>`0x7FFCE153B39E (1 samples, 0.04%)</title><rect x="60.2664%" y="565" width="0.0370%" height="15" fill="rgb(241,95,50)" fg:x="1629" fg:w="1"/><text x="60.5164%" y="575.50"></text></g><g><title>`0x7FFCE153B73C (1 samples, 0.04%)</title><rect x="60.3034%" y="549" width="0.0370%" height="15" fill="rgb(238,48,32)" fg:x="1630" fg:w="1"/><text x="60.5534%" y="559.50"></text></g><g><title>`0x7FFCE153B86B (1 samples, 0.04%)</title><rect x="60.3404%" y="549" width="0.0370%" height="15" fill="rgb(235,113,49)" fg:x="1631" fg:w="1"/><text x="60.5904%" y="559.50"></text></g><g><title>`0x7FFCE15143E2 (1 samples, 0.04%)</title><rect x="60.3404%" y="533" width="0.0370%" height="15" fill="rgb(205,127,43)" fg:x="1631" fg:w="1"/><text x="60.5904%" y="543.50"></text></g><g><title>`0x7FFCE153B3C7 (3 samples, 0.11%)</title><rect x="60.3034%" y="565" width="0.1110%" height="15" fill="rgb(250,162,2)" fg:x="1630" fg:w="3"/><text x="60.5534%" y="575.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="60.3774%" y="549" width="0.0370%" height="15" fill="rgb(220,13,41)" fg:x="1632" fg:w="1"/><text x="60.6274%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::exchange_malloc (10 samples, 0.37%)</title><rect x="60.0814%" y="629" width="0.3700%" height="15" fill="rgb(249,221,25)" fg:x="1624" fg:w="10"/><text x="60.3314%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::allocate (10 samples, 0.37%)</title><rect x="60.0814%" y="613" width="0.3700%" height="15" fill="rgb(215,208,19)" fg:x="1624" fg:w="10"/><text x="60.3314%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::Global::alloc_impl (10 samples, 0.37%)</title><rect x="60.0814%" y="597" width="0.3700%" height="15" fill="rgb(236,175,2)" fg:x="1624" fg:w="10"/><text x="60.3314%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::alloc (10 samples, 0.37%)</title><rect x="60.0814%" y="581" width="0.3700%" height="15" fill="rgb(241,52,2)" fg:x="1624" fg:w="10"/><text x="60.3314%" y="591.50"></text></g><g><title>`0x7FFCE153B5D4 (1 samples, 0.04%)</title><rect x="60.4144%" y="565" width="0.0370%" height="15" fill="rgb(248,140,14)" fg:x="1633" fg:w="1"/><text x="60.6644%" y="575.50"></text></g><g><title>`0x7FFCC4ED1268 (1 samples, 0.04%)</title><rect x="60.5623%" y="469" width="0.0370%" height="15" fill="rgb(253,22,42)" fg:x="1637" fg:w="1"/><text x="60.8123%" y="479.50"></text></g><g><title>`0x7FFCC4ED3010 (4 samples, 0.15%)</title><rect x="60.5993%" y="469" width="0.1480%" height="15" fill="rgb(234,61,47)" fg:x="1638" fg:w="4"/><text x="60.8493%" y="479.50"></text></g><g><title>`0x7FFCE153B3C7 (1 samples, 0.04%)</title><rect x="60.7473%" y="373" width="0.0370%" height="15" fill="rgb(208,226,15)" fg:x="1642" fg:w="1"/><text x="60.9973%" y="383.50"></text></g><g><title>`0x7FFCE153B86B (1 samples, 0.04%)</title><rect x="60.7473%" y="357" width="0.0370%" height="15" fill="rgb(217,221,4)" fg:x="1642" fg:w="1"/><text x="60.9973%" y="367.50"></text></g><g><title>`0x7FFCE15143E2 (1 samples, 0.04%)</title><rect x="60.7473%" y="341" width="0.0370%" height="15" fill="rgb(212,174,34)" fg:x="1642" fg:w="1"/><text x="60.9973%" y="351.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Formatter::write_formatted_parts (8 samples, 0.30%)</title><rect x="60.5253%" y="565" width="0.2960%" height="15" fill="rgb(253,83,4)" fg:x="1636" fg:w="8"/><text x="60.7753%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::string::impl$67::write_str (8 samples, 0.30%)</title><rect x="60.5253%" y="549" width="0.2960%" height="15" fill="rgb(250,195,49)" fg:x="1636" fg:w="8"/><text x="60.7753%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::string::String::push_str (7 samples, 0.26%)</title><rect x="60.5623%" y="533" width="0.2590%" height="15" fill="rgb(241,192,25)" fg:x="1637" fg:w="7"/><text x="60.8123%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::extend_from_slice (7 samples, 0.26%)</title><rect x="60.5623%" y="517" width="0.2590%" height="15" fill="rgb(208,124,10)" fg:x="1637" fg:w="7"/><text x="60.8123%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$4::spec_extend (7 samples, 0.26%)</title><rect x="60.5623%" y="501" width="0.2590%" height="15" fill="rgb(222,33,0)" fg:x="1637" fg:w="7"/><text x="60.8123%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::append_elements (7 samples, 0.26%)</title><rect x="60.5623%" y="485" width="0.2590%" height="15" fill="rgb(234,209,28)" fg:x="1637" fg:w="7"/><text x="60.8123%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::len (2 samples, 0.07%)</title><rect x="60.7473%" y="469" width="0.0740%" height="15" fill="rgb(224,11,23)" fg:x="1642" fg:w="2"/><text x="60.9973%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="60.7473%" y="453" width="0.0740%" height="15" fill="rgb(232,99,1)" fg:x="1642" fg:w="2"/><text x="60.9973%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::grow_amortized (2 samples, 0.07%)</title><rect x="60.7473%" y="437" width="0.0740%" height="15" fill="rgb(237,95,45)" fg:x="1642" fg:w="2"/><text x="60.9973%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`core::result::impl$26::branch (2 samples, 0.07%)</title><rect x="60.7473%" y="421" width="0.0740%" height="15" fill="rgb(208,109,11)" fg:x="1642" fg:w="2"/><text x="60.9973%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="60.7473%" y="405" width="0.0740%" height="15" fill="rgb(216,190,48)" fg:x="1642" fg:w="2"/><text x="60.9973%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`core::result::Result::map_err (2 samples, 0.07%)</title><rect x="60.7473%" y="389" width="0.0740%" height="15" fill="rgb(251,171,36)" fg:x="1642" fg:w="2"/><text x="60.9973%" y="399.50"></text></g><g><title>`0x7FFCE153B455 (1 samples, 0.04%)</title><rect x="60.7843%" y="373" width="0.0370%" height="15" fill="rgb(230,62,22)" fg:x="1643" fg:w="1"/><text x="61.0343%" y="383.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::decoder::decode (1 samples, 0.04%)</title><rect x="60.8213%" y="549" width="0.0370%" height="15" fill="rgb(225,114,35)" fg:x="1644" fg:w="1"/><text x="61.0713%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::float::float_to_decimal_common_exact&lt;f64&gt; (12 samples, 0.44%)</title><rect x="60.4514%" y="581" width="0.4440%" height="15" fill="rgb(215,118,42)" fg:x="1634" fg:w="12"/><text x="60.7014%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::to_exact_fixed_str (2 samples, 0.07%)</title><rect x="60.8213%" y="565" width="0.0740%" height="15" fill="rgb(243,119,21)" fg:x="1644" fg:w="2"/><text x="61.0713%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`core::ops::function::FnMut::call_mut (1 samples, 0.04%)</title><rect x="60.8583%" y="549" width="0.0370%" height="15" fill="rgb(252,177,53)" fg:x="1645" fg:w="1"/><text x="61.1083%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::format_exact (1 samples, 0.04%)</title><rect x="60.8583%" y="533" width="0.0370%" height="15" fill="rgb(237,209,29)" fg:x="1645" fg:w="1"/><text x="61.1083%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::format_exact_opt (1 samples, 0.04%)</title><rect x="60.8583%" y="517" width="0.0370%" height="15" fill="rgb(212,65,23)" fg:x="1645" fg:w="1"/><text x="61.1083%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (1 samples, 0.04%)</title><rect x="60.8583%" y="501" width="0.0370%" height="15" fill="rgb(230,222,46)" fg:x="1645" fg:w="1"/><text x="61.1083%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::round_up (1 samples, 0.04%)</title><rect x="60.8583%" y="485" width="0.0370%" height="15" fill="rgb(215,135,32)" fg:x="1645" fg:w="1"/><text x="61.1083%" y="495.50"></text></g><g><title>`0x7FFCC4ED18A0 (1 samples, 0.04%)</title><rect x="60.8583%" y="469" width="0.0370%" height="15" fill="rgb(246,101,22)" fg:x="1645" fg:w="1"/><text x="61.1083%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::fmt::format::format_inner (13 samples, 0.48%)</title><rect x="60.4514%" y="629" width="0.4809%" height="15" fill="rgb(206,107,13)" fg:x="1634" fg:w="13"/><text x="60.7014%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`core::result::Result::expect (13 samples, 0.48%)</title><rect x="60.4514%" y="613" width="0.4809%" height="15" fill="rgb(250,100,44)" fg:x="1634" fg:w="13"/><text x="60.7014%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::write (13 samples, 0.48%)</title><rect x="60.4514%" y="597" width="0.4809%" height="15" fill="rgb(231,147,38)" fg:x="1634" fg:w="13"/><text x="60.7014%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::float::impl$7::fmt (1 samples, 0.04%)</title><rect x="60.8953%" y="581" width="0.0370%" height="15" fill="rgb(229,8,40)" fg:x="1646" fg:w="1"/><text x="61.1453%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::float::float_to_decimal_display (1 samples, 0.04%)</title><rect x="60.8953%" y="565" width="0.0370%" height="15" fill="rgb(221,135,30)" fg:x="1646" fg:w="1"/><text x="61.1453%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Formatter::sign_plus (1 samples, 0.04%)</title><rect x="60.8953%" y="549" width="0.0370%" height="15" fill="rgb(249,193,18)" fg:x="1646" fg:w="1"/><text x="61.1453%" y="559.50"></text></g><g><title>`0x7FFCC4ED1416 (1 samples, 0.04%)</title><rect x="60.9323%" y="597" width="0.0370%" height="15" fill="rgb(209,133,39)" fg:x="1647" fg:w="1"/><text x="61.1823%" y="607.50"></text></g><g><title>`0x7FFCE153373B (3 samples, 0.11%)</title><rect x="61.0063%" y="469" width="0.1110%" height="15" fill="rgb(232,100,14)" fg:x="1649" fg:w="3"/><text x="61.2563%" y="479.50"></text></g><g><title>`0x7FFCE1531AC5 (1 samples, 0.04%)</title><rect x="61.1173%" y="453" width="0.0370%" height="15" fill="rgb(224,185,1)" fg:x="1652" fg:w="1"/><text x="61.3673%" y="463.50"></text></g><g><title>`0x7FFCE1531B01 (1 samples, 0.04%)</title><rect x="61.1543%" y="453" width="0.0370%" height="15" fill="rgb(223,139,8)" fg:x="1653" fg:w="1"/><text x="61.4043%" y="463.50"></text></g><g><title>`0x7FFCE153B385 (1 samples, 0.04%)</title><rect x="61.1913%" y="437" width="0.0370%" height="15" fill="rgb(232,213,38)" fg:x="1654" fg:w="1"/><text x="61.4413%" y="447.50"></text></g><g><title>`0x7FFCE153B3C2 (1 samples, 0.04%)</title><rect x="61.2283%" y="437" width="0.0370%" height="15" fill="rgb(207,94,22)" fg:x="1655" fg:w="1"/><text x="61.4783%" y="447.50"></text></g><g><title>`0x7FFCE153B721 (1 samples, 0.04%)</title><rect x="61.2653%" y="421" width="0.0370%" height="15" fill="rgb(219,183,54)" fg:x="1656" fg:w="1"/><text x="61.5153%" y="431.50"></text></g><g><title>`0x7FFCE153B73C (1 samples, 0.04%)</title><rect x="61.3023%" y="421" width="0.0370%" height="15" fill="rgb(216,185,54)" fg:x="1657" fg:w="1"/><text x="61.5523%" y="431.50"></text></g><g><title>`0x7FFCE153B748 (1 samples, 0.04%)</title><rect x="61.3393%" y="421" width="0.0370%" height="15" fill="rgb(254,217,39)" fg:x="1658" fg:w="1"/><text x="61.5893%" y="431.50"></text></g><g><title>`0x7FFCE153B7DF (1 samples, 0.04%)</title><rect x="61.3762%" y="421" width="0.0370%" height="15" fill="rgb(240,178,23)" fg:x="1659" fg:w="1"/><text x="61.6262%" y="431.50"></text></g><g><title>`0x7FFCE153B813 (1 samples, 0.04%)</title><rect x="61.4132%" y="421" width="0.0370%" height="15" fill="rgb(218,11,47)" fg:x="1660" fg:w="1"/><text x="61.6632%" y="431.50"></text></g><g><title>`0x7FFCE153B86B (1 samples, 0.04%)</title><rect x="61.4502%" y="421" width="0.0370%" height="15" fill="rgb(218,51,51)" fg:x="1661" fg:w="1"/><text x="61.7002%" y="431.50"></text></g><g><title>`0x7FFCE151444B (1 samples, 0.04%)</title><rect x="61.4502%" y="405" width="0.0370%" height="15" fill="rgb(238,126,27)" fg:x="1661" fg:w="1"/><text x="61.7002%" y="415.50"></text></g><g><title>`0x7FFCE153B8A4 (1 samples, 0.04%)</title><rect x="61.4872%" y="421" width="0.0370%" height="15" fill="rgb(249,202,22)" fg:x="1662" fg:w="1"/><text x="61.7372%" y="431.50"></text></g><g><title>`0x7FFCE151E37B (1 samples, 0.04%)</title><rect x="61.5242%" y="341" width="0.0370%" height="15" fill="rgb(254,195,49)" fg:x="1663" fg:w="1"/><text x="61.7742%" y="351.50"></text></g><g><title>`0x7FFCE151E715 (1 samples, 0.04%)</title><rect x="61.5242%" y="325" width="0.0370%" height="15" fill="rgb(208,123,14)" fg:x="1663" fg:w="1"/><text x="61.7742%" y="335.50"></text></g><g><title>`0x7FFCE15AD864 (1 samples, 0.04%)</title><rect x="61.5242%" y="309" width="0.0370%" height="15" fill="rgb(224,200,8)" fg:x="1663" fg:w="1"/><text x="61.7742%" y="319.50"></text></g><g><title>`0x7FFCE153DBFA (2 samples, 0.07%)</title><rect x="61.5242%" y="357" width="0.0740%" height="15" fill="rgb(217,61,36)" fg:x="1663" fg:w="2"/><text x="61.7742%" y="367.50"></text></g><g><title>`0x7FFCE151E46F (1 samples, 0.04%)</title><rect x="61.5612%" y="341" width="0.0370%" height="15" fill="rgb(206,35,45)" fg:x="1664" fg:w="1"/><text x="61.8112%" y="351.50"></text></g><g><title>`0x7FFCE15AD864 (1 samples, 0.04%)</title><rect x="61.5612%" y="325" width="0.0370%" height="15" fill="rgb(217,65,33)" fg:x="1664" fg:w="1"/><text x="61.8112%" y="335.50"></text></g><g><title>`0x7FFCE153BEDA (4 samples, 0.15%)</title><rect x="61.5242%" y="421" width="0.1480%" height="15" fill="rgb(222,158,48)" fg:x="1663" fg:w="4"/><text x="61.7742%" y="431.50"></text></g><g><title>`0x7FFCE1530B31 (4 samples, 0.15%)</title><rect x="61.5242%" y="405" width="0.1480%" height="15" fill="rgb(254,2,54)" fg:x="1663" fg:w="4"/><text x="61.7742%" y="415.50"></text></g><g><title>`0x7FFCE152F44F (4 samples, 0.15%)</title><rect x="61.5242%" y="389" width="0.1480%" height="15" fill="rgb(250,143,38)" fg:x="1663" fg:w="4"/><text x="61.7742%" y="399.50"></text></g><g><title>`0x7FFCE153B44D (4 samples, 0.15%)</title><rect x="61.5242%" y="373" width="0.1480%" height="15" fill="rgb(248,25,0)" fg:x="1663" fg:w="4"/><text x="61.7742%" y="383.50"></text></g><g><title>`0x7FFCE153DFDF (2 samples, 0.07%)</title><rect x="61.5982%" y="357" width="0.0740%" height="15" fill="rgb(206,152,27)" fg:x="1665" fg:w="2"/><text x="61.8482%" y="367.50"></text></g><g><title>`0x7FFCE151A16F (6 samples, 0.22%)</title><rect x="61.6722%" y="405" width="0.2220%" height="15" fill="rgb(240,77,30)" fg:x="1667" fg:w="6"/><text x="61.9222%" y="415.50"></text></g><g><title>`0x7FFCE1531BF2 (20 samples, 0.74%)</title><rect x="61.1913%" y="453" width="0.7399%" height="15" fill="rgb(231,5,3)" fg:x="1654" fg:w="20"/><text x="61.4413%" y="463.50"></text></g><g><title>`0x7FFCE153B3C7 (18 samples, 0.67%)</title><rect x="61.2653%" y="437" width="0.6659%" height="15" fill="rgb(207,226,32)" fg:x="1656" fg:w="18"/><text x="61.5153%" y="447.50"></text></g><g><title>`0x7FFCE153BF5E (7 samples, 0.26%)</title><rect x="61.6722%" y="421" width="0.2590%" height="15" fill="rgb(222,207,47)" fg:x="1667" fg:w="7"/><text x="61.9222%" y="431.50"></text></g><g><title>`0x7FFCE151A176 (1 samples, 0.04%)</title><rect x="61.8942%" y="405" width="0.0370%" height="15" fill="rgb(229,115,45)" fg:x="1673" fg:w="1"/><text x="62.1442%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (27 samples, 1.00%)</title><rect x="60.9693%" y="597" width="0.9989%" height="15" fill="rgb(224,191,6)" fg:x="1648" fg:w="27"/><text x="61.2193%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (27 samples, 1.00%)</title><rect x="60.9693%" y="581" width="0.9989%" height="15" fill="rgb(230,227,24)" fg:x="1648" fg:w="27"/><text x="61.2193%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;alloc::string::String,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (27 samples, 1.00%)</title><rect x="60.9693%" y="565" width="0.9989%" height="15" fill="rgb(228,80,19)" fg:x="1648" fg:w="27"/><text x="61.2193%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::grow_amortized (27 samples, 1.00%)</title><rect x="60.9693%" y="549" width="0.9989%" height="15" fill="rgb(247,229,0)" fg:x="1648" fg:w="27"/><text x="61.2193%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (27 samples, 1.00%)</title><rect x="60.9693%" y="533" width="0.9989%" height="15" fill="rgb(237,194,15)" fg:x="1648" fg:w="27"/><text x="61.2193%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (27 samples, 1.00%)</title><rect x="60.9693%" y="517" width="0.9989%" height="15" fill="rgb(219,203,20)" fg:x="1648" fg:w="27"/><text x="61.2193%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (26 samples, 0.96%)</title><rect x="61.0063%" y="501" width="0.9619%" height="15" fill="rgb(234,128,8)" fg:x="1649" fg:w="26"/><text x="61.2563%" y="511.50"></text></g><g><title>`0x7FFCE15336BD (26 samples, 0.96%)</title><rect x="61.0063%" y="485" width="0.9619%" height="15" fill="rgb(248,202,8)" fg:x="1649" fg:w="26"/><text x="61.2563%" y="495.50"></text></g><g><title>`0x7FFCE15338E3 (23 samples, 0.85%)</title><rect x="61.1173%" y="469" width="0.8509%" height="15" fill="rgb(206,104,37)" fg:x="1652" fg:w="23"/><text x="61.3673%" y="479.50"></text></g><g><title>`0x7FFCE1531C4F (1 samples, 0.04%)</title><rect x="61.9312%" y="453" width="0.0370%" height="15" fill="rgb(223,8,27)" fg:x="1674" fg:w="1"/><text x="62.1812%" y="463.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="61.9312%" y="437" width="0.0370%" height="15" fill="rgb(216,217,28)" fg:x="1674" fg:w="1"/><text x="62.1812%" y="447.50"></text></g><g><title>`0x7FFCE15B74F3 (1 samples, 0.04%)</title><rect x="61.9312%" y="421" width="0.0370%" height="15" fill="rgb(249,199,1)" fg:x="1674" fg:w="1"/><text x="62.1812%" y="431.50"></text></g><g><title>`0x7FFCE153A9A0 (1 samples, 0.04%)</title><rect x="62.0792%" y="405" width="0.0370%" height="15" fill="rgb(240,85,17)" fg:x="1678" fg:w="1"/><text x="62.3292%" y="415.50"></text></g><g><title>`0x7FFCE153B3C2 (1 samples, 0.04%)</title><rect x="62.1162%" y="405" width="0.0370%" height="15" fill="rgb(206,108,45)" fg:x="1679" fg:w="1"/><text x="62.3662%" y="415.50"></text></g><g><title>`0x7FFCE153B748 (1 samples, 0.04%)</title><rect x="62.1532%" y="389" width="0.0370%" height="15" fill="rgb(245,210,41)" fg:x="1680" fg:w="1"/><text x="62.4032%" y="399.50"></text></g><g><title>`0x7FFCE151440B (1 samples, 0.04%)</title><rect x="62.1902%" y="373" width="0.0370%" height="15" fill="rgb(206,13,37)" fg:x="1681" fg:w="1"/><text x="62.4402%" y="383.50"></text></g><g><title>`0x7FFCE153B3C7 (3 samples, 0.11%)</title><rect x="62.1532%" y="405" width="0.1110%" height="15" fill="rgb(250,61,18)" fg:x="1680" fg:w="3"/><text x="62.4032%" y="415.50"></text></g><g><title>`0x7FFCE153B86B (2 samples, 0.07%)</title><rect x="62.1902%" y="389" width="0.0740%" height="15" fill="rgb(235,172,48)" fg:x="1681" fg:w="2"/><text x="62.4402%" y="399.50"></text></g><g><title>`0x7FFCE151443A (1 samples, 0.04%)</title><rect x="62.2272%" y="373" width="0.0370%" height="15" fill="rgb(249,201,17)" fg:x="1682" fg:w="1"/><text x="62.4772%" y="383.50"></text></g><g><title>`0x7FFCE153D439 (1 samples, 0.04%)</title><rect x="62.2642%" y="389" width="0.0370%" height="15" fill="rgb(219,208,6)" fg:x="1683" fg:w="1"/><text x="62.5142%" y="399.50"></text></g><g><title>`0x7FFCE153D504 (1 samples, 0.04%)</title><rect x="62.3011%" y="389" width="0.0370%" height="15" fill="rgb(248,31,23)" fg:x="1684" fg:w="1"/><text x="62.5511%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::with_capacity (9 samples, 0.33%)</title><rect x="62.0422%" y="517" width="0.3330%" height="15" fill="rgb(245,15,42)" fg:x="1677" fg:w="9"/><text x="62.2922%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::with_capacity_in (9 samples, 0.33%)</title><rect x="62.0422%" y="501" width="0.3330%" height="15" fill="rgb(222,217,39)" fg:x="1677" fg:w="9"/><text x="62.2922%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::with_capacity_in (9 samples, 0.33%)</title><rect x="62.0422%" y="485" width="0.3330%" height="15" fill="rgb(210,219,27)" fg:x="1677" fg:w="9"/><text x="62.2922%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::allocate_in (9 samples, 0.33%)</title><rect x="62.0422%" y="469" width="0.3330%" height="15" fill="rgb(252,166,36)" fg:x="1677" fg:w="9"/><text x="62.2922%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::allocate (9 samples, 0.33%)</title><rect x="62.0422%" y="453" width="0.3330%" height="15" fill="rgb(245,132,34)" fg:x="1677" fg:w="9"/><text x="62.2922%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::Global::alloc_impl (9 samples, 0.33%)</title><rect x="62.0422%" y="437" width="0.3330%" height="15" fill="rgb(236,54,3)" fg:x="1677" fg:w="9"/><text x="62.2922%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::alloc (8 samples, 0.30%)</title><rect x="62.0792%" y="421" width="0.2960%" height="15" fill="rgb(241,173,43)" fg:x="1678" fg:w="8"/><text x="62.3292%" y="431.50"></text></g><g><title>`0x7FFCE153B44D (3 samples, 0.11%)</title><rect x="62.2642%" y="405" width="0.1110%" height="15" fill="rgb(215,190,9)" fg:x="1683" fg:w="3"/><text x="62.5142%" y="415.50"></text></g><g><title>`0x7FFCE153D537 (1 samples, 0.04%)</title><rect x="62.3381%" y="389" width="0.0370%" height="15" fill="rgb(242,101,16)" fg:x="1685" fg:w="1"/><text x="62.5881%" y="399.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::string::String::with_capacity (2 samples, 0.07%)</title><rect x="62.7821%" y="357" width="0.0740%" height="15" fill="rgb(223,190,21)" fg:x="1697" fg:w="2"/><text x="63.0321%" y="367.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Arguments::estimated_capacity (5 samples, 0.18%)</title><rect x="62.8561%" y="357" width="0.1850%" height="15" fill="rgb(215,228,25)" fg:x="1699" fg:w="5"/><text x="63.1061%" y="367.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::sum (3 samples, 0.11%)</title><rect x="62.9301%" y="341" width="0.1110%" height="15" fill="rgb(225,36,22)" fg:x="1701" fg:w="3"/><text x="63.1801%" y="351.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$48::sum (3 samples, 0.11%)</title><rect x="62.9301%" y="325" width="0.1110%" height="15" fill="rgb(251,106,46)" fg:x="1701" fg:w="3"/><text x="63.1801%" y="335.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold (3 samples, 0.11%)</title><rect x="62.9301%" y="309" width="0.1110%" height="15" fill="rgb(208,90,1)" fg:x="1701" fg:w="3"/><text x="63.1801%" y="319.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::fold (3 samples, 0.11%)</title><rect x="62.9301%" y="293" width="0.1110%" height="15" fill="rgb(243,10,4)" fg:x="1701" fg:w="3"/><text x="63.1801%" y="303.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Formatter::new (4 samples, 0.15%)</title><rect x="63.4480%" y="325" width="0.1480%" height="15" fill="rgb(212,137,27)" fg:x="1715" fg:w="4"/><text x="63.6980%" y="335.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Formatter::pad_formatted_parts (6 samples, 0.22%)</title><rect x="63.7440%" y="309" width="0.2220%" height="15" fill="rgb(231,220,49)" fg:x="1723" fg:w="6"/><text x="63.9940%" y="319.50"></text></g><g><title>`0x7FFCC4ED1200 (2 samples, 0.07%)</title><rect x="64.9649%" y="213" width="0.0740%" height="15" fill="rgb(237,96,20)" fg:x="1756" fg:w="2"/><text x="65.2149%" y="223.50"></text></g><g><title>`0x7FFCC4ED120A (1 samples, 0.04%)</title><rect x="65.0388%" y="213" width="0.0370%" height="15" fill="rgb(239,229,30)" fg:x="1758" fg:w="1"/><text x="65.2888%" y="223.50"></text></g><g><title>`0x7FFCC4ED1214 (1 samples, 0.04%)</title><rect x="65.0758%" y="213" width="0.0370%" height="15" fill="rgb(219,65,33)" fg:x="1759" fg:w="1"/><text x="65.3258%" y="223.50"></text></g><g><title>`0x7FFCC4ED1228 (1 samples, 0.04%)</title><rect x="65.1128%" y="213" width="0.0370%" height="15" fill="rgb(243,134,7)" fg:x="1760" fg:w="1"/><text x="65.3628%" y="223.50"></text></g><g><title>`0x7FFCC4ED122B (1 samples, 0.04%)</title><rect x="65.1498%" y="213" width="0.0370%" height="15" fill="rgb(216,177,54)" fg:x="1761" fg:w="1"/><text x="65.3998%" y="223.50"></text></g><g><title>`0x7FFCC4ED1317 (2 samples, 0.07%)</title><rect x="65.1868%" y="213" width="0.0740%" height="15" fill="rgb(211,160,20)" fg:x="1762" fg:w="2"/><text x="65.4368%" y="223.50"></text></g><g><title>`0x7FFCC4ED1319 (3 samples, 0.11%)</title><rect x="65.2608%" y="213" width="0.1110%" height="15" fill="rgb(239,85,39)" fg:x="1764" fg:w="3"/><text x="65.5108%" y="223.50"></text></g><g><title>`0x7FFCC4ED131A (3 samples, 0.11%)</title><rect x="65.3718%" y="213" width="0.1110%" height="15" fill="rgb(232,125,22)" fg:x="1767" fg:w="3"/><text x="65.6218%" y="223.50"></text></g><g><title>`0x7FFCC4ED3010 (3 samples, 0.11%)</title><rect x="65.4828%" y="213" width="0.1110%" height="15" fill="rgb(244,57,34)" fg:x="1770" fg:w="3"/><text x="65.7328%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::current_memory (1 samples, 0.04%)</title><rect x="65.8158%" y="165" width="0.0370%" height="15" fill="rgb(214,203,32)" fg:x="1779" fg:w="1"/><text x="66.0658%" y="175.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::set_ptr_and_cap (2 samples, 0.07%)</title><rect x="65.8528%" y="165" width="0.0740%" height="15" fill="rgb(207,58,43)" fg:x="1780" fg:w="2"/><text x="66.1028%" y="175.50"></text></g><g><title>kuramoto_oscillators.exe`core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="65.9267%" y="165" width="0.0370%" height="15" fill="rgb(215,193,15)" fg:x="1782" fg:w="1"/><text x="66.1767%" y="175.50"></text></g><g><title>kuramoto_oscillators.exe`core::alloc::layout::impl$0::array::inner (1 samples, 0.04%)</title><rect x="65.9267%" y="149" width="0.0370%" height="15" fill="rgb(232,15,44)" fg:x="1782" fg:w="1"/><text x="66.1767%" y="159.50"></text></g><g><title>`0x7FFCE153A9A0 (1 samples, 0.04%)</title><rect x="66.2227%" y="117" width="0.0370%" height="15" fill="rgb(212,3,48)" fg:x="1790" fg:w="1"/><text x="66.4727%" y="127.50"></text></g><g><title>`0x7FFCE153A9A5 (3 samples, 0.11%)</title><rect x="66.2597%" y="117" width="0.1110%" height="15" fill="rgb(218,128,7)" fg:x="1791" fg:w="3"/><text x="66.5097%" y="127.50"></text></g><g><title>`0x7FFCE153A9AB (1 samples, 0.04%)</title><rect x="66.3707%" y="117" width="0.0370%" height="15" fill="rgb(226,216,39)" fg:x="1794" fg:w="1"/><text x="66.6207%" y="127.50"></text></g><g><title>`0x7FFCE153A9C7 (3 samples, 0.11%)</title><rect x="66.4077%" y="117" width="0.1110%" height="15" fill="rgb(243,47,51)" fg:x="1795" fg:w="3"/><text x="66.6577%" y="127.50"></text></g><g><title>`0x7FFCE153A9D2 (1 samples, 0.04%)</title><rect x="66.5187%" y="117" width="0.0370%" height="15" fill="rgb(241,183,40)" fg:x="1798" fg:w="1"/><text x="66.7687%" y="127.50"></text></g><g><title>`0x7FFCE153A9D9 (1 samples, 0.04%)</title><rect x="66.5557%" y="117" width="0.0370%" height="15" fill="rgb(231,217,32)" fg:x="1799" fg:w="1"/><text x="66.8057%" y="127.50"></text></g><g><title>`0x7FFCE153A9ED (1 samples, 0.04%)</title><rect x="66.5927%" y="117" width="0.0370%" height="15" fill="rgb(229,61,38)" fg:x="1800" fg:w="1"/><text x="66.8427%" y="127.50"></text></g><g><title>`0x7FFCE153AA2B (1 samples, 0.04%)</title><rect x="66.6297%" y="117" width="0.0370%" height="15" fill="rgb(225,210,5)" fg:x="1801" fg:w="1"/><text x="66.8797%" y="127.50"></text></g><g><title>`0x7FFCE153AA3B (1 samples, 0.04%)</title><rect x="66.6667%" y="117" width="0.0370%" height="15" fill="rgb(231,79,45)" fg:x="1802" fg:w="1"/><text x="66.9167%" y="127.50"></text></g><g><title>`0x7FFCE153AA59 (1 samples, 0.04%)</title><rect x="66.7037%" y="117" width="0.0370%" height="15" fill="rgb(224,100,7)" fg:x="1803" fg:w="1"/><text x="66.9537%" y="127.50"></text></g><g><title>`0x7FFCE153B26E (1 samples, 0.04%)</title><rect x="66.7407%" y="117" width="0.0370%" height="15" fill="rgb(241,198,18)" fg:x="1804" fg:w="1"/><text x="66.9907%" y="127.50"></text></g><g><title>`0x7FFCE153B2A6 (1 samples, 0.04%)</title><rect x="66.7777%" y="117" width="0.0370%" height="15" fill="rgb(252,97,53)" fg:x="1805" fg:w="1"/><text x="67.0277%" y="127.50"></text></g><g><title>`0x7FFCE153B2A8 (1 samples, 0.04%)</title><rect x="66.8147%" y="117" width="0.0370%" height="15" fill="rgb(220,88,7)" fg:x="1806" fg:w="1"/><text x="67.0647%" y="127.50"></text></g><g><title>`0x7FFCE153B2BE (1 samples, 0.04%)</title><rect x="66.8516%" y="117" width="0.0370%" height="15" fill="rgb(213,176,14)" fg:x="1807" fg:w="1"/><text x="67.1016%" y="127.50"></text></g><g><title>`0x7FFCE153B2FF (1 samples, 0.04%)</title><rect x="66.8886%" y="117" width="0.0370%" height="15" fill="rgb(246,73,7)" fg:x="1808" fg:w="1"/><text x="67.1386%" y="127.50"></text></g><g><title>`0x7FFCE153B385 (1 samples, 0.04%)</title><rect x="66.9256%" y="117" width="0.0370%" height="15" fill="rgb(245,64,36)" fg:x="1809" fg:w="1"/><text x="67.1756%" y="127.50"></text></g><g><title>`0x7FFCE153B38A (1 samples, 0.04%)</title><rect x="66.9626%" y="117" width="0.0370%" height="15" fill="rgb(245,80,10)" fg:x="1810" fg:w="1"/><text x="67.2126%" y="127.50"></text></g><g><title>`0x7FFCE153B396 (2 samples, 0.07%)</title><rect x="66.9996%" y="117" width="0.0740%" height="15" fill="rgb(232,107,50)" fg:x="1811" fg:w="2"/><text x="67.2496%" y="127.50"></text></g><g><title>`0x7FFCE153B3B7 (1 samples, 0.04%)</title><rect x="67.0736%" y="117" width="0.0370%" height="15" fill="rgb(253,3,0)" fg:x="1813" fg:w="1"/><text x="67.3236%" y="127.50"></text></g><g><title>`0x7FFCE153B3BE (2 samples, 0.07%)</title><rect x="67.1106%" y="117" width="0.0740%" height="15" fill="rgb(212,99,53)" fg:x="1814" fg:w="2"/><text x="67.3606%" y="127.50"></text></g><g><title>`0x7FFCE153B3C2 (1 samples, 0.04%)</title><rect x="67.1846%" y="117" width="0.0370%" height="15" fill="rgb(249,111,54)" fg:x="1816" fg:w="1"/><text x="67.4346%" y="127.50"></text></g><g><title>`0x7FFCE153B661 (1 samples, 0.04%)</title><rect x="67.2216%" y="101" width="0.0370%" height="15" fill="rgb(249,55,30)" fg:x="1817" fg:w="1"/><text x="67.4716%" y="111.50"></text></g><g><title>`0x7FFCE153B667 (1 samples, 0.04%)</title><rect x="67.2586%" y="101" width="0.0370%" height="15" fill="rgb(237,47,42)" fg:x="1818" fg:w="1"/><text x="67.5086%" y="111.50"></text></g><g><title>`0x7FFCE153B669 (1 samples, 0.04%)</title><rect x="67.2956%" y="101" width="0.0370%" height="15" fill="rgb(211,20,18)" fg:x="1819" fg:w="1"/><text x="67.5456%" y="111.50"></text></g><g><title>`0x7FFCE153B66B (1 samples, 0.04%)</title><rect x="67.3326%" y="101" width="0.0370%" height="15" fill="rgb(231,203,46)" fg:x="1820" fg:w="1"/><text x="67.5826%" y="111.50"></text></g><g><title>`0x7FFCE153B68C (1 samples, 0.04%)</title><rect x="67.3696%" y="101" width="0.0370%" height="15" fill="rgb(237,142,3)" fg:x="1821" fg:w="1"/><text x="67.6196%" y="111.50"></text></g><g><title>`0x7FFCE153B6A6 (1 samples, 0.04%)</title><rect x="67.4066%" y="101" width="0.0370%" height="15" fill="rgb(241,107,1)" fg:x="1822" fg:w="1"/><text x="67.6566%" y="111.50"></text></g><g><title>`0x7FFCE153B706 (1 samples, 0.04%)</title><rect x="67.4436%" y="101" width="0.0370%" height="15" fill="rgb(229,83,13)" fg:x="1823" fg:w="1"/><text x="67.6936%" y="111.50"></text></g><g><title>`0x7FFCE153B721 (4 samples, 0.15%)</title><rect x="67.4806%" y="101" width="0.1480%" height="15" fill="rgb(241,91,40)" fg:x="1824" fg:w="4"/><text x="67.7306%" y="111.50"></text></g><g><title>`0x7FFCE153B73C (2 samples, 0.07%)</title><rect x="67.6286%" y="101" width="0.0740%" height="15" fill="rgb(225,3,45)" fg:x="1828" fg:w="2"/><text x="67.8786%" y="111.50"></text></g><g><title>`0x7FFCE153B745 (1 samples, 0.04%)</title><rect x="67.7026%" y="101" width="0.0370%" height="15" fill="rgb(244,223,14)" fg:x="1830" fg:w="1"/><text x="67.9526%" y="111.50"></text></g><g><title>`0x7FFCE153B748 (1 samples, 0.04%)</title><rect x="67.7395%" y="101" width="0.0370%" height="15" fill="rgb(224,124,37)" fg:x="1831" fg:w="1"/><text x="67.9895%" y="111.50"></text></g><g><title>`0x7FFCE153B779 (1 samples, 0.04%)</title><rect x="67.7765%" y="101" width="0.0370%" height="15" fill="rgb(251,171,30)" fg:x="1832" fg:w="1"/><text x="68.0265%" y="111.50"></text></g><g><title>`0x7FFCE153B793 (1 samples, 0.04%)</title><rect x="67.8135%" y="101" width="0.0370%" height="15" fill="rgb(236,46,54)" fg:x="1833" fg:w="1"/><text x="68.0635%" y="111.50"></text></g><g><title>`0x7FFCE153B7A2 (12 samples, 0.44%)</title><rect x="67.8505%" y="101" width="0.4440%" height="15" fill="rgb(245,213,5)" fg:x="1834" fg:w="12"/><text x="68.1005%" y="111.50"></text></g><g><title>`0x7FFCE153B838 (1 samples, 0.04%)</title><rect x="68.2945%" y="101" width="0.0370%" height="15" fill="rgb(230,144,27)" fg:x="1846" fg:w="1"/><text x="68.5445%" y="111.50"></text></g><g><title>`0x7FFCE153B84E (1 samples, 0.04%)</title><rect x="68.3315%" y="101" width="0.0370%" height="15" fill="rgb(220,86,6)" fg:x="1847" fg:w="1"/><text x="68.5815%" y="111.50"></text></g><g><title>`0x7FFCE15143D0 (1 samples, 0.04%)</title><rect x="68.3685%" y="85" width="0.0370%" height="15" fill="rgb(240,20,13)" fg:x="1848" fg:w="1"/><text x="68.6185%" y="95.50"></text></g><g><title>`0x7FFCE15143DF (1 samples, 0.04%)</title><rect x="68.4055%" y="85" width="0.0370%" height="15" fill="rgb(217,89,34)" fg:x="1849" fg:w="1"/><text x="68.6555%" y="95.50"></text></g><g><title>`0x7FFCE15143E2 (1 samples, 0.04%)</title><rect x="68.4425%" y="85" width="0.0370%" height="15" fill="rgb(229,13,5)" fg:x="1850" fg:w="1"/><text x="68.6925%" y="95.50"></text></g><g><title>`0x7FFCE1514448 (1 samples, 0.04%)</title><rect x="68.4795%" y="85" width="0.0370%" height="15" fill="rgb(244,67,35)" fg:x="1851" fg:w="1"/><text x="68.7295%" y="95.50"></text></g><g><title>`0x7FFCE151444B (1 samples, 0.04%)</title><rect x="68.5165%" y="85" width="0.0370%" height="15" fill="rgb(221,40,2)" fg:x="1852" fg:w="1"/><text x="68.7665%" y="95.50"></text></g><g><title>`0x7FFCE151445F (1 samples, 0.04%)</title><rect x="68.5535%" y="85" width="0.0370%" height="15" fill="rgb(237,157,21)" fg:x="1853" fg:w="1"/><text x="68.8035%" y="95.50"></text></g><g><title>`0x7FFCE153B86B (7 samples, 0.26%)</title><rect x="68.3685%" y="101" width="0.2590%" height="15" fill="rgb(222,94,11)" fg:x="1848" fg:w="7"/><text x="68.6185%" y="111.50"></text></g><g><title>`0x7FFCE151446D (1 samples, 0.04%)</title><rect x="68.5905%" y="85" width="0.0370%" height="15" fill="rgb(249,113,6)" fg:x="1854" fg:w="1"/><text x="68.8405%" y="95.50"></text></g><g><title>`0x7FFCE153B878 (1 samples, 0.04%)</title><rect x="68.6275%" y="101" width="0.0370%" height="15" fill="rgb(238,137,36)" fg:x="1855" fg:w="1"/><text x="68.8775%" y="111.50"></text></g><g><title>`0x7FFCE153B881 (1 samples, 0.04%)</title><rect x="68.6644%" y="101" width="0.0370%" height="15" fill="rgb(210,102,26)" fg:x="1856" fg:w="1"/><text x="68.9144%" y="111.50"></text></g><g><title>`0x7FFCE153B885 (3 samples, 0.11%)</title><rect x="68.7014%" y="101" width="0.1110%" height="15" fill="rgb(218,30,30)" fg:x="1857" fg:w="3"/><text x="68.9514%" y="111.50"></text></g><g><title>`0x7FFCE153B890 (1 samples, 0.04%)</title><rect x="68.8124%" y="101" width="0.0370%" height="15" fill="rgb(214,67,26)" fg:x="1860" fg:w="1"/><text x="69.0624%" y="111.50"></text></g><g><title>`0x7FFCE153B8A4 (17 samples, 0.63%)</title><rect x="68.8494%" y="101" width="0.6289%" height="15" fill="rgb(251,9,53)" fg:x="1861" fg:w="17"/><text x="69.0994%" y="111.50"></text></g><g><title>`0x7FFCE153B8AA (1 samples, 0.04%)</title><rect x="69.4784%" y="101" width="0.0370%" height="15" fill="rgb(228,204,25)" fg:x="1878" fg:w="1"/><text x="69.7284%" y="111.50"></text></g><g><title>`0x7FFCE153B8AF (1 samples, 0.04%)</title><rect x="69.5154%" y="101" width="0.0370%" height="15" fill="rgb(207,153,8)" fg:x="1879" fg:w="1"/><text x="69.7654%" y="111.50"></text></g><g><title>`0x7FFCE153B8C2 (1 samples, 0.04%)</title><rect x="69.5523%" y="101" width="0.0370%" height="15" fill="rgb(242,9,16)" fg:x="1880" fg:w="1"/><text x="69.8023%" y="111.50"></text></g><g><title>`0x7FFCE153B8D4 (1 samples, 0.04%)</title><rect x="69.5893%" y="101" width="0.0370%" height="15" fill="rgb(217,211,10)" fg:x="1881" fg:w="1"/><text x="69.8393%" y="111.50"></text></g><g><title>`0x7FFCE153B8F4 (1 samples, 0.04%)</title><rect x="69.6263%" y="101" width="0.0370%" height="15" fill="rgb(219,228,52)" fg:x="1882" fg:w="1"/><text x="69.8763%" y="111.50"></text></g><g><title>`0x7FFCE153BA28 (1 samples, 0.04%)</title><rect x="69.6633%" y="101" width="0.0370%" height="15" fill="rgb(231,92,29)" fg:x="1883" fg:w="1"/><text x="69.9133%" y="111.50"></text></g><g><title>`0x7FFCE151A455 (1 samples, 0.04%)</title><rect x="69.6633%" y="85" width="0.0370%" height="15" fill="rgb(232,8,23)" fg:x="1883" fg:w="1"/><text x="69.9133%" y="95.50"></text></g><g><title>`0x7FFCE153BEDA (3 samples, 0.11%)</title><rect x="69.7003%" y="101" width="0.1110%" height="15" fill="rgb(216,211,34)" fg:x="1884" fg:w="3"/><text x="69.9503%" y="111.50"></text></g><g><title>`0x7FFCE1530B31 (3 samples, 0.11%)</title><rect x="69.7003%" y="85" width="0.1110%" height="15" fill="rgb(236,151,0)" fg:x="1884" fg:w="3"/><text x="69.9503%" y="95.50"></text></g><g><title>`0x7FFCE152F525 (3 samples, 0.11%)</title><rect x="69.7003%" y="69" width="0.1110%" height="15" fill="rgb(209,168,3)" fg:x="1884" fg:w="3"/><text x="69.9503%" y="79.50"></text></g><g><title>`0x7FFCE15ADF64 (3 samples, 0.11%)</title><rect x="69.7003%" y="53" width="0.1110%" height="15" fill="rgb(208,129,28)" fg:x="1884" fg:w="3"/><text x="69.9503%" y="63.50"></text></g><g><title>`0x7FFCE153BF56 (1 samples, 0.04%)</title><rect x="69.8113%" y="101" width="0.0370%" height="15" fill="rgb(229,78,22)" fg:x="1887" fg:w="1"/><text x="70.0613%" y="111.50"></text></g><g><title>`0x7FFCE153B3C7 (72 samples, 2.66%)</title><rect x="67.2216%" y="117" width="2.6637%" height="15" fill="rgb(228,187,13)" fg:x="1817" fg:w="72"/><text x="67.4716%" y="127.50">`0..</text></g><g><title>`0x7FFCE153BF5E (1 samples, 0.04%)</title><rect x="69.8483%" y="101" width="0.0370%" height="15" fill="rgb(240,119,24)" fg:x="1888" fg:w="1"/><text x="70.0983%" y="111.50"></text></g><g><title>`0x7FFCE151A364 (1 samples, 0.04%)</title><rect x="69.8483%" y="85" width="0.0370%" height="15" fill="rgb(209,194,42)" fg:x="1888" fg:w="1"/><text x="70.0983%" y="95.50"></text></g><g><title>`0x7FFCE151A512 (1 samples, 0.04%)</title><rect x="69.8483%" y="69" width="0.0370%" height="15" fill="rgb(247,200,46)" fg:x="1888" fg:w="1"/><text x="70.0983%" y="79.50"></text></g><g><title>`0x7FFCE153B4EF (1 samples, 0.04%)</title><rect x="69.8853%" y="117" width="0.0370%" height="15" fill="rgb(218,76,16)" fg:x="1889" fg:w="1"/><text x="70.1353%" y="127.50"></text></g><g><title>`0x7FFCE153B4FF (1 samples, 0.04%)</title><rect x="69.9223%" y="117" width="0.0370%" height="15" fill="rgb(225,21,48)" fg:x="1890" fg:w="1"/><text x="70.1723%" y="127.50"></text></g><g><title>`0x7FFCE153B522 (1 samples, 0.04%)</title><rect x="69.9593%" y="117" width="0.0370%" height="15" fill="rgb(239,223,50)" fg:x="1891" fg:w="1"/><text x="70.2093%" y="127.50"></text></g><g><title>`0x7FFCE153B633 (2 samples, 0.07%)</title><rect x="69.9963%" y="117" width="0.0740%" height="15" fill="rgb(244,45,21)" fg:x="1892" fg:w="2"/><text x="70.2463%" y="127.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::len (128 samples, 4.74%)</title><rect x="65.5938%" y="213" width="4.7355%" height="15" fill="rgb(232,33,43)" fg:x="1773" fg:w="128"/><text x="65.8438%" y="223.50">kuramo..</text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (127 samples, 4.70%)</title><rect x="65.6308%" y="197" width="4.6985%" height="15" fill="rgb(209,8,3)" fg:x="1774" fg:w="127"/><text x="65.8808%" y="207.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::grow_amortized (124 samples, 4.59%)</title><rect x="65.7418%" y="181" width="4.5875%" height="15" fill="rgb(214,25,53)" fg:x="1777" fg:w="124"/><text x="65.9918%" y="191.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`core::result::impl$26::branch (118 samples, 4.37%)</title><rect x="65.9637%" y="165" width="4.3655%" height="15" fill="rgb(254,186,54)" fg:x="1783" fg:w="118"/><text x="66.2137%" y="175.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (117 samples, 4.33%)</title><rect x="66.0007%" y="149" width="4.3285%" height="15" fill="rgb(208,174,49)" fg:x="1784" fg:w="117"/><text x="66.2507%" y="159.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`core::result::Result::map_err (113 samples, 4.18%)</title><rect x="66.1487%" y="133" width="4.1805%" height="15" fill="rgb(233,191,51)" fg:x="1788" fg:w="113"/><text x="66.3987%" y="143.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`std::alloc::__default_lib_allocator::__rdl_alloc (7 samples, 0.26%)</title><rect x="70.0703%" y="117" width="0.2590%" height="15" fill="rgb(222,134,10)" fg:x="1894" fg:w="7"/><text x="70.3203%" y="127.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::alloc::impl$0::alloc (4 samples, 0.15%)</title><rect x="70.1813%" y="101" width="0.1480%" height="15" fill="rgb(230,226,20)" fg:x="1897" fg:w="4"/><text x="70.4313%" y="111.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::alloc::allocate (4 samples, 0.15%)</title><rect x="70.1813%" y="85" width="0.1480%" height="15" fill="rgb(251,111,25)" fg:x="1897" fg:w="4"/><text x="70.4313%" y="95.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::alloc::init_or_get_process_heap (4 samples, 0.15%)</title><rect x="70.1813%" y="69" width="0.1480%" height="15" fill="rgb(224,40,46)" fg:x="1897" fg:w="4"/><text x="70.4313%" y="79.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::reserve (4 samples, 0.15%)</title><rect x="70.3293%" y="213" width="0.1480%" height="15" fill="rgb(236,108,47)" fg:x="1901" fg:w="4"/><text x="70.5793%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::reserve (4 samples, 0.15%)</title><rect x="70.3293%" y="197" width="0.1480%" height="15" fill="rgb(234,93,0)" fg:x="1901" fg:w="4"/><text x="70.5793%" y="207.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::needs_to_grow (3 samples, 0.11%)</title><rect x="70.3663%" y="181" width="0.1110%" height="15" fill="rgb(224,213,32)" fg:x="1902" fg:w="3"/><text x="70.6163%" y="191.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::capacity (3 samples, 0.11%)</title><rect x="70.3663%" y="165" width="0.1110%" height="15" fill="rgb(251,11,48)" fg:x="1902" fg:w="3"/><text x="70.6163%" y="175.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::string::impl$67::write_str (166 samples, 6.14%)</title><rect x="64.4099%" y="293" width="6.1413%" height="15" fill="rgb(236,173,5)" fg:x="1741" fg:w="166"/><text x="64.6599%" y="303.50">kuramoto..</text></g><g><title>kuramoto_oscillators.exe`alloc::string::String::push_str (151 samples, 5.59%)</title><rect x="64.9649%" y="277" width="5.5864%" height="15" fill="rgb(230,95,12)" fg:x="1756" fg:w="151"/><text x="65.2149%" y="287.50">kuramot..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::extend_from_slice (151 samples, 5.59%)</title><rect x="64.9649%" y="261" width="5.5864%" height="15" fill="rgb(232,209,1)" fg:x="1756" fg:w="151"/><text x="65.2149%" y="271.50">kuramot..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$4::spec_extend (151 samples, 5.59%)</title><rect x="64.9649%" y="245" width="5.5864%" height="15" fill="rgb(232,6,1)" fg:x="1756" fg:w="151"/><text x="65.2149%" y="255.50">kuramot..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::append_elements (151 samples, 5.59%)</title><rect x="64.9649%" y="229" width="5.5864%" height="15" fill="rgb(210,224,50)" fg:x="1756" fg:w="151"/><text x="65.2149%" y="239.50">kuramot..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::mut_ptr::impl$0::add (2 samples, 0.07%)</title><rect x="70.4772%" y="213" width="0.0740%" height="15" fill="rgb(228,127,35)" fg:x="1905" fg:w="2"/><text x="70.7272%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Formatter::write_formatted_parts (179 samples, 6.62%)</title><rect x="63.9660%" y="309" width="6.6223%" height="15" fill="rgb(245,102,45)" fg:x="1729" fg:w="179"/><text x="64.2160%" y="319.50">kuramoto_..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::rev::impl$1::next (1 samples, 0.04%)</title><rect x="70.5512%" y="293" width="0.0370%" height="15" fill="rgb(214,1,49)" fg:x="1907" fg:w="1"/><text x="70.8012%" y="303.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$190::next_back (1 samples, 0.04%)</title><rect x="70.5512%" y="277" width="0.0370%" height="15" fill="rgb(226,163,40)" fg:x="1907" fg:w="1"/><text x="70.8012%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::dec2flt::float::impl$1::classify (3 samples, 0.11%)</title><rect x="71.0692%" y="277" width="0.1110%" height="15" fill="rgb(239,212,28)" fg:x="1921" fg:w="3"/><text x="71.3192%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::f64::impl$0::classify (3 samples, 0.11%)</title><rect x="71.0692%" y="261" width="0.1110%" height="15" fill="rgb(220,20,13)" fg:x="1921" fg:w="3"/><text x="71.3192%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::f64::impl$0::partial_classify (3 samples, 0.11%)</title><rect x="71.0692%" y="245" width="0.1110%" height="15" fill="rgb(210,164,35)" fg:x="1921" fg:w="3"/><text x="71.3192%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::decoder::decode (8 samples, 0.30%)</title><rect x="70.9582%" y="293" width="0.2960%" height="15" fill="rgb(248,109,41)" fg:x="1918" fg:w="8"/><text x="71.2082%" y="303.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::dec2flt::float::impl$1::integer_decode (2 samples, 0.07%)</title><rect x="71.1802%" y="277" width="0.0740%" height="15" fill="rgb(238,23,50)" fg:x="1924" fg:w="2"/><text x="71.4302%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::determine_sign (2 samples, 0.07%)</title><rect x="71.2542%" y="293" width="0.0740%" height="15" fill="rgb(211,48,49)" fg:x="1926" fg:w="2"/><text x="71.5042%" y="303.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::digits_to_dec_str (14 samples, 0.52%)</title><rect x="71.3282%" y="293" width="0.5179%" height="15" fill="rgb(223,36,21)" fg:x="1928" fg:w="14"/><text x="71.5782%" y="303.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::estimate_max_buf_len (2 samples, 0.07%)</title><rect x="71.8461%" y="293" width="0.0740%" height="15" fill="rgb(207,123,46)" fg:x="1942" fg:w="2"/><text x="72.0961%" y="303.50"></text></g><g><title>`0x7FFCC4ED120A (2 samples, 0.07%)</title><rect x="72.8820%" y="277" width="0.0740%" height="15" fill="rgb(240,218,32)" fg:x="1970" fg:w="2"/><text x="73.1320%" y="287.50"></text></g><g><title>`0x7FFCC4ED1320 (2 samples, 0.07%)</title><rect x="72.9560%" y="277" width="0.0740%" height="15" fill="rgb(252,5,43)" fg:x="1972" fg:w="2"/><text x="73.2060%" y="287.50"></text></g><g><title>`0x7FFCC4ED133D (1 samples, 0.04%)</title><rect x="73.0300%" y="277" width="0.0370%" height="15" fill="rgb(252,84,19)" fg:x="1974" fg:w="1"/><text x="73.2800%" y="287.50"></text></g><g><title>`0x7FFCC4ED1348 (4 samples, 0.15%)</title><rect x="73.0670%" y="277" width="0.1480%" height="15" fill="rgb(243,152,39)" fg:x="1975" fg:w="4"/><text x="73.3170%" y="287.50"></text></g><g><title>`0x7FFCC4ED1351 (2 samples, 0.07%)</title><rect x="73.2149%" y="277" width="0.0740%" height="15" fill="rgb(234,160,15)" fg:x="1979" fg:w="2"/><text x="73.4649%" y="287.50"></text></g><g><title>`0x7FFCC4ED1358 (3 samples, 0.11%)</title><rect x="73.2889%" y="277" width="0.1110%" height="15" fill="rgb(237,34,20)" fg:x="1981" fg:w="3"/><text x="73.5389%" y="287.50"></text></g><g><title>`0x7FFCC4ED135E (3 samples, 0.11%)</title><rect x="73.3999%" y="277" width="0.1110%" height="15" fill="rgb(229,97,13)" fg:x="1984" fg:w="3"/><text x="73.6499%" y="287.50"></text></g><g><title>`0x7FFCC4ED1381 (7 samples, 0.26%)</title><rect x="73.5109%" y="277" width="0.2590%" height="15" fill="rgb(234,71,50)" fg:x="1987" fg:w="7"/><text x="73.7609%" y="287.50"></text></g><g><title>`0x7FFCC4ED146F (1 samples, 0.04%)</title><rect x="73.7699%" y="277" width="0.0370%" height="15" fill="rgb(253,155,4)" fg:x="1994" fg:w="1"/><text x="74.0199%" y="287.50"></text></g><g><title>`0x7FFCC4ED14B1 (1 samples, 0.04%)</title><rect x="73.8069%" y="277" width="0.0370%" height="15" fill="rgb(222,185,37)" fg:x="1995" fg:w="1"/><text x="74.0569%" y="287.50"></text></g><g><title>`0x7FFCC4ED14BB (3 samples, 0.11%)</title><rect x="73.8439%" y="277" width="0.1110%" height="15" fill="rgb(251,177,13)" fg:x="1996" fg:w="3"/><text x="74.0939%" y="287.50"></text></g><g><title>`0x7FFCC4ED14C5 (4 samples, 0.15%)</title><rect x="73.9549%" y="277" width="0.1480%" height="15" fill="rgb(250,179,40)" fg:x="1999" fg:w="4"/><text x="74.2049%" y="287.50"></text></g><g><title>`0x7FFCC4ED14D3 (3 samples, 0.11%)</title><rect x="74.1028%" y="277" width="0.1110%" height="15" fill="rgb(242,44,2)" fg:x="2003" fg:w="3"/><text x="74.3528%" y="287.50"></text></g><g><title>`0x7FFCC4ED14E1 (1 samples, 0.04%)</title><rect x="74.2138%" y="277" width="0.0370%" height="15" fill="rgb(216,177,13)" fg:x="2006" fg:w="1"/><text x="74.4638%" y="287.50"></text></g><g><title>`0x7FFCC4ED14EF (2 samples, 0.07%)</title><rect x="74.2508%" y="277" width="0.0740%" height="15" fill="rgb(216,106,43)" fg:x="2007" fg:w="2"/><text x="74.5008%" y="287.50"></text></g><g><title>`0x7FFCC4ED14F6 (2 samples, 0.07%)</title><rect x="74.3248%" y="277" width="0.0740%" height="15" fill="rgb(216,183,2)" fg:x="2009" fg:w="2"/><text x="74.5748%" y="287.50"></text></g><g><title>`0x7FFCC4ED14FD (1 samples, 0.04%)</title><rect x="74.3988%" y="277" width="0.0370%" height="15" fill="rgb(249,75,3)" fg:x="2011" fg:w="1"/><text x="74.6488%" y="287.50"></text></g><g><title>`0x7FFCC4ED3010 (1 samples, 0.04%)</title><rect x="74.4358%" y="277" width="0.0370%" height="15" fill="rgb(219,67,39)" fg:x="2012" fg:w="1"/><text x="74.6858%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::array::impl$15::index (21 samples, 0.78%)</title><rect x="75.1757%" y="229" width="0.7769%" height="15" fill="rgb(253,228,2)" fg:x="2032" fg:w="21"/><text x="75.4257%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$0::index (21 samples, 0.78%)</title><rect x="75.1757%" y="213" width="0.7769%" height="15" fill="rgb(235,138,27)" fg:x="2032" fg:w="21"/><text x="75.4257%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$5::index (21 samples, 0.78%)</title><rect x="75.1757%" y="197" width="0.7769%" height="15" fill="rgb(236,97,51)" fg:x="2032" fg:w="21"/><text x="75.4257%" y="207.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$4::index (21 samples, 0.78%)</title><rect x="75.1757%" y="181" width="0.7769%" height="15" fill="rgb(240,80,30)" fg:x="2032" fg:w="21"/><text x="75.4257%" y="191.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::rev::impl$1::next (6 samples, 0.22%)</title><rect x="77.0625%" y="69" width="0.2220%" height="15" fill="rgb(230,178,19)" fg:x="2083" fg:w="6"/><text x="77.3125%" y="79.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::cloned::impl$2::next_back (6 samples, 0.22%)</title><rect x="77.0625%" y="53" width="0.2220%" height="15" fill="rgb(210,190,27)" fg:x="2083" fg:w="6"/><text x="77.3125%" y="63.50"></text></g><g><title>kuramoto_oscillators.exe`core::option::Option::cloned (6 samples, 0.22%)</title><rect x="77.0625%" y="37" width="0.2220%" height="15" fill="rgb(222,107,31)" fg:x="2083" fg:w="6"/><text x="77.3125%" y="47.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::cloned::clone_try_fold::closure$0 (77 samples, 2.85%)</title><rect x="76.3596%" y="117" width="2.8487%" height="15" fill="rgb(216,127,34)" fg:x="2064" fg:w="77"/><text x="76.6096%" y="127.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0 (77 samples, 2.85%)</title><rect x="76.3596%" y="101" width="2.8487%" height="15" fill="rgb(234,116,52)" fg:x="2064" fg:w="77"/><text x="76.6096%" y="111.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::iter_compare::compare::closure$0 (77 samples, 2.85%)</title><rect x="76.3596%" y="85" width="2.8487%" height="15" fill="rgb(222,124,15)" fg:x="2064" fg:w="77"/><text x="76.6096%" y="95.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp_by::compare::closure$0 (52 samples, 1.92%)</title><rect x="77.2845%" y="69" width="1.9238%" height="15" fill="rgb(231,179,28)" fg:x="2089" fg:w="52"/><text x="77.5345%" y="79.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp::closure$0 (51 samples, 1.89%)</title><rect x="77.3215%" y="53" width="1.8868%" height="15" fill="rgb(226,93,45)" fg:x="2090" fg:w="51"/><text x="77.5715%" y="63.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::cmp::impls::impl$61::cmp (51 samples, 1.89%)</title><rect x="77.3215%" y="37" width="1.8868%" height="15" fill="rgb(215,8,51)" fg:x="2090" fg:w="51"/><text x="77.5715%" y="47.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::cmp::PartialOrd::ge (134 samples, 4.96%)</title><rect x="74.4728%" y="277" width="4.9575%" height="15" fill="rgb(223,106,5)" fg:x="2013" fg:w="134"/><text x="74.7228%" y="287.50">kuramo..</text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::impl$6::partial_cmp (115 samples, 4.25%)</title><rect x="75.1757%" y="261" width="4.2545%" height="15" fill="rgb(250,191,5)" fg:x="2032" fg:w="115"/><text x="75.4257%" y="271.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::impl$7::cmp (115 samples, 4.25%)</title><rect x="75.1757%" y="245" width="4.2545%" height="15" fill="rgb(242,132,44)" fg:x="2032" fg:w="115"/><text x="75.4257%" y="255.50">kuram..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp (94 samples, 3.48%)</title><rect x="75.9526%" y="229" width="3.4776%" height="15" fill="rgb(251,152,29)" fg:x="2053" fg:w="94"/><text x="76.2026%" y="239.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp_by (94 samples, 3.48%)</title><rect x="75.9526%" y="213" width="3.4776%" height="15" fill="rgb(218,179,5)" fg:x="2053" fg:w="94"/><text x="76.2026%" y="223.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::iter_compare (94 samples, 3.48%)</title><rect x="75.9526%" y="197" width="3.4776%" height="15" fill="rgb(227,67,19)" fg:x="2053" fg:w="94"/><text x="76.2026%" y="207.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::try_for_each (94 samples, 3.48%)</title><rect x="75.9526%" y="181" width="3.4776%" height="15" fill="rgb(233,119,31)" fg:x="2053" fg:w="94"/><text x="76.2026%" y="191.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::rev::impl$1::try_fold (94 samples, 3.48%)</title><rect x="75.9526%" y="165" width="3.4776%" height="15" fill="rgb(241,120,22)" fg:x="2053" fg:w="94"/><text x="76.2026%" y="175.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::cloned::impl$2::try_rfold (94 samples, 3.48%)</title><rect x="75.9526%" y="149" width="3.4776%" height="15" fill="rgb(224,102,30)" fg:x="2053" fg:w="94"/><text x="76.2026%" y="159.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (94 samples, 3.48%)</title><rect x="75.9526%" y="133" width="3.4776%" height="15" fill="rgb(210,164,37)" fg:x="2053" fg:w="94"/><text x="76.2026%" y="143.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$182::next_back (6 samples, 0.22%)</title><rect x="79.2083%" y="117" width="0.2220%" height="15" fill="rgb(226,191,16)" fg:x="2141" fg:w="6"/><text x="79.4583%" y="127.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq (6 samples, 0.22%)</title><rect x="79.2083%" y="101" width="0.2220%" height="15" fill="rgb(214,40,45)" fg:x="2141" fg:w="6"/><text x="79.4583%" y="111.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$6::next (15 samples, 0.55%)</title><rect x="79.4303%" y="277" width="0.5549%" height="15" fill="rgb(244,29,26)" fg:x="2147" fg:w="15"/><text x="79.6803%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$5::spec_next (15 samples, 0.55%)</title><rect x="79.4303%" y="261" width="0.5549%" height="15" fill="rgb(216,16,5)" fg:x="2147" fg:w="15"/><text x="79.6803%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::cmp::impls::impl$54::lt (4 samples, 0.15%)</title><rect x="79.8372%" y="245" width="0.1480%" height="15" fill="rgb(249,76,35)" fg:x="2158" fg:w="4"/><text x="80.0872%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::add (5 samples, 0.18%)</title><rect x="79.9852%" y="277" width="0.1850%" height="15" fill="rgb(207,11,44)" fg:x="2162" fg:w="5"/><text x="80.2352%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$8::carrying_add (1 samples, 0.04%)</title><rect x="80.1332%" y="261" width="0.0370%" height="15" fill="rgb(228,190,49)" fg:x="2166" fg:w="1"/><text x="80.3832%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::from_small (4 samples, 0.15%)</title><rect x="80.1702%" y="277" width="0.1480%" height="15" fill="rgb(214,173,12)" fg:x="2167" fg:w="4"/><text x="80.4202%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::from_u64 (3 samples, 0.11%)</title><rect x="80.3182%" y="277" width="0.1110%" height="15" fill="rgb(218,26,35)" fg:x="2171" fg:w="3"/><text x="80.5682%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::digits (1 samples, 0.04%)</title><rect x="80.4292%" y="261" width="0.0370%" height="15" fill="rgb(220,200,19)" fg:x="2174" fg:w="1"/><text x="80.6792%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::array::impl$15::index (1 samples, 0.04%)</title><rect x="80.4292%" y="245" width="0.0370%" height="15" fill="rgb(239,95,49)" fg:x="2174" fg:w="1"/><text x="80.6792%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$0::index (1 samples, 0.04%)</title><rect x="80.4292%" y="229" width="0.0370%" height="15" fill="rgb(235,85,53)" fg:x="2174" fg:w="1"/><text x="80.6792%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$5::index (1 samples, 0.04%)</title><rect x="80.4292%" y="213" width="0.0370%" height="15" fill="rgb(233,133,31)" fg:x="2174" fg:w="1"/><text x="80.6792%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$4::index (1 samples, 0.04%)</title><rect x="80.4292%" y="197" width="0.0370%" height="15" fill="rgb(218,25,20)" fg:x="2174" fg:w="1"/><text x="80.6792%" y="207.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::is_zero (15 samples, 0.55%)</title><rect x="80.4292%" y="277" width="0.5549%" height="15" fill="rgb(252,210,38)" fg:x="2174" fg:w="15"/><text x="80.6792%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::all (14 samples, 0.52%)</title><rect x="80.4661%" y="261" width="0.5179%" height="15" fill="rgb(242,134,21)" fg:x="2175" fg:w="14"/><text x="80.7161%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::impl$3::is_zero::closure$0 (1 samples, 0.04%)</title><rect x="80.9471%" y="245" width="0.0370%" height="15" fill="rgb(213,28,48)" fg:x="2188" fg:w="1"/><text x="81.1971%" y="255.50"></text></g><g><title>`0x7FFCC4ED18A0 (1 samples, 0.04%)</title><rect x="82.0570%" y="261" width="0.0370%" height="15" fill="rgb(250,196,2)" fg:x="2218" fg:w="1"/><text x="82.3070%" y="271.50"></text></g><g><title>`0x7FFCC4ED18B0 (3 samples, 0.11%)</title><rect x="82.0940%" y="261" width="0.1110%" height="15" fill="rgb(227,5,17)" fg:x="2219" fg:w="3"/><text x="82.3440%" y="271.50"></text></g><g><title>`0x7FFCC4ED18DB (1 samples, 0.04%)</title><rect x="82.2050%" y="261" width="0.0370%" height="15" fill="rgb(221,226,24)" fg:x="2222" fg:w="1"/><text x="82.4550%" y="271.50"></text></g><g><title>`0x7FFCC4ED18DE (1 samples, 0.04%)</title><rect x="82.2420%" y="261" width="0.0370%" height="15" fill="rgb(211,5,48)" fg:x="2223" fg:w="1"/><text x="82.4920%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::cmp::impls::impl$54::lt (3 samples, 0.11%)</title><rect x="82.2789%" y="213" width="0.1110%" height="15" fill="rgb(219,150,6)" fg:x="2224" fg:w="3"/><text x="82.5289%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::mul_pow2 (39 samples, 1.44%)</title><rect x="80.9841%" y="277" width="1.4428%" height="15" fill="rgb(251,46,16)" fg:x="2189" fg:w="39"/><text x="81.2341%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::rev::impl$1::next (4 samples, 0.15%)</title><rect x="82.2789%" y="261" width="0.1480%" height="15" fill="rgb(220,204,40)" fg:x="2224" fg:w="4"/><text x="82.5289%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$7::next_back (4 samples, 0.15%)</title><rect x="82.2789%" y="245" width="0.1480%" height="15" fill="rgb(211,85,2)" fg:x="2224" fg:w="4"/><text x="82.5289%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$5::spec_next_back (4 samples, 0.15%)</title><rect x="82.2789%" y="229" width="0.1480%" height="15" fill="rgb(229,17,7)" fg:x="2224" fg:w="4"/><text x="82.5289%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$43::backward_unchecked (1 samples, 0.04%)</title><rect x="82.3899%" y="213" width="0.0370%" height="15" fill="rgb(239,72,28)" fg:x="2227" fg:w="1"/><text x="82.6399%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$11::unchecked_sub (1 samples, 0.04%)</title><rect x="82.3899%" y="197" width="0.0370%" height="15" fill="rgb(230,47,54)" fg:x="2227" fg:w="1"/><text x="82.6399%" y="207.50"></text></g><g><title>kuramoto_oscillators.exe`core::array::impl$16::index_mut (8 samples, 0.30%)</title><rect x="82.7969%" y="261" width="0.2960%" height="15" fill="rgb(214,50,8)" fg:x="2238" fg:w="8"/><text x="83.0469%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$1::index_mut (8 samples, 0.30%)</title><rect x="82.7969%" y="245" width="0.2960%" height="15" fill="rgb(216,198,43)" fg:x="2238" fg:w="8"/><text x="83.0469%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$5::index_mut (8 samples, 0.30%)</title><rect x="82.7969%" y="229" width="0.2960%" height="15" fill="rgb(234,20,35)" fg:x="2238" fg:w="8"/><text x="83.0469%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$4::index_mut (8 samples, 0.30%)</title><rect x="82.7969%" y="213" width="0.2960%" height="15" fill="rgb(254,45,19)" fg:x="2238" fg:w="8"/><text x="83.0469%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$8::carrying_mul (24 samples, 0.89%)</title><rect x="83.0929%" y="261" width="0.8879%" height="15" fill="rgb(219,14,44)" fg:x="2246" fg:w="24"/><text x="83.3429%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$9::unchecked_mul (8 samples, 0.30%)</title><rect x="83.6848%" y="245" width="0.2960%" height="15" fill="rgb(217,220,26)" fg:x="2262" fg:w="8"/><text x="83.9348%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::mul_small (49 samples, 1.81%)</title><rect x="82.4269%" y="277" width="1.8128%" height="15" fill="rgb(213,158,28)" fg:x="2228" fg:w="49"/><text x="82.6769%" y="287.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$189::next (7 samples, 0.26%)</title><rect x="83.9808%" y="261" width="0.2590%" height="15" fill="rgb(252,51,52)" fg:x="2270" fg:w="7"/><text x="84.2308%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq (3 samples, 0.11%)</title><rect x="84.1287%" y="245" width="0.1110%" height="15" fill="rgb(246,89,16)" fg:x="2274" fg:w="3"/><text x="84.3787%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$1::next (64 samples, 2.37%)</title><rect x="85.5346%" y="261" width="2.3677%" height="15" fill="rgb(216,158,49)" fg:x="2312" fg:w="64"/><text x="85.7846%" y="271.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$5::next (64 samples, 2.37%)</title><rect x="85.5346%" y="245" width="2.3677%" height="15" fill="rgb(236,107,19)" fg:x="2312" fg:w="64"/><text x="85.7846%" y="255.50">ku..</text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::sub (105 samples, 3.88%)</title><rect x="84.2397%" y="277" width="3.8846%" height="15" fill="rgb(228,185,30)" fg:x="2277" fg:w="105"/><text x="84.4897%" y="287.50">kura..</text></g><g><title>kuramoto_oscillators.exe`core::num::impl$8::carrying_add (6 samples, 0.22%)</title><rect x="87.9023%" y="261" width="0.2220%" height="15" fill="rgb(246,134,8)" fg:x="2376" fg:w="6"/><text x="88.1523%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::cloned::clone_try_fold::closure$0 (1 samples, 0.04%)</title><rect x="88.1613%" y="149" width="0.0370%" height="15" fill="rgb(214,143,50)" fg:x="2383" fg:w="1"/><text x="88.4113%" y="159.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0 (1 samples, 0.04%)</title><rect x="88.1613%" y="133" width="0.0370%" height="15" fill="rgb(228,75,8)" fg:x="2383" fg:w="1"/><text x="88.4113%" y="143.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::iter_compare::compare::closure$0 (1 samples, 0.04%)</title><rect x="88.1613%" y="117" width="0.0370%" height="15" fill="rgb(207,175,4)" fg:x="2383" fg:w="1"/><text x="88.4113%" y="127.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp_by::compare::closure$0 (1 samples, 0.04%)</title><rect x="88.1613%" y="101" width="0.0370%" height="15" fill="rgb(205,108,24)" fg:x="2383" fg:w="1"/><text x="88.4113%" y="111.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp::closure$0 (1 samples, 0.04%)</title><rect x="88.1613%" y="85" width="0.0370%" height="15" fill="rgb(244,120,49)" fg:x="2383" fg:w="1"/><text x="88.4113%" y="95.50"></text></g><g><title>kuramoto_oscillators.exe`core::cmp::impls::impl$61::cmp (1 samples, 0.04%)</title><rect x="88.1613%" y="69" width="0.0370%" height="15" fill="rgb(223,47,38)" fg:x="2383" fg:w="1"/><text x="88.4113%" y="79.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::impl$7::cmp (3 samples, 0.11%)</title><rect x="88.1243%" y="277" width="0.1110%" height="15" fill="rgb(229,179,11)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp (3 samples, 0.11%)</title><rect x="88.1243%" y="261" width="0.1110%" height="15" fill="rgb(231,122,1)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::cmp_by (3 samples, 0.11%)</title><rect x="88.1243%" y="245" width="0.1110%" height="15" fill="rgb(245,119,9)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::iter_compare (3 samples, 0.11%)</title><rect x="88.1243%" y="229" width="0.1110%" height="15" fill="rgb(241,163,25)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.11%)</title><rect x="88.1243%" y="213" width="0.1110%" height="15" fill="rgb(217,214,3)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::rev::impl$1::try_fold (3 samples, 0.11%)</title><rect x="88.1243%" y="197" width="0.1110%" height="15" fill="rgb(240,86,28)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="207.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::cloned::impl$2::try_rfold (3 samples, 0.11%)</title><rect x="88.1243%" y="181" width="0.1110%" height="15" fill="rgb(215,47,9)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="191.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (3 samples, 0.11%)</title><rect x="88.1243%" y="165" width="0.1110%" height="15" fill="rgb(252,25,45)" fg:x="2382" fg:w="3"/><text x="88.3743%" y="175.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$182::next_back (1 samples, 0.04%)</title><rect x="88.1983%" y="149" width="0.0370%" height="15" fill="rgb(251,164,9)" fg:x="2384" fg:w="1"/><text x="88.4483%" y="159.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq (1 samples, 0.04%)</title><rect x="88.1983%" y="133" width="0.0370%" height="15" fill="rgb(233,194,0)" fg:x="2384" fg:w="1"/><text x="88.4483%" y="143.50"></text></g><g><title>`0x7FFCC4ED120A (1 samples, 0.04%)</title><rect x="88.5313%" y="261" width="0.0370%" height="15" fill="rgb(249,111,24)" fg:x="2393" fg:w="1"/><text x="88.7813%" y="271.50"></text></g><g><title>`0x7FFCC4ED1341 (1 samples, 0.04%)</title><rect x="88.5683%" y="261" width="0.0370%" height="15" fill="rgb(250,223,3)" fg:x="2394" fg:w="1"/><text x="88.8183%" y="271.50"></text></g><g><title>`0x7FFCC4ED1358 (3 samples, 0.11%)</title><rect x="88.6053%" y="261" width="0.1110%" height="15" fill="rgb(236,178,37)" fg:x="2395" fg:w="3"/><text x="88.8553%" y="271.50"></text></g><g><title>`0x7FFCC4ED135E (2 samples, 0.07%)</title><rect x="88.7162%" y="261" width="0.0740%" height="15" fill="rgb(241,158,50)" fg:x="2398" fg:w="2"/><text x="88.9662%" y="271.50"></text></g><g><title>`0x7FFCC4ED1381 (3 samples, 0.11%)</title><rect x="88.7902%" y="261" width="0.1110%" height="15" fill="rgb(213,121,41)" fg:x="2400" fg:w="3"/><text x="89.0402%" y="271.50"></text></g><g><title>`0x7FFCC4ED1467 (1 samples, 0.04%)</title><rect x="88.9012%" y="261" width="0.0370%" height="15" fill="rgb(240,92,3)" fg:x="2403" fg:w="1"/><text x="89.1512%" y="271.50"></text></g><g><title>`0x7FFCC4ED146F (2 samples, 0.07%)</title><rect x="88.9382%" y="261" width="0.0740%" height="15" fill="rgb(205,123,3)" fg:x="2404" fg:w="2"/><text x="89.1882%" y="271.50"></text></g><g><title>`0x7FFCC4ED14B1 (1 samples, 0.04%)</title><rect x="89.0122%" y="261" width="0.0370%" height="15" fill="rgb(205,97,47)" fg:x="2406" fg:w="1"/><text x="89.2622%" y="271.50"></text></g><g><title>`0x7FFCC4ED14BB (2 samples, 0.07%)</title><rect x="89.0492%" y="261" width="0.0740%" height="15" fill="rgb(247,152,14)" fg:x="2407" fg:w="2"/><text x="89.2992%" y="271.50"></text></g><g><title>`0x7FFCC4ED14EF (1 samples, 0.04%)</title><rect x="89.1232%" y="261" width="0.0370%" height="15" fill="rgb(248,195,53)" fg:x="2409" fg:w="1"/><text x="89.3732%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::cmp::impls::impl$54::lt (1 samples, 0.04%)</title><rect x="90.2701%" y="197" width="0.0370%" height="15" fill="rgb(226,201,16)" fg:x="2440" fg:w="1"/><text x="90.5201%" y="207.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::mul_pow2 (32 samples, 1.18%)</title><rect x="89.1602%" y="261" width="1.1839%" height="15" fill="rgb(205,98,0)" fg:x="2410" fg:w="32"/><text x="89.4102%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::rev::impl$1::next (2 samples, 0.07%)</title><rect x="90.2701%" y="245" width="0.0740%" height="15" fill="rgb(214,191,48)" fg:x="2440" fg:w="2"/><text x="90.5201%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$7::next_back (2 samples, 0.07%)</title><rect x="90.2701%" y="229" width="0.0740%" height="15" fill="rgb(237,112,39)" fg:x="2440" fg:w="2"/><text x="90.5201%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$5::spec_next_back (2 samples, 0.07%)</title><rect x="90.2701%" y="213" width="0.0740%" height="15" fill="rgb(247,203,27)" fg:x="2440" fg:w="2"/><text x="90.5201%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$43::backward_unchecked (1 samples, 0.04%)</title><rect x="90.3071%" y="197" width="0.0370%" height="15" fill="rgb(235,124,28)" fg:x="2441" fg:w="1"/><text x="90.5571%" y="207.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$11::unchecked_sub (1 samples, 0.04%)</title><rect x="90.3071%" y="181" width="0.0370%" height="15" fill="rgb(208,207,46)" fg:x="2441" fg:w="1"/><text x="90.5571%" y="191.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::dragon::mul_pow10 (5 samples, 0.18%)</title><rect x="90.3441%" y="261" width="0.1850%" height="15" fill="rgb(234,176,4)" fg:x="2442" fg:w="5"/><text x="90.5941%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::mul_small (2 samples, 0.07%)</title><rect x="90.4550%" y="245" width="0.0740%" height="15" fill="rgb(230,133,28)" fg:x="2445" fg:w="2"/><text x="90.7050%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$189::next (1 samples, 0.04%)</title><rect x="90.4920%" y="229" width="0.0370%" height="15" fill="rgb(211,137,40)" fg:x="2446" fg:w="1"/><text x="90.7420%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq (1 samples, 0.04%)</title><rect x="90.4920%" y="213" width="0.0370%" height="15" fill="rgb(254,35,13)" fg:x="2446" fg:w="1"/><text x="90.7420%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::impl$8::clone (63 samples, 2.33%)</title><rect x="88.2353%" y="277" width="2.3307%" height="15" fill="rgb(225,49,51)" fg:x="2385" fg:w="63"/><text x="88.4853%" y="287.50">k..</text></g><g><title>kuramoto_oscillators.exe`memcpy (1 samples, 0.04%)</title><rect x="90.5290%" y="261" width="0.0370%" height="15" fill="rgb(251,10,15)" fg:x="2447" fg:w="1"/><text x="90.7790%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::estimator::estimate_scaling_factor (1 samples, 0.04%)</title><rect x="90.5660%" y="277" width="0.0370%" height="15" fill="rgb(228,207,15)" fg:x="2448" fg:w="1"/><text x="90.8160%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$6::next (3 samples, 0.11%)</title><rect x="90.6030%" y="261" width="0.1110%" height="15" fill="rgb(241,99,19)" fg:x="2449" fg:w="3"/><text x="90.8530%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::range::impl$5::spec_next (3 samples, 0.11%)</title><rect x="90.6030%" y="245" width="0.1110%" height="15" fill="rgb(207,104,49)" fg:x="2449" fg:w="3"/><text x="90.8530%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::cmp::impls::impl$54::lt (3 samples, 0.11%)</title><rect x="90.6030%" y="229" width="0.1110%" height="15" fill="rgb(234,99,18)" fg:x="2449" fg:w="3"/><text x="90.8530%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::round_up::closure$0 (2 samples, 0.07%)</title><rect x="90.7140%" y="245" width="0.0740%" height="15" fill="rgb(213,191,49)" fg:x="2452" fg:w="2"/><text x="90.9640%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::round_up (6 samples, 0.22%)</title><rect x="90.6030%" y="277" width="0.2220%" height="15" fill="rgb(210,226,19)" fg:x="2449" fg:w="6"/><text x="90.8530%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::rposition (3 samples, 0.11%)</title><rect x="90.7140%" y="261" width="0.1110%" height="15" fill="rgb(229,97,18)" fg:x="2452" fg:w="3"/><text x="90.9640%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$182::next_back (1 samples, 0.04%)</title><rect x="90.7880%" y="245" width="0.0370%" height="15" fill="rgb(211,167,15)" fg:x="2454" fg:w="1"/><text x="91.0380%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq (1 samples, 0.04%)</title><rect x="90.7880%" y="229" width="0.0370%" height="15" fill="rgb(210,169,34)" fg:x="2454" fg:w="1"/><text x="91.0380%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::rev::impl$1::next (2 samples, 0.07%)</title><rect x="91.5279%" y="245" width="0.0740%" height="15" fill="rgb(241,121,31)" fg:x="2474" fg:w="2"/><text x="91.7779%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$190::next_back (2 samples, 0.07%)</title><rect x="91.5279%" y="229" width="0.0740%" height="15" fill="rgb(232,40,11)" fg:x="2474" fg:w="2"/><text x="91.7779%" y="239.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::non_null::impl$12::eq (1 samples, 0.04%)</title><rect x="91.5649%" y="213" width="0.0370%" height="15" fill="rgb(205,86,26)" fg:x="2475" fg:w="1"/><text x="91.8149%" y="223.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::dragon::div_2pow10 (53 samples, 1.96%)</title><rect x="90.8250%" y="277" width="1.9608%" height="15" fill="rgb(231,126,28)" fg:x="2455" fg:w="53"/><text x="91.0750%" y="287.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::Big32x40::div_rem_small (52 samples, 1.92%)</title><rect x="90.8620%" y="261" width="1.9238%" height="15" fill="rgb(219,221,18)" fg:x="2456" fg:w="52"/><text x="91.1120%" y="271.50">k..</text></g><g><title>kuramoto_oscillators.exe`core::num::bignum::impl$2::full_div_rem (32 samples, 1.18%)</title><rect x="91.6019%" y="245" width="1.1839%" height="15" fill="rgb(211,40,0)" fg:x="2476" fg:w="32"/><text x="91.8519%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$9::checked_sub (2 samples, 0.07%)</title><rect x="92.7858%" y="277" width="0.0740%" height="15" fill="rgb(239,85,43)" fg:x="2508" fg:w="2"/><text x="93.0358%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::impl$9::overflowing_sub (2 samples, 0.07%)</title><rect x="92.7858%" y="261" width="0.0740%" height="15" fill="rgb(231,55,21)" fg:x="2508" fg:w="2"/><text x="93.0358%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::dragon::format_exact (568 samples, 21.01%)</title><rect x="71.9201%" y="293" width="21.0137%" height="15" fill="rgb(225,184,43)" fg:x="1944" fg:w="568"/><text x="72.1701%" y="303.50">kuramoto_oscillators.exe`core::nu..</text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$1::index_mut (2 samples, 0.07%)</title><rect x="92.8598%" y="277" width="0.0740%" height="15" fill="rgb(251,158,41)" fg:x="2510" fg:w="2"/><text x="93.1098%" y="287.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$5::index_mut (2 samples, 0.07%)</title><rect x="92.8598%" y="261" width="0.0740%" height="15" fill="rgb(234,159,37)" fg:x="2510" fg:w="2"/><text x="93.1098%" y="271.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::index::impl$4::index_mut (2 samples, 0.07%)</title><rect x="92.8598%" y="245" width="0.0740%" height="15" fill="rgb(216,204,22)" fg:x="2510" fg:w="2"/><text x="93.1098%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::diy_float::Fp::mul (9 samples, 0.33%)</title><rect x="94.8946%" y="245" width="0.3330%" height="15" fill="rgb(214,17,3)" fg:x="2565" fg:w="9"/><text x="95.1446%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::diy_float::Fp::normalize (14 samples, 0.52%)</title><rect x="95.2275%" y="245" width="0.5179%" height="15" fill="rgb(212,111,17)" fg:x="2574" fg:w="14"/><text x="95.4775%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::cached_power (5 samples, 0.18%)</title><rect x="95.7455%" y="245" width="0.1850%" height="15" fill="rgb(221,157,24)" fg:x="2588" fg:w="5"/><text x="95.9955%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (1 samples, 0.04%)</title><rect x="95.9304%" y="245" width="0.0370%" height="15" fill="rgb(252,16,13)" fg:x="2593" fg:w="1"/><text x="96.1804%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::float::float_to_decimal_common_exact&lt;f64&gt; (879 samples, 32.52%)</title><rect x="63.5960%" y="325" width="32.5194%" height="15" fill="rgb(221,62,2)" fg:x="1719" fg:w="879"/><text x="63.8460%" y="335.50">kuramoto_oscillators.exe`core::fmt::float::float_to_d..</text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::to_exact_fixed_str (690 samples, 25.53%)</title><rect x="70.5882%" y="309" width="25.5272%" height="15" fill="rgb(247,87,22)" fg:x="1908" fg:w="690"/><text x="70.8382%" y="319.50">kuramoto_oscillators.exe`core::num::flt2d..</text></g><g><title>kuramoto_oscillators.exe`core::ops::function::FnMut::call_mut (86 samples, 3.18%)</title><rect x="92.9338%" y="293" width="3.1817%" height="15" fill="rgb(215,73,9)" fg:x="2512" fg:w="86"/><text x="93.1838%" y="303.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::format_exact (86 samples, 3.18%)</title><rect x="92.9338%" y="277" width="3.1817%" height="15" fill="rgb(207,175,33)" fg:x="2512" fg:w="86"/><text x="93.1838%" y="287.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::format_exact_opt (82 samples, 3.03%)</title><rect x="93.0818%" y="261" width="3.0337%" height="15" fill="rgb(243,129,54)" fg:x="2516" fg:w="82"/><text x="93.3318%" y="271.50">kur..</text></g><g><title>kuramoto_oscillators.exe`core::num::flt2dec::strategy::grisu::max_pow10_no_more_than (4 samples, 0.15%)</title><rect x="95.9674%" y="245" width="0.1480%" height="15" fill="rgb(227,119,45)" fg:x="2594" fg:w="4"/><text x="96.2174%" y="255.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::float::impl$7::fmt (4 samples, 0.15%)</title><rect x="96.1154%" y="325" width="0.1480%" height="15" fill="rgb(205,109,36)" fg:x="2598" fg:w="4"/><text x="96.3654%" y="335.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::float::float_to_decimal_display (3 samples, 0.11%)</title><rect x="96.1524%" y="309" width="0.1110%" height="15" fill="rgb(205,6,39)" fg:x="2599" fg:w="3"/><text x="96.4024%" y="319.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Formatter::sign_plus (3 samples, 0.11%)</title><rect x="96.1524%" y="293" width="0.1110%" height="15" fill="rgb(221,32,16)" fg:x="2599" fg:w="3"/><text x="96.4024%" y="303.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::impl$55::fmt&lt;f64&gt; (7 samples, 0.26%)</title><rect x="96.2634%" y="325" width="0.2590%" height="15" fill="rgb(228,144,50)" fg:x="2602" fg:w="7"/><text x="96.5134%" y="335.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::getcount (2 samples, 0.07%)</title><rect x="96.5594%" y="309" width="0.0740%" height="15" fill="rgb(229,201,53)" fg:x="2610" fg:w="2"/><text x="96.8094%" y="319.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::rt::Argument::as_usize (1 samples, 0.04%)</title><rect x="96.5964%" y="293" width="0.0370%" height="15" fill="rgb(249,153,27)" fg:x="2611" fg:w="1"/><text x="96.8464%" y="303.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::run (5 samples, 0.18%)</title><rect x="96.5224%" y="325" width="0.1850%" height="15" fill="rgb(227,106,25)" fg:x="2609" fg:w="5"/><text x="96.7724%" y="335.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::rt::Argument::fmt (2 samples, 0.07%)</title><rect x="96.6334%" y="309" width="0.0740%" height="15" fill="rgb(230,65,29)" fg:x="2612" fg:w="2"/><text x="96.8834%" y="319.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;alloc::string::String,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;alloc::string::String,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0&lt;f64&gt; &gt; &gt; &gt;*, tuple$ (928 samples, 34.33%)</title><rect x="62.4121%" y="421" width="34.3322%" height="15" fill="rgb(221,57,46)" fg:x="1687" fg:w="928"/><text x="62.6621%" y="431.50">kuramoto_oscillators.exe`core::iter::traits::iterator::I..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;alloc::string::String,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (928 samples, 34.33%)</title><rect x="62.4121%" y="405" width="34.3322%" height="15" fill="rgb(229,161,17)" fg:x="1687" fg:w="928"/><text x="62.6621%" y="415.50">kuramoto_oscillators.exe`alloc::vec::impl$19::extend_tru..</text></g><g><title>kuramoto_oscillators.exe`core::ptr::write (928 samples, 34.33%)</title><rect x="62.4121%" y="389" width="34.3322%" height="15" fill="rgb(222,213,11)" fg:x="1687" fg:w="928"/><text x="62.6621%" y="399.50">kuramoto_oscillators.exe`core::ptr::write</text></g><g><title>kuramoto_oscillators.exe`alloc::fmt::format::format_inner (924 samples, 34.18%)</title><rect x="62.5601%" y="373" width="34.1842%" height="15" fill="rgb(235,35,13)" fg:x="1691" fg:w="924"/><text x="62.8101%" y="383.50">kuramoto_oscillators.exe`alloc::fmt::format::format_inn..</text></g><g><title>kuramoto_oscillators.exe`core::result::Result::expect (911 samples, 33.70%)</title><rect x="63.0411%" y="357" width="33.7033%" height="15" fill="rgb(233,158,34)" fg:x="1704" fg:w="911"/><text x="63.2911%" y="367.50">kuramoto_oscillators.exe`core::result::Result::expect</text></g><g><title>kuramoto_oscillators.exe`core::fmt::write (909 samples, 33.63%)</title><rect x="63.1151%" y="341" width="33.6293%" height="15" fill="rgb(215,151,48)" fg:x="1706" fg:w="909"/><text x="63.3651%" y="351.50">kuramoto_oscillators.exe`core::fmt::write</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::enumerate::impl$1::next (1 samples, 0.04%)</title><rect x="96.7074%" y="325" width="0.0370%" height="15" fill="rgb(229,84,14)" fg:x="2614" fg:w="1"/><text x="96.9574%" y="335.50"></text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::next (1 samples, 0.04%)</title><rect x="96.7074%" y="309" width="0.0370%" height="15" fill="rgb(229,68,14)" fg:x="2614" fg:w="1"/><text x="96.9574%" y="319.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(csv::writer::Writer (2,603 samples, 96.30%)</title><rect x="0.5919%" y="709" width="96.3004%" height="15" fill="rgb(243,106,26)" fg:x="16" fg:w="2603"/><text x="0.8419%" y="719.50">kuramoto_oscillators.exe`core::ptr::drop_in_place(csv::writer::Writer</text></g><g><title>kuramoto_oscillators.exe`csv::writer::impl$2::drop(csv::writer::Writer (2,602 samples, 96.26%)</title><rect x="0.6289%" y="693" width="96.2634%" height="15" fill="rgb(206,45,38)" fg:x="17" fg:w="2602"/><text x="0.8789%" y="703.50">kuramoto_oscillators.exe`csv::writer::impl$2::drop(csv::writer::Writer</text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::option::Option&lt;std::fs::File&gt; &gt;::is_some (2,602 samples, 96.26%)</title><rect x="0.6289%" y="677" width="96.2634%" height="15" fill="rgb(226,6,15)" fg:x="17" fg:w="2602"/><text x="0.8789%" y="687.50">kuramoto_oscillators.exe`enum2$&lt;core::option::Option&lt;std::fs::File&gt; &gt;::is_some</text></g><g><title>kuramoto_oscillators.exe`ode_solver::EulerSolver::solve&lt;kuramoto_oscillators::kuramoto_oscillators::KuramotoOscillators,f64,std::fs::File&gt;(kuramoto_oscillators::kuramoto_oscillators::KuramotoOscillators*, matrix::Matrix&lt;f64&gt;*, double, double, csv::writer::Writer (2,602 samples, 96.26%)</title><rect x="0.6289%" y="661" width="96.2634%" height="15" fill="rgb(232,22,54)" fg:x="17" fg:w="2602"/><text x="0.8789%" y="671.50">kuramoto_oscillators.exe`ode_solver::EulerSolver::solve&lt;kuramoto_oscillators::kuramoto_oscillators::KuramotoOscillators,f64,std::fs::File&gt;(kuramoto_oscillators::..</text></g><g><title>kuramoto_oscillators.exe`ode_solver::table_row&lt;f64&gt;(matrix::Matrix (1,007 samples, 37.25%)</title><rect x="59.6374%" y="645" width="37.2549%" height="15" fill="rgb(229,222,32)" fg:x="1612" fg:w="1007"/><text x="59.8874%" y="655.50">kuramoto_oscillators.exe`ode_solver::table_row&lt;f64&gt;(matrix::M..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::append(alloc::vec::Vec (972 samples, 35.96%)</title><rect x="60.9323%" y="629" width="35.9600%" height="15" fill="rgb(228,62,29)" fg:x="1647" fg:w="972"/><text x="61.1823%" y="639.50">kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::St..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_slice (972 samples, 35.96%)</title><rect x="60.9323%" y="613" width="35.9600%" height="15" fill="rgb(251,103,34)" fg:x="1647" fg:w="972"/><text x="61.1823%" y="623.50">kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::St..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (944 samples, 34.92%)</title><rect x="61.9682%" y="597" width="34.9242%" height="15" fill="rgb(233,12,30)" fg:x="1675" fg:w="944"/><text x="62.2182%" y="607.50">kuramoto_oscillators.exe`alloc::vec::impl$8::deref(alloc:..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_ptr (944 samples, 34.92%)</title><rect x="61.9682%" y="581" width="34.9242%" height="15" fill="rgb(238,52,0)" fg:x="1675" fg:w="944"/><text x="62.2182%" y="591.50">kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::S..</text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (944 samples, 34.92%)</title><rect x="61.9682%" y="565" width="34.9242%" height="15" fill="rgb(223,98,5)" fg:x="1675" fg:w="944"/><text x="62.2182%" y="575.50">kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;alloc::st..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;alloc::string::String,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0&lt;f64&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (944 samples, 34.92%)</title><rect x="61.9682%" y="549" width="34.9242%" height="15" fill="rgb(228,75,37)" fg:x="1675" fg:w="944"/><text x="62.2182%" y="559.50">kuramoto_oscillators.exe`alloc::vec::spec_from_iter::impl..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (943 samples, 34.89%)</title><rect x="62.0052%" y="533" width="34.8872%" height="15" fill="rgb(205,115,49)" fg:x="1676" fg:w="943"/><text x="62.2552%" y="543.50">kuramoto_oscillators.exe`alloc::vec::spec_from_iter_neste..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (933 samples, 34.52%)</title><rect x="62.3751%" y="517" width="34.5172%" height="15" fill="rgb(250,154,43)" fg:x="1686" fg:w="933"/><text x="62.6251%" y="527.50">kuramoto_oscillators.exe`alloc::vec::spec_extend::impl$1..</text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (933 samples, 34.52%)</title><rect x="62.3751%" y="501" width="34.5172%" height="15" fill="rgb(226,43,29)" fg:x="1686" fg:w="933"/><text x="62.6251%" y="511.50">kuramoto_oscillators.exe`alloc::vec::Vec&lt;alloc::string::..</text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0&lt;f64&gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;alloc::string::String,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (933 samples, 34.52%)</title><rect x="62.3751%" y="485" width="34.5172%" height="15" fill="rgb(249,228,39)" fg:x="1686" fg:w="933"/><text x="62.6251%" y="495.50">kuramoto_oscillators.exe`core::iter::traits::iterator::I..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0&lt;f64&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;alloc::string::String,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;alloc::string::String,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (933 samples, 34.52%)</title><rect x="62.3751%" y="469" width="34.5172%" height="15" fill="rgb(216,79,43)" fg:x="1686" fg:w="933"/><text x="62.6251%" y="479.50">kuramoto_oscillators.exe`core::iter::adapters::map::impl..</text></g><g><title>kuramoto_oscillators.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,alloc::string::String,tuple$&lt;&gt;,ode_solver::table_row::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;alloc::string::String,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;alloc::string::String,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0 (933 samples, 34.52%)</title><rect x="62.3751%" y="453" width="34.5172%" height="15" fill="rgb(228,95,12)" fg:x="1686" fg:w="933"/><text x="62.6251%" y="463.50">kuramoto_oscillators.exe`core::slice::iter::impl$181::fo..</text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;f64&gt;,alloc::string::String,tuple$&lt;&gt;,ode_solver::table_row::closure_env$0&lt;f64&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;alloc::string::String,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;alloc::string::String,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;f64&gt;,ode_solver::table_row::closure_env$0&lt;f64&gt; &gt; &gt; &gt; &gt;*, tuple$ (932 samples, 34.48%)</title><rect x="62.4121%" y="437" width="34.4802%" height="15" fill="rgb(249,221,15)" fg:x="1687" fg:w="932"/><text x="62.6621%" y="447.50">kuramoto_oscillators.exe`core::iter::adapters::map::map_..</text></g><g><title>kuramoto_oscillators.exe`ode_solver::table_row::closure$0(ode_solver::table_row::closure_env$0 (4 samples, 0.15%)</title><rect x="96.7444%" y="421" width="0.1480%" height="15" fill="rgb(233,34,13)" fg:x="2615" fg:w="4"/><text x="96.9944%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::Arguments::new_v1_formatted(ref$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, ref$&lt;slice2$&lt;core::fmt::rt::Argument&gt; &gt;, ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="96.8183%" y="405" width="0.0740%" height="15" fill="rgb(214,103,39)" fg:x="2617" fg:w="2"/><text x="97.0683%" y="415.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.04%)</title><rect x="96.8923%" y="709" width="0.0370%" height="15" fill="rgb(251,126,39)" fg:x="2619" fg:w="1"/><text x="97.1423%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::fs::DirBuilder::mkdir (1 samples, 0.04%)</title><rect x="96.8923%" y="693" width="0.0370%" height="15" fill="rgb(214,216,36)" fg:x="2619" fg:w="1"/><text x="97.1423%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::cvt (1 samples, 0.04%)</title><rect x="96.8923%" y="677" width="0.0370%" height="15" fill="rgb(220,221,8)" fg:x="2619" fg:w="1"/><text x="97.1423%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::impl$2::is_zero (1 samples, 0.04%)</title><rect x="96.8923%" y="661" width="0.0370%" height="15" fill="rgb(240,216,3)" fg:x="2619" fg:w="1"/><text x="97.1423%" y="671.50"></text></g><g><title>`0x7FFCDEDDF2C2 (1 samples, 0.04%)</title><rect x="96.8923%" y="645" width="0.0370%" height="15" fill="rgb(232,218,17)" fg:x="2619" fg:w="1"/><text x="97.1423%" y="655.50"></text></g><g><title>`0x7FFCDA5CA66F (1 samples, 0.04%)</title><rect x="96.8923%" y="629" width="0.0370%" height="15" fill="rgb(229,163,45)" fg:x="2619" fg:w="1"/><text x="97.1423%" y="639.50"></text></g><g><title>`0x7FFCE15AE004 (1 samples, 0.04%)</title><rect x="96.8923%" y="613" width="0.0370%" height="15" fill="rgb(231,110,42)" fg:x="2619" fg:w="1"/><text x="97.1423%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="96.9293%" y="709" width="0.0370%" height="15" fill="rgb(208,170,48)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(matrix::Matrix (1 samples, 0.04%)</title><rect x="96.9293%" y="693" width="0.0370%" height="15" fill="rgb(239,116,25)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="96.9293%" y="677" width="0.0370%" height="15" fill="rgb(219,200,50)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="96.9293%" y="661" width="0.0370%" height="15" fill="rgb(245,200,0)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="96.9293%" y="645" width="0.0370%" height="15" fill="rgb(245,119,33)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="655.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="96.9293%" y="629" width="0.0370%" height="15" fill="rgb(231,125,12)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="639.50"></text></g><g><title>`0x7FFCE1535B74 (1 samples, 0.04%)</title><rect x="96.9293%" y="613" width="0.0370%" height="15" fill="rgb(216,96,41)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="623.50"></text></g><g><title>`0x7FFCE15365F6 (1 samples, 0.04%)</title><rect x="96.9293%" y="597" width="0.0370%" height="15" fill="rgb(248,43,45)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="607.50"></text></g><g><title>`0x7FFCE152E412 (1 samples, 0.04%)</title><rect x="96.9293%" y="581" width="0.0370%" height="15" fill="rgb(217,222,7)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="591.50"></text></g><g><title>`0x7FFCE152F35E (1 samples, 0.04%)</title><rect x="96.9293%" y="565" width="0.0370%" height="15" fill="rgb(233,28,6)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="575.50"></text></g><g><title>`0x7FFCE153095C (1 samples, 0.04%)</title><rect x="96.9293%" y="549" width="0.0370%" height="15" fill="rgb(231,218,15)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="559.50"></text></g><g><title>`0x7FFCE1519B1A (1 samples, 0.04%)</title><rect x="96.9293%" y="533" width="0.0370%" height="15" fill="rgb(226,171,48)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="543.50"></text></g><g><title>`0x7FFCE15AD924 (1 samples, 0.04%)</title><rect x="96.9293%" y="517" width="0.0370%" height="15" fill="rgb(235,201,9)" fg:x="2620" fg:w="1"/><text x="97.1793%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;csv::writer::Writer&lt;std::fs::File&gt;,csv::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;csv::writer::Writer (2 samples, 0.07%)</title><rect x="96.9663%" y="709" width="0.0740%" height="15" fill="rgb(217,80,15)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`csv::writer::WriterBuilder::from_path&lt;ref$&lt;alloc::string::String&gt; &gt; (2 samples, 0.07%)</title><rect x="96.9663%" y="693" width="0.0740%" height="15" fill="rgb(219,152,8)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (2 samples, 0.07%)</title><rect x="96.9663%" y="677" width="0.0740%" height="15" fill="rgb(243,107,38)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::fs::File::open (2 samples, 0.07%)</title><rect x="96.9663%" y="661" width="0.0740%" height="15" fill="rgb(231,17,5)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`core::convert::impl$6::try_into (2 samples, 0.07%)</title><rect x="96.9663%" y="645" width="0.0740%" height="15" fill="rgb(209,25,54)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`std::os::windows::io::handle::impl$12::try_from (2 samples, 0.07%)</title><rect x="96.9663%" y="629" width="0.0740%" height="15" fill="rgb(219,0,2)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="639.50"></text></g><g><title>`0x7FFCDEDA1476 (2 samples, 0.07%)</title><rect x="96.9663%" y="613" width="0.0740%" height="15" fill="rgb(246,9,5)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="623.50"></text></g><g><title>`0x7FFCDEDA1A09 (2 samples, 0.07%)</title><rect x="96.9663%" y="597" width="0.0740%" height="15" fill="rgb(226,159,4)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="607.50"></text></g><g><title>`0x7FFCDA5CA66F (2 samples, 0.07%)</title><rect x="96.9663%" y="581" width="0.0740%" height="15" fill="rgb(219,175,34)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="591.50"></text></g><g><title>`0x7FFCE15AE004 (2 samples, 0.07%)</title><rect x="96.9663%" y="565" width="0.0740%" height="15" fill="rgb(236,10,46)" fg:x="2621" fg:w="2"/><text x="97.2163%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::string::impl$38::deref (1 samples, 0.04%)</title><rect x="97.0403%" y="677" width="0.0370%" height="15" fill="rgb(240,211,16)" fg:x="2623" fg:w="1"/><text x="97.2903%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::read::StrRead::new(ref$ (1 samples, 0.04%)</title><rect x="97.0403%" y="661" width="0.0370%" height="15" fill="rgb(205,3,43)" fg:x="2623" fg:w="1"/><text x="97.2903%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;kuramoto_oscillators::parameter::CommonParam,serde_json::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result (2 samples, 0.07%)</title><rect x="97.0403%" y="709" width="0.0740%" height="15" fill="rgb(245,7,22)" fg:x="2623" fg:w="2"/><text x="97.2903%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::parameter::CommonParam::from_path(ref$ (2 samples, 0.07%)</title><rect x="97.0403%" y="693" width="0.0740%" height="15" fill="rgb(239,132,32)" fg:x="2623" fg:w="2"/><text x="97.2903%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,std::io::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result (1 samples, 0.04%)</title><rect x="97.0773%" y="677" width="0.0370%" height="15" fill="rgb(228,202,34)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::read_to_string::inner (1 samples, 0.04%)</title><rect x="97.0773%" y="661" width="0.0370%" height="15" fill="rgb(254,200,22)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::string::String::with_capacity (1 samples, 0.04%)</title><rect x="97.0773%" y="645" width="0.0370%" height="15" fill="rgb(219,10,39)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::with_capacity (1 samples, 0.04%)</title><rect x="97.0773%" y="629" width="0.0370%" height="15" fill="rgb(226,210,39)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.04%)</title><rect x="97.0773%" y="613" width="0.0370%" height="15" fill="rgb(208,219,16)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.04%)</title><rect x="97.0773%" y="597" width="0.0370%" height="15" fill="rgb(216,158,51)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec::allocate_in (1 samples, 0.04%)</title><rect x="97.0773%" y="581" width="0.0370%" height="15" fill="rgb(233,14,44)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="591.50"></text></g><g><title>`0x7FFCE153B44D (1 samples, 0.04%)</title><rect x="97.0773%" y="565" width="0.0370%" height="15" fill="rgb(237,97,39)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="575.50"></text></g><g><title>`0x7FFCE153D635 (1 samples, 0.04%)</title><rect x="97.0773%" y="549" width="0.0370%" height="15" fill="rgb(218,198,43)" fg:x="2624" fg:w="1"/><text x="97.3273%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,usize&gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure_env$5&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range&lt;usize&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure_env$5&lt;f64&gt; &gt; &gt; &gt;*, double, tuple$&lt;ref$ (6 samples, 0.22%)</title><rect x="97.1143%" y="597" width="0.2220%" height="15" fill="rgb(231,104,20)" fg:x="2625" fg:w="6"/><text x="97.3643%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul::closure$5(matrix::ops::matmul::impl$2::mul::closure_env$5&lt;f64&gt;*, tuple$&lt;ref$ (6 samples, 0.22%)</title><rect x="97.1143%" y="581" width="0.2220%" height="15" fill="rgb(254,36,13)" fg:x="2625" fg:w="6"/><text x="97.3643%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`core::ops::arith::impl$125::mul (6 samples, 0.22%)</title><rect x="97.1143%" y="565" width="0.2220%" height="15" fill="rgb(248,14,50)" fg:x="2625" fg:w="6"/><text x="97.3643%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::len (16 samples, 0.59%)</title><rect x="97.1143%" y="693" width="0.5919%" height="15" fill="rgb(217,107,29)" fg:x="2625" fg:w="16"/><text x="97.3643%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::ops::matmul::impl$2::mul&lt;f64&gt;(matrix::Matrix&lt;f64&gt;*, matrix::Matrix (16 samples, 0.59%)</title><rect x="97.1143%" y="677" width="0.5919%" height="15" fill="rgb(251,169,33)" fg:x="2625" fg:w="16"/><text x="97.3643%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::sum(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range&lt;usize&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure_env$5 (16 samples, 0.59%)</title><rect x="97.1143%" y="661" width="0.5919%" height="15" fill="rgb(217,108,32)" fg:x="2625" fg:w="16"/><text x="97.3643%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::accum::impl$104::sum(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range&lt;usize&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure_env$5 (16 samples, 0.59%)</title><rect x="97.1143%" y="645" width="0.5919%" height="15" fill="rgb(219,66,42)" fg:x="2625" fg:w="16"/><text x="97.3643%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range&lt;usize&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure_env$5&lt;f64&gt; &gt;, double, core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range&lt;usize&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure_env$5 (16 samples, 0.59%)</title><rect x="97.1143%" y="629" width="0.5919%" height="15" fill="rgb(206,180,7)" fg:x="2625" fg:w="16"/><text x="97.3643%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::traits::iterator::Iterator::fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range&lt;usize&gt; &gt;, double, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,usize&gt;,f64,f64,matrix::ops::matmul::impl$2::mul::closure_env$5&lt;f64&gt;,core::iter::traits::accum::impl$104::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range&lt;usize&gt; &gt;,matrix::ops::matmul::impl$2::mul::closure_env$5 (16 samples, 0.59%)</title><rect x="97.1143%" y="613" width="0.5919%" height="15" fill="rgb(208,226,31)" fg:x="2625" fg:w="16"/><text x="97.3643%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range (10 samples, 0.37%)</title><rect x="97.3363%" y="597" width="0.3700%" height="15" fill="rgb(218,26,49)" fg:x="2631" fg:w="10"/><text x="97.5863%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`core::iter::adapters::zip::impl$5::next(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;f64&gt;,core::ops::range::Range (10 samples, 0.37%)</title><rect x="97.3363%" y="581" width="0.3700%" height="15" fill="rgb(233,197,48)" fg:x="2631" fg:w="10"/><text x="97.5863%" y="591.50"></text></g><g><title>`0x7FFCE153B44D (1 samples, 0.04%)</title><rect x="97.7063%" y="613" width="0.0370%" height="15" fill="rgb(252,181,51)" fg:x="2641" fg:w="1"/><text x="97.9563%" y="623.50"></text></g><g><title>`0x7FFCE153DF6F (1 samples, 0.04%)</title><rect x="97.7063%" y="597" width="0.0370%" height="15" fill="rgb(253,90,19)" fg:x="2641" fg:w="1"/><text x="97.9563%" y="607.50"></text></g><g><title>`0x7FFCE15B472B (1 samples, 0.04%)</title><rect x="97.7063%" y="581" width="0.0370%" height="15" fill="rgb(215,171,30)" fg:x="2641" fg:w="1"/><text x="97.9563%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::kuramoto_oscillators::KuramotoOscillators::new (18 samples, 0.67%)</title><rect x="97.1143%" y="709" width="0.6659%" height="15" fill="rgb(214,222,9)" fg:x="2625" fg:w="18"/><text x="97.3643%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`matrix::Matrix&lt;f64&gt;::zero (2 samples, 0.07%)</title><rect x="97.7063%" y="693" width="0.0740%" height="15" fill="rgb(223,3,22)" fg:x="2641" fg:w="2"/><text x="97.9563%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::from_elem (2 samples, 0.07%)</title><rect x="97.7063%" y="677" width="0.0740%" height="15" fill="rgb(225,196,46)" fg:x="2641" fg:w="2"/><text x="97.9563%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::vec::spec_from_elem::impl$1::from_elem (2 samples, 0.07%)</title><rect x="97.7063%" y="661" width="0.0740%" height="15" fill="rgb(209,110,37)" fg:x="2641" fg:w="2"/><text x="97.9563%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_zeroed_in (2 samples, 0.07%)</title><rect x="97.7063%" y="645" width="0.0740%" height="15" fill="rgb(249,89,12)" fg:x="2641" fg:w="2"/><text x="97.9563%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::allocate_in (2 samples, 0.07%)</title><rect x="97.7063%" y="629" width="0.0740%" height="15" fill="rgb(226,27,33)" fg:x="2641" fg:w="2"/><text x="97.9563%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::impl$1::allocate_zeroed (1 samples, 0.04%)</title><rect x="97.7432%" y="613" width="0.0370%" height="15" fill="rgb(213,82,22)" fg:x="2642" fg:w="1"/><text x="97.9932%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="97.7432%" y="597" width="0.0370%" height="15" fill="rgb(248,140,0)" fg:x="2642" fg:w="1"/><text x="97.9932%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::alloc::alloc_zeroed (1 samples, 0.04%)</title><rect x="97.7432%" y="581" width="0.0370%" height="15" fill="rgb(228,106,3)" fg:x="2642" fg:w="1"/><text x="97.9932%" y="591.50"></text></g><g><title>`0x7FFCE153B44D (1 samples, 0.04%)</title><rect x="97.7432%" y="565" width="0.0370%" height="15" fill="rgb(209,23,37)" fg:x="2642" fg:w="1"/><text x="97.9932%" y="575.50"></text></g><g><title>`0x7FFCE153DF6F (1 samples, 0.04%)</title><rect x="97.7432%" y="549" width="0.0370%" height="15" fill="rgb(241,93,50)" fg:x="2642" fg:w="1"/><text x="97.9932%" y="559.50"></text></g><g><title>`0x7FFCE15B4733 (1 samples, 0.04%)</title><rect x="97.7432%" y="533" width="0.0370%" height="15" fill="rgb(253,46,43)" fg:x="2642" fg:w="1"/><text x="97.9932%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::parameter::ControlParam::from_path(ref$ (1 samples, 0.04%)</title><rect x="97.7802%" y="709" width="0.0370%" height="15" fill="rgb(226,206,43)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,std::io::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result (1 samples, 0.04%)</title><rect x="97.7802%" y="693" width="0.0370%" height="15" fill="rgb(217,54,7)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::read_to_string::inner (1 samples, 0.04%)</title><rect x="97.7802%" y="677" width="0.0370%" height="15" fill="rgb(223,5,52)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::File::open (1 samples, 0.04%)</title><rect x="97.7802%" y="661" width="0.0370%" height="15" fill="rgb(206,52,46)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::OpenOptions::open (1 samples, 0.04%)</title><rect x="97.7802%" y="645" width="0.0370%" height="15" fill="rgb(253,136,11)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::OpenOptions::_open (1 samples, 0.04%)</title><rect x="97.7802%" y="629" width="0.0370%" height="15" fill="rgb(208,106,33)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::fs::File::open (1 samples, 0.04%)</title><rect x="97.7802%" y="613" width="0.0370%" height="15" fill="rgb(206,54,4)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`core::convert::impl$6::try_into (1 samples, 0.04%)</title><rect x="97.7802%" y="597" width="0.0370%" height="15" fill="rgb(213,3,15)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 0.04%)</title><rect x="97.7802%" y="581" width="0.0370%" height="15" fill="rgb(252,211,39)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="591.50"></text></g><g><title>`0x7FFCDEDA1476 (1 samples, 0.04%)</title><rect x="97.7802%" y="565" width="0.0370%" height="15" fill="rgb(223,6,36)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="575.50"></text></g><g><title>`0x7FFCDEDA1A09 (1 samples, 0.04%)</title><rect x="97.7802%" y="549" width="0.0370%" height="15" fill="rgb(252,169,45)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="559.50"></text></g><g><title>`0x7FFCDA5CA66F (1 samples, 0.04%)</title><rect x="97.7802%" y="533" width="0.0370%" height="15" fill="rgb(212,48,26)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="543.50"></text></g><g><title>`0x7FFCE15AE004 (1 samples, 0.04%)</title><rect x="97.7802%" y="517" width="0.0370%" height="15" fill="rgb(251,102,48)" fg:x="2643" fg:w="1"/><text x="98.0302%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,std::io::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result (1 samples, 0.04%)</title><rect x="97.8172%" y="693" width="0.0370%" height="15" fill="rgb(243,208,16)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::read_to_string::inner (1 samples, 0.04%)</title><rect x="97.8172%" y="677" width="0.0370%" height="15" fill="rgb(219,96,24)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::default_read_to_string (1 samples, 0.04%)</title><rect x="97.8172%" y="661" width="0.0370%" height="15" fill="rgb(219,33,29)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::append_to_string (1 samples, 0.04%)</title><rect x="97.8172%" y="645" width="0.0370%" height="15" fill="rgb(223,176,5)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::default_read_to_end&lt;std::fs::File&gt; (1 samples, 0.04%)</title><rect x="97.8172%" y="629" width="0.0370%" height="15" fill="rgb(228,140,14)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::handle::Handle::read_buf (1 samples, 0.04%)</title><rect x="97.8172%" y="613" width="0.0370%" height="15" fill="rgb(217,179,31)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::handle::Handle::synchronous_read (1 samples, 0.04%)</title><rect x="97.8172%" y="597" width="0.0370%" height="15" fill="rgb(230,9,30)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="607.50"></text></g><g><title>`0x7FFCE15AD624 (1 samples, 0.04%)</title><rect x="97.8172%" y="581" width="0.0370%" height="15" fill="rgb(230,136,20)" fg:x="2644" fg:w="1"/><text x="98.0672%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::parameter::NetworkParam::from_path(ref$ (2 samples, 0.07%)</title><rect x="97.8172%" y="709" width="0.0740%" height="15" fill="rgb(215,210,22)" fg:x="2644" fg:w="2"/><text x="98.0672%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;kuramoto_oscillators::parameter::NetworkParam,serde_json::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result (1 samples, 0.04%)</title><rect x="97.8542%" y="693" width="0.0370%" height="15" fill="rgb(218,43,5)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::from_trait&lt;serde_json::read::StrRead,kuramoto_oscillators::parameter::NetworkParam&gt; (1 samples, 0.04%)</title><rect x="97.8542%" y="677" width="0.0370%" height="15" fill="rgb(216,11,5)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::impl$7::deserialize_struct&lt;serde_json::read::StrRead,kuramoto_oscillators::parameter::_::impl$0::deserialize::__Visitor&gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.04%)</title><rect x="97.8542%" y="661" width="0.0370%" height="15" fill="rgb(209,82,29)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::parameter::_::impl$0::deserialize::impl$2::visit_map(kuramoto_oscillators::parameter::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.04%)</title><rect x="97.8542%" y="645" width="0.0370%" height="15" fill="rgb(244,115,12)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;::is_some (1 samples, 0.04%)</title><rect x="97.8542%" y="629" width="0.0370%" height="15" fill="rgb(222,82,18)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::impl$7::deserialize_seq&lt;serde_json::read::StrRead,serde::de::impls::impl$19::deserialize::VecVisitor&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::impl$19::deserialize::VecVisitor&lt;alloc::vec::Vec (1 samples, 0.04%)</title><rect x="97.8542%" y="613" width="0.0370%" height="15" fill="rgb(249,227,8)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`serde::de::impls::impl$19::deserialize::impl$0::visit_seq&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;,serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt; &gt;(serde::de::impls::impl$19::deserialize::VecVisitor&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt;, serde_json::de::SeqAccess (1 samples, 0.04%)</title><rect x="97.8542%" y="597" width="0.0370%" height="15" fill="rgb(253,141,45)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::impl$9::next_element_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt; &gt;(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData&lt;alloc::vec::Vec (1 samples, 0.04%)</title><rect x="97.8542%" y="581" width="0.0370%" height="15" fill="rgb(234,184,4)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::impl$7::deserialize_seq&lt;serde_json::read::StrRead,serde::de::impls::impl$19::deserialize::VecVisitor&lt;f64&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::impl$19::deserialize::VecVisitor (1 samples, 0.04%)</title><rect x="97.8542%" y="565" width="0.0370%" height="15" fill="rgb(218,194,23)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`serde::de::impls::impl$19::deserialize::impl$0::visit_seq&lt;f64,serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt; &gt;(serde::de::impls::impl$19::deserialize::VecVisitor&lt;f64&gt;, serde_json::de::SeqAccess (1 samples, 0.04%)</title><rect x="97.8542%" y="549" width="0.0370%" height="15" fill="rgb(235,66,41)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::impl$9::next_element_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;f64&gt; &gt;(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.04%)</title><rect x="97.8542%" y="533" width="0.0370%" height="15" fill="rgb(245,217,1)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`serde::de::impl$5::deserialize&lt;f64,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;f64&gt;, serde_json::de::Deserializer (1 samples, 0.04%)</title><rect x="97.8542%" y="517" width="0.0370%" height="15" fill="rgb(229,91,1)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`serde::de::impls::impl$76::deserialize(serde_json::de::Deserializer (1 samples, 0.04%)</title><rect x="97.8542%" y="501" width="0.0370%" height="15" fill="rgb(207,101,30)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::impl$7::deserialize_f64(serde_json::de::Deserializer (1 samples, 0.04%)</title><rect x="97.8542%" y="485" width="0.0370%" height="15" fill="rgb(223,82,49)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::deserialize_number (1 samples, 0.04%)</title><rect x="97.8542%" y="469" width="0.0370%" height="15" fill="rgb(218,167,17)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_integer&lt;serde_json::read::StrRead&gt; (1 samples, 0.04%)</title><rect x="97.8542%" y="453" width="0.0370%" height="15" fill="rgb(208,103,14)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_number (1 samples, 0.04%)</title><rect x="97.8542%" y="437" width="0.0370%" height="15" fill="rgb(238,20,8)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="447.50"></text></g><g><title>kuramoto_oscillators.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_decimal&lt;serde_json::read::StrRead&gt; (1 samples, 0.04%)</title><rect x="97.8542%" y="421" width="0.0370%" height="15" fill="rgb(218,80,54)" fg:x="2645" fg:w="1"/><text x="98.1042%" y="431.50"></text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::read_dir (2 samples, 0.07%)</title><rect x="97.8912%" y="709" width="0.0740%" height="15" fill="rgb(240,144,17)" fg:x="2646" fg:w="2"/><text x="98.1412%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::read_dir (2 samples, 0.07%)</title><rect x="97.8912%" y="693" width="0.0740%" height="15" fill="rgb(245,27,50)" fg:x="2646" fg:w="2"/><text x="98.1412%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`enum2$&lt;core::result::Result&lt;std::sys::windows::fs::ReadDir,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::windows::fs::ReadDir,std::io::error::Error&gt; &gt;, std::fs::ReadDir (*) (2 samples, 0.07%)</title><rect x="97.8912%" y="677" width="0.0740%" height="15" fill="rgb(251,51,7)" fg:x="2646" fg:w="2"/><text x="98.1412%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::fs::readdir (2 samples, 0.07%)</title><rect x="97.8912%" y="661" width="0.0740%" height="15" fill="rgb(245,217,29)" fg:x="2646" fg:w="2"/><text x="98.1412%" y="671.50"></text></g><g><title>`0x7FFCDEDA1BEC (2 samples, 0.07%)</title><rect x="97.8912%" y="645" width="0.0740%" height="15" fill="rgb(221,176,29)" fg:x="2646" fg:w="2"/><text x="98.1412%" y="655.50"></text></g><g><title>`0x7FFCDEDA2E64 (2 samples, 0.07%)</title><rect x="97.8912%" y="629" width="0.0740%" height="15" fill="rgb(212,180,24)" fg:x="2646" fg:w="2"/><text x="98.1412%" y="639.50"></text></g><g><title>`0x7FFCE15AFDB4 (2 samples, 0.07%)</title><rect x="97.8912%" y="613" width="0.0740%" height="15" fill="rgb(254,24,2)" fg:x="2646" fg:w="2"/><text x="98.1412%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`std::fs::create_dir (3 samples, 0.11%)</title><rect x="97.9652%" y="709" width="0.1110%" height="15" fill="rgb(230,100,2)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place (3 samples, 0.11%)</title><rect x="97.9652%" y="693" width="0.1110%" height="15" fill="rgb(219,142,25)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.11%)</title><rect x="97.9652%" y="677" width="0.1110%" height="15" fill="rgb(240,73,43)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.11%)</title><rect x="97.9652%" y="661" width="0.1110%" height="15" fill="rgb(214,114,15)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 0.11%)</title><rect x="97.9652%" y="645" width="0.1110%" height="15" fill="rgb(207,130,4)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::fs::DirBuilder::mkdir (3 samples, 0.11%)</title><rect x="97.9652%" y="629" width="0.1110%" height="15" fill="rgb(221,25,40)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::cvt (3 samples, 0.11%)</title><rect x="97.9652%" y="613" width="0.1110%" height="15" fill="rgb(241,184,7)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::impl$2::is_zero (3 samples, 0.11%)</title><rect x="97.9652%" y="597" width="0.1110%" height="15" fill="rgb(235,159,4)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="607.50"></text></g><g><title>`0x7FFCDEDDF2C2 (3 samples, 0.11%)</title><rect x="97.9652%" y="581" width="0.1110%" height="15" fill="rgb(214,87,48)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="591.50"></text></g><g><title>`0x7FFCDA5CA66F (3 samples, 0.11%)</title><rect x="97.9652%" y="565" width="0.1110%" height="15" fill="rgb(246,198,24)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="575.50"></text></g><g><title>`0x7FFCE15AE004 (3 samples, 0.11%)</title><rect x="97.9652%" y="549" width="0.1110%" height="15" fill="rgb(209,66,40)" fg:x="2648" fg:w="3"/><text x="98.2152%" y="559.50"></text></g><g><title>`0x7FFCE155CC91 (2,651 samples, 98.08%)</title><rect x="0.0370%" y="933" width="98.0762%" height="15" fill="rgb(233,147,39)" fg:x="1" fg:w="2651"/><text x="0.2870%" y="943.50">`0x7FFCE155CC91</text></g><g><title>`0x7FFCE0C57374 (2,651 samples, 98.08%)</title><rect x="0.0370%" y="917" width="98.0762%" height="15" fill="rgb(231,145,52)" fg:x="1" fg:w="2651"/><text x="0.2870%" y="927.50">`0x7FFCE0C57374</text></g><g><title>kuramoto_oscillators.exe`__scrt_common_main_seh() (2,651 samples, 98.08%)</title><rect x="0.0370%" y="901" width="98.0762%" height="15" fill="rgb(206,20,26)" fg:x="1" fg:w="2651"/><text x="0.2870%" y="911.50">kuramoto_oscillators.exe`__scrt_common_main_seh()</text></g><g><title>kuramoto_oscillators.exe`invoke_main() (2,638 samples, 97.60%)</title><rect x="0.5179%" y="885" width="97.5953%" height="15" fill="rgb(238,220,4)" fg:x="14" fg:w="2638"/><text x="0.7679%" y="895.50">kuramoto_oscillators.exe`invoke_main()</text></g><g><title>kuramoto_oscillators.exe`main (2,638 samples, 97.60%)</title><rect x="0.5179%" y="869" width="97.5953%" height="15" fill="rgb(252,195,42)" fg:x="14" fg:w="2638"/><text x="0.7679%" y="879.50">kuramoto_oscillators.exe`main</text></g><g><title>kuramoto_oscillators.exe`std::rt::lang_start_internal (2,638 samples, 97.60%)</title><rect x="0.5179%" y="853" width="97.5953%" height="15" fill="rgb(209,10,6)" fg:x="14" fg:w="2638"/><text x="0.7679%" y="863.50">kuramoto_oscillators.exe`std::rt::lang_start_internal</text></g><g><title>kuramoto_oscillators.exe`std::panic::catch_unwind (2,638 samples, 97.60%)</title><rect x="0.5179%" y="837" width="97.5953%" height="15" fill="rgb(229,3,52)" fg:x="14" fg:w="2638"/><text x="0.7679%" y="847.50">kuramoto_oscillators.exe`std::panic::catch_unwind</text></g><g><title>kuramoto_oscillators.exe`std::panicking::try (2,638 samples, 97.60%)</title><rect x="0.5179%" y="821" width="97.5953%" height="15" fill="rgb(253,49,37)" fg:x="14" fg:w="2638"/><text x="0.7679%" y="831.50">kuramoto_oscillators.exe`std::panicking::try</text></g><g><title>kuramoto_oscillators.exe`std::panicking::try::do_call (2,638 samples, 97.60%)</title><rect x="0.5179%" y="805" width="97.5953%" height="15" fill="rgb(240,103,49)" fg:x="14" fg:w="2638"/><text x="0.7679%" y="815.50">kuramoto_oscillators.exe`std::panicking::try::do_call</text></g><g><title>kuramoto_oscillators.exe`std::rt::lang_start_internal::closure$2 (2,636 samples, 97.52%)</title><rect x="0.5919%" y="789" width="97.5213%" height="15" fill="rgb(250,182,30)" fg:x="16" fg:w="2636"/><text x="0.8419%" y="799.50">kuramoto_oscillators.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>kuramoto_oscillators.exe`std::panic::catch_unwind (2,636 samples, 97.52%)</title><rect x="0.5919%" y="773" width="97.5213%" height="15" fill="rgb(248,8,30)" fg:x="16" fg:w="2636"/><text x="0.8419%" y="783.50">kuramoto_oscillators.exe`std::panic::catch_unwind</text></g><g><title>kuramoto_oscillators.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (2,636 samples, 97.52%)</title><rect x="0.5919%" y="757" width="97.5213%" height="15" fill="rgb(237,120,30)" fg:x="16" fg:w="2636"/><text x="0.8419%" y="767.50">kuramoto_oscillators.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>kuramoto_oscillators.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (2,636 samples, 97.52%)</title><rect x="0.5919%" y="741" width="97.5213%" height="15" fill="rgb(221,146,34)" fg:x="16" fg:w="2636"/><text x="0.8419%" y="751.50">kuramoto_oscillators.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>kuramoto_oscillators.exe`kuramoto_oscillators::main (2,636 samples, 97.52%)</title><rect x="0.5919%" y="725" width="97.5213%" height="15" fill="rgb(242,55,13)" fg:x="16" fg:w="2636"/><text x="0.8419%" y="735.50">kuramoto_oscillators.exe`kuramoto_oscillators::main</text></g><g><title>kuramoto_oscillators.exe`std::io::stdio::_print (1 samples, 0.04%)</title><rect x="98.0762%" y="709" width="0.0370%" height="15" fill="rgb(242,112,31)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="719.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::stdio::print_to (1 samples, 0.04%)</title><rect x="98.0762%" y="693" width="0.0370%" height="15" fill="rgb(249,192,27)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="703.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::stdio::impl$12::write_fmt (1 samples, 0.04%)</title><rect x="98.0762%" y="677" width="0.0370%" height="15" fill="rgb(208,204,44)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="687.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="98.0762%" y="661" width="0.0370%" height="15" fill="rgb(208,93,54)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="671.50"></text></g><g><title>kuramoto_oscillators.exe`core::fmt::write (1 samples, 0.04%)</title><rect x="98.0762%" y="645" width="0.0370%" height="15" fill="rgb(242,1,31)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="655.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.04%)</title><rect x="98.0762%" y="629" width="0.0370%" height="15" fill="rgb(241,83,25)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="639.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::stdio::impl$13::write_all (1 samples, 0.04%)</title><rect x="98.0762%" y="613" width="0.0370%" height="15" fill="rgb(205,169,50)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="623.50"></text></g><g><title>kuramoto_oscillators.exe`std::sync::remutex::impl$6::deref (1 samples, 0.04%)</title><rect x="98.0762%" y="597" width="0.0370%" height="15" fill="rgb(239,186,37)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="607.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.04%)</title><rect x="98.0762%" y="581" width="0.0370%" height="15" fill="rgb(205,221,10)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="591.50"></text></g><g><title>kuramoto_oscillators.exe`core::result::impl$26::branch (1 samples, 0.04%)</title><rect x="98.0762%" y="565" width="0.0370%" height="15" fill="rgb(218,196,15)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="575.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 0.04%)</title><rect x="98.0762%" y="549" width="0.0370%" height="15" fill="rgb(218,196,35)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="559.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::stdio::impl$1::write (1 samples, 0.04%)</title><rect x="98.0762%" y="533" width="0.0370%" height="15" fill="rgb(233,63,24)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="543.50"></text></g><g><title>kuramoto_oscillators.exe`std::io::stdio::handle_ebadf (1 samples, 0.04%)</title><rect x="98.0762%" y="517" width="0.0370%" height="15" fill="rgb(225,8,4)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="527.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::stdio::write (1 samples, 0.04%)</title><rect x="98.0762%" y="501" width="0.0370%" height="15" fill="rgb(234,105,35)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="511.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::stdio::write_valid_utf8_to_console (1 samples, 0.04%)</title><rect x="98.0762%" y="485" width="0.0370%" height="15" fill="rgb(236,21,32)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="495.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::stdio::write_u16s (1 samples, 0.04%)</title><rect x="98.0762%" y="469" width="0.0370%" height="15" fill="rgb(228,109,6)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="479.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::cvt (1 samples, 0.04%)</title><rect x="98.0762%" y="453" width="0.0370%" height="15" fill="rgb(229,215,31)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="463.50"></text></g><g><title>kuramoto_oscillators.exe`std::sys::windows::impl$2::is_zero (1 samples, 0.04%)</title><rect x="98.0762%" y="437" width="0.0370%" height="15" fill="rgb(221,52,54)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="447.50"></text></g><g><title>`0x7FFCDEDC9D8A (1 samples, 0.04%)</title><rect x="98.0762%" y="421" width="0.0370%" height="15" fill="rgb(252,129,43)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="431.50"></text></g><g><title>`0x7FFCDEDC9EB1 (1 samples, 0.04%)</title><rect x="98.0762%" y="405" width="0.0370%" height="15" fill="rgb(248,183,27)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="415.50"></text></g><g><title>`0x7FFCE15AD644 (1 samples, 0.04%)</title><rect x="98.0762%" y="389" width="0.0370%" height="15" fill="rgb(250,0,22)" fg:x="2651" fg:w="1"/><text x="98.3262%" y="399.50"></text></g><g><title>`0x7FFCE15E2156 (1 samples, 0.04%)</title><rect x="98.1132%" y="885" width="0.0370%" height="15" fill="rgb(213,166,10)" fg:x="2652" fg:w="1"/><text x="98.3632%" y="895.50"></text></g><g><title>`0x7FFCE1522296 (1 samples, 0.04%)</title><rect x="98.1132%" y="869" width="0.0370%" height="15" fill="rgb(207,163,36)" fg:x="2652" fg:w="1"/><text x="98.3632%" y="879.50"></text></g><g><title>`0x7FFCE152355D (1 samples, 0.04%)</title><rect x="98.1132%" y="853" width="0.0370%" height="15" fill="rgb(208,122,22)" fg:x="2652" fg:w="1"/><text x="98.3632%" y="863.50"></text></g><g><title>`0x7FFCE15E5A9A (1 samples, 0.04%)</title><rect x="98.1132%" y="837" width="0.0370%" height="15" fill="rgb(207,104,49)" fg:x="2652" fg:w="1"/><text x="98.3632%" y="847.50"></text></g><g><title>`0x7FFCE151F2C4 (1 samples, 0.04%)</title><rect x="98.1132%" y="821" width="0.0370%" height="15" fill="rgb(248,211,50)" fg:x="2652" fg:w="1"/><text x="98.3632%" y="831.50"></text></g><g><title>`0x7FFCE15E2202 (1 samples, 0.04%)</title><rect x="98.1502%" y="885" width="0.0370%" height="15" fill="rgb(217,13,45)" fg:x="2653" fg:w="1"/><text x="98.4002%" y="895.50"></text></g><g><title>`0x7FFCE15E1026 (1 samples, 0.04%)</title><rect x="98.1502%" y="869" width="0.0370%" height="15" fill="rgb(211,216,49)" fg:x="2653" fg:w="1"/><text x="98.4002%" y="879.50"></text></g><g><title>`0x7FFCE15E0F5B (1 samples, 0.04%)</title><rect x="98.1502%" y="853" width="0.0370%" height="15" fill="rgb(221,58,53)" fg:x="2653" fg:w="1"/><text x="98.4002%" y="863.50"></text></g><g><title>`0x7FFCE15AD744 (1 samples, 0.04%)</title><rect x="98.1502%" y="837" width="0.0370%" height="15" fill="rgb(220,112,41)" fg:x="2653" fg:w="1"/><text x="98.4002%" y="847.50"></text></g><g><title>`0x7FFCE15E28F8 (1 samples, 0.04%)</title><rect x="98.1872%" y="885" width="0.0370%" height="15" fill="rgb(236,38,28)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="895.50"></text></g><g><title>`0x7FFCE1552EA0 (1 samples, 0.04%)</title><rect x="98.1872%" y="869" width="0.0370%" height="15" fill="rgb(227,195,22)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="879.50"></text></g><g><title>`0x7FFCE15530E5 (1 samples, 0.04%)</title><rect x="98.1872%" y="853" width="0.0370%" height="15" fill="rgb(214,55,33)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="863.50"></text></g><g><title>`0x7FFCE1552F43 (1 samples, 0.04%)</title><rect x="98.1872%" y="837" width="0.0370%" height="15" fill="rgb(248,80,13)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="847.50"></text></g><g><title>`0x7FFCE15538C0 (1 samples, 0.04%)</title><rect x="98.1872%" y="821" width="0.0370%" height="15" fill="rgb(238,52,6)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="831.50"></text></g><g><title>`0x7FFCE158E42E (1 samples, 0.04%)</title><rect x="98.1872%" y="805" width="0.0370%" height="15" fill="rgb(224,198,47)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="815.50"></text></g><g><title>`0x7FFCE151E02C (1 samples, 0.04%)</title><rect x="98.1872%" y="789" width="0.0370%" height="15" fill="rgb(233,171,20)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="799.50"></text></g><g><title>`0x7FFCE15209A3 (1 samples, 0.04%)</title><rect x="98.1872%" y="773" width="0.0370%" height="15" fill="rgb(241,30,25)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="783.50"></text></g><g><title>`0x7FFCE15222CD (1 samples, 0.04%)</title><rect x="98.1872%" y="757" width="0.0370%" height="15" fill="rgb(207,171,38)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="767.50"></text></g><g><title>`0x7FFCE1522634 (1 samples, 0.04%)</title><rect x="98.1872%" y="741" width="0.0370%" height="15" fill="rgb(234,70,1)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="751.50"></text></g><g><title>`0x7FFCE152388C (1 samples, 0.04%)</title><rect x="98.1872%" y="725" width="0.0370%" height="15" fill="rgb(232,178,18)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="735.50"></text></g><g><title>`0x7FFCE1572FF4 (1 samples, 0.04%)</title><rect x="98.1872%" y="709" width="0.0370%" height="15" fill="rgb(241,78,40)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="719.50"></text></g><g><title>`0x7FFCE15AEEF4 (1 samples, 0.04%)</title><rect x="98.1872%" y="693" width="0.0370%" height="15" fill="rgb(222,35,25)" fg:x="2654" fg:w="1"/><text x="98.4372%" y="703.50"></text></g><g><title>`0x7FFCE15E3079 (1 samples, 0.04%)</title><rect x="98.2242%" y="885" width="0.0370%" height="15" fill="rgb(207,92,16)" fg:x="2655" fg:w="1"/><text x="98.4742%" y="895.50"></text></g><g><title>`0x7FFCE1522296 (1 samples, 0.04%)</title><rect x="98.2242%" y="869" width="0.0370%" height="15" fill="rgb(216,59,51)" fg:x="2655" fg:w="1"/><text x="98.4742%" y="879.50"></text></g><g><title>`0x7FFCE152354A (1 samples, 0.04%)</title><rect x="98.2242%" y="853" width="0.0370%" height="15" fill="rgb(213,80,28)" fg:x="2655" fg:w="1"/><text x="98.4742%" y="863.50"></text></g><g><title>`0x7FFCE15ADF64 (1 samples, 0.04%)</title><rect x="98.2242%" y="837" width="0.0370%" height="15" fill="rgb(220,93,7)" fg:x="2655" fg:w="1"/><text x="98.4742%" y="847.50"></text></g><g><title>`0x7FFCE1524AAA (1 samples, 0.04%)</title><rect x="98.2612%" y="789" width="0.0370%" height="15" fill="rgb(225,24,44)" fg:x="2656" fg:w="1"/><text x="98.5112%" y="799.50"></text></g><g><title>`0x7FFCE1524D42 (1 samples, 0.04%)</title><rect x="98.2612%" y="773" width="0.0370%" height="15" fill="rgb(243,74,40)" fg:x="2656" fg:w="1"/><text x="98.5112%" y="783.50"></text></g><g><title>`0x7FFCE15ADA64 (1 samples, 0.04%)</title><rect x="98.2612%" y="757" width="0.0370%" height="15" fill="rgb(228,39,7)" fg:x="2656" fg:w="1"/><text x="98.5112%" y="767.50"></text></g><g><title>`0x7FFCE1527AD9 (1 samples, 0.04%)</title><rect x="98.2982%" y="773" width="0.0370%" height="15" fill="rgb(227,79,8)" fg:x="2657" fg:w="1"/><text x="98.5482%" y="783.50"></text></g><g><title>`0x7FFCE1527B29 (1 samples, 0.04%)</title><rect x="98.3352%" y="773" width="0.0370%" height="15" fill="rgb(236,58,11)" fg:x="2658" fg:w="1"/><text x="98.5852%" y="783.50"></text></g><g><title>`0x7FFCE15288A8 (1 samples, 0.04%)</title><rect x="98.3352%" y="757" width="0.0370%" height="15" fill="rgb(249,63,35)" fg:x="2658" fg:w="1"/><text x="98.5852%" y="767.50"></text></g><g><title>`0x7FFCE1524479 (1 samples, 0.04%)</title><rect x="98.3352%" y="741" width="0.0370%" height="15" fill="rgb(252,114,16)" fg:x="2658" fg:w="1"/><text x="98.5852%" y="751.50"></text></g><g><title>`0x7FFCE1524BCF (1 samples, 0.04%)</title><rect x="98.3352%" y="725" width="0.0370%" height="15" fill="rgb(254,151,24)" fg:x="2658" fg:w="1"/><text x="98.5852%" y="735.50"></text></g><g><title>`0x7FFCE151FA77 (1 samples, 0.04%)</title><rect x="98.3352%" y="709" width="0.0370%" height="15" fill="rgb(253,54,39)" fg:x="2658" fg:w="1"/><text x="98.5852%" y="719.50"></text></g><g><title>`0x7FFCE1520847 (1 samples, 0.04%)</title><rect x="98.3352%" y="693" width="0.0370%" height="15" fill="rgb(243,25,45)" fg:x="2658" fg:w="1"/><text x="98.5852%" y="703.50"></text></g><g><title>`0x7FFCE15426BA (1 samples, 0.04%)</title><rect x="98.3722%" y="757" width="0.0370%" height="15" fill="rgb(234,134,9)" fg:x="2659" fg:w="1"/><text x="98.6222%" y="767.50"></text></g><g><title>`0x7FFCE152FB31 (5 samples, 0.18%)</title><rect x="98.2612%" y="837" width="0.1850%" height="15" fill="rgb(227,166,31)" fg:x="2656" fg:w="5"/><text x="98.5112%" y="847.50"></text></g><g><title>`0x7FFCE157C2FD (5 samples, 0.18%)</title><rect x="98.2612%" y="821" width="0.1850%" height="15" fill="rgb(245,143,41)" fg:x="2656" fg:w="5"/><text x="98.5112%" y="831.50"></text></g><g><title>`0x7FFCE1524479 (5 samples, 0.18%)</title><rect x="98.2612%" y="805" width="0.1850%" height="15" fill="rgb(238,181,32)" fg:x="2656" fg:w="5"/><text x="98.5112%" y="815.50"></text></g><g><title>`0x7FFCE1524C14 (4 samples, 0.15%)</title><rect x="98.2982%" y="789" width="0.1480%" height="15" fill="rgb(224,113,18)" fg:x="2657" fg:w="4"/><text x="98.5482%" y="799.50"></text></g><g><title>`0x7FFCE1527BC4 (2 samples, 0.07%)</title><rect x="98.3722%" y="773" width="0.0740%" height="15" fill="rgb(240,229,28)" fg:x="2659" fg:w="2"/><text x="98.6222%" y="783.50"></text></g><g><title>`0x7FFCE15426CC (1 samples, 0.04%)</title><rect x="98.4092%" y="757" width="0.0370%" height="15" fill="rgb(250,185,3)" fg:x="2660" fg:w="1"/><text x="98.6592%" y="767.50"></text></g><g><title>`0x7FFCDEDC9187 (1 samples, 0.04%)</title><rect x="98.4462%" y="725" width="0.0370%" height="15" fill="rgb(212,59,25)" fg:x="2661" fg:w="1"/><text x="98.6962%" y="735.50"></text></g><g><title>`0x7FFCDEDCA9D6 (1 samples, 0.04%)</title><rect x="98.4462%" y="709" width="0.0370%" height="15" fill="rgb(221,87,20)" fg:x="2661" fg:w="1"/><text x="98.6962%" y="719.50"></text></g><g><title>`0x7FFCE1518EF2 (1 samples, 0.04%)</title><rect x="98.4462%" y="693" width="0.0370%" height="15" fill="rgb(213,74,28)" fg:x="2661" fg:w="1"/><text x="98.6962%" y="703.50"></text></g><g><title>`0x7FFCE151910E (1 samples, 0.04%)</title><rect x="98.4462%" y="677" width="0.0370%" height="15" fill="rgb(224,132,34)" fg:x="2661" fg:w="1"/><text x="98.6962%" y="687.50"></text></g><g><title>`0x7FFCE15ADC44 (1 samples, 0.04%)</title><rect x="98.4462%" y="661" width="0.0370%" height="15" fill="rgb(222,101,24)" fg:x="2661" fg:w="1"/><text x="98.6962%" y="671.50"></text></g><g><title>`0x7FFCDEDC93A2 (1 samples, 0.04%)</title><rect x="98.4832%" y="725" width="0.0370%" height="15" fill="rgb(254,142,4)" fg:x="2662" fg:w="1"/><text x="98.7332%" y="735.50"></text></g><g><title>`0x7FFCDEDCA28C (1 samples, 0.04%)</title><rect x="98.4832%" y="709" width="0.0370%" height="15" fill="rgb(230,229,49)" fg:x="2662" fg:w="1"/><text x="98.7332%" y="719.50"></text></g><g><title>`0x7FFCDEDCA34A (1 samples, 0.04%)</title><rect x="98.4832%" y="693" width="0.0370%" height="15" fill="rgb(238,70,47)" fg:x="2662" fg:w="1"/><text x="98.7332%" y="703.50"></text></g><g><title>`0x7FFCDEDCA3D4 (1 samples, 0.04%)</title><rect x="98.4832%" y="677" width="0.0370%" height="15" fill="rgb(231,160,17)" fg:x="2662" fg:w="1"/><text x="98.7332%" y="687.50"></text></g><g><title>`0x7FFCDEDCA477 (1 samples, 0.04%)</title><rect x="98.4832%" y="661" width="0.0370%" height="15" fill="rgb(218,68,53)" fg:x="2662" fg:w="1"/><text x="98.7332%" y="671.50"></text></g><g><title>`0x7FFCDEDC8E0D (3 samples, 0.11%)</title><rect x="98.4462%" y="741" width="0.1110%" height="15" fill="rgb(236,111,10)" fg:x="2661" fg:w="3"/><text x="98.6962%" y="751.50"></text></g><g><title>`0x7FFCDEDC93E2 (1 samples, 0.04%)</title><rect x="98.5202%" y="725" width="0.0370%" height="15" fill="rgb(224,34,41)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="735.50"></text></g><g><title>`0x7FFCDEDCA0B3 (1 samples, 0.04%)</title><rect x="98.5202%" y="709" width="0.0370%" height="15" fill="rgb(241,118,19)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="719.50"></text></g><g><title>`0x7FFCDEDC8DAF (1 samples, 0.04%)</title><rect x="98.5202%" y="693" width="0.0370%" height="15" fill="rgb(238,129,25)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="703.50"></text></g><g><title>`0x7FFCDEE47B2E (1 samples, 0.04%)</title><rect x="98.5202%" y="677" width="0.0370%" height="15" fill="rgb(238,22,31)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="687.50"></text></g><g><title>`0x7FFCDEDC83FE (1 samples, 0.04%)</title><rect x="98.5202%" y="661" width="0.0370%" height="15" fill="rgb(222,174,48)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="671.50"></text></g><g><title>`0x7FFCDEDCA41C (1 samples, 0.04%)</title><rect x="98.5202%" y="645" width="0.0370%" height="15" fill="rgb(206,152,40)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="655.50"></text></g><g><title>`0x7FFCDEDAA448 (1 samples, 0.04%)</title><rect x="98.5202%" y="629" width="0.0370%" height="15" fill="rgb(218,99,54)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="639.50"></text></g><g><title>`0x7FFCDEDAA148 (1 samples, 0.04%)</title><rect x="98.5202%" y="613" width="0.0370%" height="15" fill="rgb(220,174,26)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="623.50"></text></g><g><title>`0x7FFCE15AD7A4 (1 samples, 0.04%)</title><rect x="98.5202%" y="597" width="0.0370%" height="15" fill="rgb(245,116,9)" fg:x="2663" fg:w="1"/><text x="98.7702%" y="607.50"></text></g><g><title>`0x7FFCDEDC8E37 (1 samples, 0.04%)</title><rect x="98.5572%" y="741" width="0.0370%" height="15" fill="rgb(209,72,35)" fg:x="2664" fg:w="1"/><text x="98.8072%" y="751.50"></text></g><g><title>`0x7FFCDEE0D862 (1 samples, 0.04%)</title><rect x="98.5572%" y="725" width="0.0370%" height="15" fill="rgb(226,126,21)" fg:x="2664" fg:w="1"/><text x="98.8072%" y="735.50"></text></g><g><title>`0x7FFCDEE0CBAE (1 samples, 0.04%)</title><rect x="98.5572%" y="709" width="0.0370%" height="15" fill="rgb(227,192,1)" fg:x="2664" fg:w="1"/><text x="98.8072%" y="719.50"></text></g><g><title>`0x7FFCDEE0B01D (1 samples, 0.04%)</title><rect x="98.5572%" y="693" width="0.0370%" height="15" fill="rgb(237,180,29)" fg:x="2664" fg:w="1"/><text x="98.8072%" y="703.50"></text></g><g><title>`0x7FFCDEE0AB9C (1 samples, 0.04%)</title><rect x="98.5572%" y="677" width="0.0370%" height="15" fill="rgb(230,197,35)" fg:x="2664" fg:w="1"/><text x="98.8072%" y="687.50"></text></g><g><title>`0x7FFCDEDA8FA8 (1 samples, 0.04%)</title><rect x="98.5572%" y="661" width="0.0370%" height="15" fill="rgb(246,193,31)" fg:x="2664" fg:w="1"/><text x="98.8072%" y="671.50"></text></g><g><title>`0x7FFCE15AEBD4 (1 samples, 0.04%)</title><rect x="98.5572%" y="645" width="0.0370%" height="15" fill="rgb(241,36,4)" fg:x="2664" fg:w="1"/><text x="98.8072%" y="655.50"></text></g><g><title>`0x7FFCDEE1F2D5 (1 samples, 0.04%)</title><rect x="98.5942%" y="645" width="0.0370%" height="15" fill="rgb(241,130,17)" fg:x="2665" fg:w="1"/><text x="98.8442%" y="655.50"></text></g><g><title>`0x7FFCDEE60BF7 (1 samples, 0.04%)</title><rect x="98.5942%" y="629" width="0.0370%" height="15" fill="rgb(206,137,32)" fg:x="2665" fg:w="1"/><text x="98.8442%" y="639.50"></text></g><g><title>`0x7FFCDEE0CB3E (1 samples, 0.04%)</title><rect x="98.5942%" y="613" width="0.0370%" height="15" fill="rgb(237,228,51)" fg:x="2665" fg:w="1"/><text x="98.8442%" y="623.50"></text></g><g><title>`0x7FFCDEE0B135 (1 samples, 0.04%)</title><rect x="98.5942%" y="597" width="0.0370%" height="15" fill="rgb(243,6,42)" fg:x="2665" fg:w="1"/><text x="98.8442%" y="607.50"></text></g><g><title>`0x7FFCDEE2992E (2 samples, 0.07%)</title><rect x="98.5942%" y="709" width="0.0740%" height="15" fill="rgb(251,74,28)" fg:x="2665" fg:w="2"/><text x="98.8442%" y="719.50"></text></g><g><title>`0x7FFCDEE0FD5D (2 samples, 0.07%)</title><rect x="98.5942%" y="693" width="0.0740%" height="15" fill="rgb(218,20,49)" fg:x="2665" fg:w="2"/><text x="98.8442%" y="703.50"></text></g><g><title>`0x7FFCDEE1C4BB (2 samples, 0.07%)</title><rect x="98.5942%" y="677" width="0.0740%" height="15" fill="rgb(238,28,14)" fg:x="2665" fg:w="2"/><text x="98.8442%" y="687.50"></text></g><g><title>`0x7FFCDEE26A17 (2 samples, 0.07%)</title><rect x="98.5942%" y="661" width="0.0740%" height="15" fill="rgb(229,40,46)" fg:x="2665" fg:w="2"/><text x="98.8442%" y="671.50"></text></g><g><title>`0x7FFCDEE1F2E6 (1 samples, 0.04%)</title><rect x="98.6312%" y="645" width="0.0370%" height="15" fill="rgb(244,195,20)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="655.50"></text></g><g><title>`0x7FFCDEE205A6 (1 samples, 0.04%)</title><rect x="98.6312%" y="629" width="0.0370%" height="15" fill="rgb(253,56,35)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="639.50"></text></g><g><title>`0x7FFCDEE0D150 (1 samples, 0.04%)</title><rect x="98.6312%" y="613" width="0.0370%" height="15" fill="rgb(210,149,44)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="623.50"></text></g><g><title>`0x7FFCDEE0B665 (1 samples, 0.04%)</title><rect x="98.6312%" y="597" width="0.0370%" height="15" fill="rgb(240,135,12)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="607.50"></text></g><g><title>`0x7FFCDEE5A902 (1 samples, 0.04%)</title><rect x="98.6312%" y="581" width="0.0370%" height="15" fill="rgb(251,24,50)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="591.50"></text></g><g><title>`0x7FFCDEE5AAF6 (1 samples, 0.04%)</title><rect x="98.6312%" y="565" width="0.0370%" height="15" fill="rgb(243,200,47)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="575.50"></text></g><g><title>`0x7FFCDEE5B264 (1 samples, 0.04%)</title><rect x="98.6312%" y="549" width="0.0370%" height="15" fill="rgb(224,166,26)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="559.50"></text></g><g><title>`0x7FFCDEE5AF3E (1 samples, 0.04%)</title><rect x="98.6312%" y="533" width="0.0370%" height="15" fill="rgb(233,0,47)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="543.50"></text></g><g><title>`0x7FFCE15B01D4 (1 samples, 0.04%)</title><rect x="98.6312%" y="517" width="0.0370%" height="15" fill="rgb(253,80,5)" fg:x="2666" fg:w="1"/><text x="98.8812%" y="527.50"></text></g><g><title>`0x7FFCE15E384E (12 samples, 0.44%)</title><rect x="98.2612%" y="885" width="0.4440%" height="15" fill="rgb(214,133,25)" fg:x="2656" fg:w="12"/><text x="98.5112%" y="895.50"></text></g><g><title>`0x7FFCE1526AF4 (12 samples, 0.44%)</title><rect x="98.2612%" y="869" width="0.4440%" height="15" fill="rgb(209,27,14)" fg:x="2656" fg:w="12"/><text x="98.5112%" y="879.50"></text></g><g><title>`0x7FFCE15273E4 (12 samples, 0.44%)</title><rect x="98.2612%" y="853" width="0.4440%" height="15" fill="rgb(219,102,51)" fg:x="2656" fg:w="12"/><text x="98.5112%" y="863.50"></text></g><g><title>`0x7FFCE152FBAE (7 samples, 0.26%)</title><rect x="98.4462%" y="837" width="0.2590%" height="15" fill="rgb(237,18,16)" fg:x="2661" fg:w="7"/><text x="98.6962%" y="847.50"></text></g><g><title>`0x7FFCE154D947 (7 samples, 0.26%)</title><rect x="98.4462%" y="821" width="0.2590%" height="15" fill="rgb(241,85,17)" fg:x="2661" fg:w="7"/><text x="98.6962%" y="831.50"></text></g><g><title>`0x7FFCE157D120 (7 samples, 0.26%)</title><rect x="98.4462%" y="805" width="0.2590%" height="15" fill="rgb(236,90,42)" fg:x="2661" fg:w="7"/><text x="98.6962%" y="815.50"></text></g><g><title>`0x7FFCE157D09A (7 samples, 0.26%)</title><rect x="98.4462%" y="789" width="0.2590%" height="15" fill="rgb(249,57,21)" fg:x="2661" fg:w="7"/><text x="98.6962%" y="799.50"></text></g><g><title>`0x7FFCE157D307 (7 samples, 0.26%)</title><rect x="98.4462%" y="773" width="0.2590%" height="15" fill="rgb(243,12,36)" fg:x="2661" fg:w="7"/><text x="98.6962%" y="783.50"></text></g><g><title>`0x7FFCE1529A1D (7 samples, 0.26%)</title><rect x="98.4462%" y="757" width="0.2590%" height="15" fill="rgb(253,128,47)" fg:x="2661" fg:w="7"/><text x="98.6962%" y="767.50"></text></g><g><title>`0x7FFCDEDC8E3E (3 samples, 0.11%)</title><rect x="98.5942%" y="741" width="0.1110%" height="15" fill="rgb(207,33,20)" fg:x="2665" fg:w="3"/><text x="98.8442%" y="751.50"></text></g><g><title>`0x7FFCDEE0E057 (3 samples, 0.11%)</title><rect x="98.5942%" y="725" width="0.1110%" height="15" fill="rgb(233,215,35)" fg:x="2665" fg:w="3"/><text x="98.8442%" y="735.50"></text></g><g><title>`0x7FFCDEE29944 (1 samples, 0.04%)</title><rect x="98.6681%" y="709" width="0.0370%" height="15" fill="rgb(249,188,52)" fg:x="2667" fg:w="1"/><text x="98.9181%" y="719.50"></text></g><g><title>`0x7FFCDEE0FBD5 (1 samples, 0.04%)</title><rect x="98.6681%" y="693" width="0.0370%" height="15" fill="rgb(225,12,32)" fg:x="2667" fg:w="1"/><text x="98.9181%" y="703.50"></text></g><g><title>`0x7FFCDEE1BE70 (1 samples, 0.04%)</title><rect x="98.6681%" y="677" width="0.0370%" height="15" fill="rgb(247,98,14)" fg:x="2667" fg:w="1"/><text x="98.9181%" y="687.50"></text></g><g><title>`0x7FFCDEE1C0B8 (1 samples, 0.04%)</title><rect x="98.6681%" y="661" width="0.0370%" height="15" fill="rgb(247,219,48)" fg:x="2667" fg:w="1"/><text x="98.9181%" y="671.50"></text></g><g><title>`0x7FFCDEDDEF77 (1 samples, 0.04%)</title><rect x="98.6681%" y="645" width="0.0370%" height="15" fill="rgb(253,60,48)" fg:x="2667" fg:w="1"/><text x="98.9181%" y="655.50"></text></g><g><title>`0x7FFCE155A496 (1 samples, 0.04%)</title><rect x="98.6681%" y="629" width="0.0370%" height="15" fill="rgb(245,15,52)" fg:x="2667" fg:w="1"/><text x="98.9181%" y="639.50"></text></g><g><title>`0x7FFCE15AD7A4 (1 samples, 0.04%)</title><rect x="98.6681%" y="613" width="0.0370%" height="15" fill="rgb(220,133,28)" fg:x="2667" fg:w="1"/><text x="98.9181%" y="623.50"></text></g><g><title>`0x7FFCE15E391D (1 samples, 0.04%)</title><rect x="98.7051%" y="885" width="0.0370%" height="15" fill="rgb(217,180,4)" fg:x="2668" fg:w="1"/><text x="98.9551%" y="895.50"></text></g><g><title>`0x7FFCE15270A6 (1 samples, 0.04%)</title><rect x="98.7051%" y="869" width="0.0370%" height="15" fill="rgb(251,24,1)" fg:x="2668" fg:w="1"/><text x="98.9551%" y="879.50"></text></g><g><title>`0x7FFCE15201FD (1 samples, 0.04%)</title><rect x="98.7051%" y="853" width="0.0370%" height="15" fill="rgb(212,185,49)" fg:x="2668" fg:w="1"/><text x="98.9551%" y="863.50"></text></g><g><title>`0x7FFCE1520446 (1 samples, 0.04%)</title><rect x="98.7051%" y="837" width="0.0370%" height="15" fill="rgb(215,175,22)" fg:x="2668" fg:w="1"/><text x="98.9551%" y="847.50"></text></g><g><title>`0x7FFCE1541D30 (1 samples, 0.04%)</title><rect x="98.7051%" y="821" width="0.0370%" height="15" fill="rgb(250,205,14)" fg:x="2668" fg:w="1"/><text x="98.9551%" y="831.50"></text></g><g><title>`0x7FFCE15E3930 (1 samples, 0.04%)</title><rect x="98.7421%" y="885" width="0.0370%" height="15" fill="rgb(225,211,22)" fg:x="2669" fg:w="1"/><text x="98.9921%" y="895.50"></text></g><g><title>`0x7FFCE158C42F (1 samples, 0.04%)</title><rect x="98.7421%" y="869" width="0.0370%" height="15" fill="rgb(251,179,42)" fg:x="2669" fg:w="1"/><text x="98.9921%" y="879.50"></text></g><g><title>`0x7FFCE15AD7A4 (1 samples, 0.04%)</title><rect x="98.7421%" y="853" width="0.0370%" height="15" fill="rgb(208,216,51)" fg:x="2669" fg:w="1"/><text x="98.9921%" y="863.50"></text></g><g><title>`0x7FFCE1570F12 (2 samples, 0.07%)</title><rect x="98.7791%" y="805" width="0.0740%" height="15" fill="rgb(235,36,11)" fg:x="2670" fg:w="2"/><text x="99.0291%" y="815.50"></text></g><g><title>`0x7FFCE1570707 (2 samples, 0.07%)</title><rect x="98.7791%" y="789" width="0.0740%" height="15" fill="rgb(213,189,28)" fg:x="2670" fg:w="2"/><text x="99.0291%" y="799.50"></text></g><g><title>`0x7FFCE157087B (2 samples, 0.07%)</title><rect x="98.7791%" y="773" width="0.0740%" height="15" fill="rgb(227,203,42)" fg:x="2670" fg:w="2"/><text x="99.0291%" y="783.50"></text></g><g><title>`0x7FFCE15ADD04 (2 samples, 0.07%)</title><rect x="98.7791%" y="757" width="0.0740%" height="15" fill="rgb(244,72,36)" fg:x="2670" fg:w="2"/><text x="99.0291%" y="767.50"></text></g><g><title>`0x7FFCE1524AAA (1 samples, 0.04%)</title><rect x="98.8531%" y="773" width="0.0370%" height="15" fill="rgb(213,53,17)" fg:x="2672" fg:w="1"/><text x="99.1031%" y="783.50"></text></g><g><title>`0x7FFCE1524D42 (1 samples, 0.04%)</title><rect x="98.8531%" y="757" width="0.0370%" height="15" fill="rgb(207,167,3)" fg:x="2672" fg:w="1"/><text x="99.1031%" y="767.50"></text></g><g><title>`0x7FFCE15ADA64 (1 samples, 0.04%)</title><rect x="98.8531%" y="741" width="0.0370%" height="15" fill="rgb(216,98,30)" fg:x="2672" fg:w="1"/><text x="99.1031%" y="751.50"></text></g><g><title>`0x7FFCE152FB53 (4 samples, 0.15%)</title><rect x="98.7791%" y="837" width="0.1480%" height="15" fill="rgb(236,123,15)" fg:x="2670" fg:w="4"/><text x="99.0291%" y="847.50"></text></g><g><title>`0x7FFCE157021F (4 samples, 0.15%)</title><rect x="98.7791%" y="821" width="0.1480%" height="15" fill="rgb(248,81,50)" fg:x="2670" fg:w="4"/><text x="99.0291%" y="831.50"></text></g><g><title>`0x7FFCE1570F80 (2 samples, 0.07%)</title><rect x="98.8531%" y="805" width="0.0740%" height="15" fill="rgb(214,120,4)" fg:x="2672" fg:w="2"/><text x="99.1031%" y="815.50"></text></g><g><title>`0x7FFCE1571253 (2 samples, 0.07%)</title><rect x="98.8531%" y="789" width="0.0740%" height="15" fill="rgb(208,179,34)" fg:x="2672" fg:w="2"/><text x="99.1031%" y="799.50"></text></g><g><title>`0x7FFCE1524C14 (1 samples, 0.04%)</title><rect x="98.8901%" y="773" width="0.0370%" height="15" fill="rgb(227,140,7)" fg:x="2673" fg:w="1"/><text x="99.1401%" y="783.50"></text></g><g><title>`0x7FFCE1527BC4 (1 samples, 0.04%)</title><rect x="98.8901%" y="757" width="0.0370%" height="15" fill="rgb(214,22,6)" fg:x="2673" fg:w="1"/><text x="99.1401%" y="767.50"></text></g><g><title>`0x7FFCE15426CC (1 samples, 0.04%)</title><rect x="98.8901%" y="741" width="0.0370%" height="15" fill="rgb(207,137,27)" fg:x="2673" fg:w="1"/><text x="99.1401%" y="751.50"></text></g><g><title>`0x7FFCE157C7FD (5 samples, 0.18%)</title><rect x="98.7791%" y="869" width="0.1850%" height="15" fill="rgb(210,8,46)" fg:x="2670" fg:w="5"/><text x="99.0291%" y="879.50"></text></g><g><title>`0x7FFCE15273E4 (5 samples, 0.18%)</title><rect x="98.7791%" y="853" width="0.1850%" height="15" fill="rgb(240,16,54)" fg:x="2670" fg:w="5"/><text x="99.0291%" y="863.50"></text></g><g><title>`0x7FFCE152FBAE (1 samples, 0.04%)</title><rect x="98.9271%" y="837" width="0.0370%" height="15" fill="rgb(211,209,29)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="847.50"></text></g><g><title>`0x7FFCE154D947 (1 samples, 0.04%)</title><rect x="98.9271%" y="821" width="0.0370%" height="15" fill="rgb(226,228,24)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="831.50"></text></g><g><title>`0x7FFCE157D09A (1 samples, 0.04%)</title><rect x="98.9271%" y="805" width="0.0370%" height="15" fill="rgb(222,84,9)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="815.50"></text></g><g><title>`0x7FFCE157D307 (1 samples, 0.04%)</title><rect x="98.9271%" y="789" width="0.0370%" height="15" fill="rgb(234,203,30)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="799.50"></text></g><g><title>`0x7FFCE1529A1D (1 samples, 0.04%)</title><rect x="98.9271%" y="773" width="0.0370%" height="15" fill="rgb(238,109,14)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="783.50"></text></g><g><title>`0x7FFCDA5A2AA0 (1 samples, 0.04%)</title><rect x="98.9271%" y="757" width="0.0370%" height="15" fill="rgb(233,206,34)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="767.50"></text></g><g><title>`0x7FFCDA59318C (1 samples, 0.04%)</title><rect x="98.9271%" y="741" width="0.0370%" height="15" fill="rgb(220,167,47)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="751.50"></text></g><g><title>`0x7FFCE1552EA0 (1 samples, 0.04%)</title><rect x="98.9271%" y="725" width="0.0370%" height="15" fill="rgb(238,105,10)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="735.50"></text></g><g><title>`0x7FFCE15530E5 (1 samples, 0.04%)</title><rect x="98.9271%" y="709" width="0.0370%" height="15" fill="rgb(213,227,17)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="719.50"></text></g><g><title>`0x7FFCE1552F86 (1 samples, 0.04%)</title><rect x="98.9271%" y="693" width="0.0370%" height="15" fill="rgb(217,132,38)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="703.50"></text></g><g><title>`0x7FFCE15B0DF4 (1 samples, 0.04%)</title><rect x="98.9271%" y="677" width="0.0370%" height="15" fill="rgb(242,146,4)" fg:x="2674" fg:w="1"/><text x="99.1771%" y="687.50"></text></g><g><title>`0x7FFCDA592970 (1 samples, 0.04%)</title><rect x="98.9641%" y="853" width="0.0370%" height="15" fill="rgb(212,61,9)" fg:x="2675" fg:w="1"/><text x="99.2141%" y="863.50"></text></g><g><title>`0x7FFCDA592F9A (1 samples, 0.04%)</title><rect x="98.9641%" y="837" width="0.0370%" height="15" fill="rgb(247,126,22)" fg:x="2675" fg:w="1"/><text x="99.2141%" y="847.50"></text></g><g><title>`0x7FFCE1552EA0 (1 samples, 0.04%)</title><rect x="98.9641%" y="821" width="0.0370%" height="15" fill="rgb(220,196,2)" fg:x="2675" fg:w="1"/><text x="99.2141%" y="831.50"></text></g><g><title>`0x7FFCE15530E5 (1 samples, 0.04%)</title><rect x="98.9641%" y="805" width="0.0370%" height="15" fill="rgb(208,46,4)" fg:x="2675" fg:w="1"/><text x="99.2141%" y="815.50"></text></g><g><title>`0x7FFCE1552FB8 (1 samples, 0.04%)</title><rect x="98.9641%" y="789" width="0.0370%" height="15" fill="rgb(252,104,46)" fg:x="2675" fg:w="1"/><text x="99.2141%" y="799.50"></text></g><g><title>`0x7FFCE155362D (1 samples, 0.04%)</title><rect x="98.9641%" y="773" width="0.0370%" height="15" fill="rgb(237,152,48)" fg:x="2675" fg:w="1"/><text x="99.2141%" y="783.50"></text></g><g><title>`0x7FFCE1553A15 (1 samples, 0.04%)</title><rect x="98.9641%" y="757" width="0.0370%" height="15" fill="rgb(221,59,37)" fg:x="2675" fg:w="1"/><text x="99.2141%" y="767.50"></text></g><g><title>`0x7FFCDA5961AE (1 samples, 0.04%)</title><rect x="99.0011%" y="757" width="0.0370%" height="15" fill="rgb(209,202,51)" fg:x="2676" fg:w="1"/><text x="99.2511%" y="767.50"></text></g><g><title>`0x7FFCE15ADBC4 (1 samples, 0.04%)</title><rect x="99.0011%" y="741" width="0.0370%" height="15" fill="rgb(228,81,30)" fg:x="2676" fg:w="1"/><text x="99.2511%" y="751.50"></text></g><g><title>`0x7FFCDA5962A4 (1 samples, 0.04%)</title><rect x="99.0381%" y="757" width="0.0370%" height="15" fill="rgb(227,42,39)" fg:x="2677" fg:w="1"/><text x="99.2881%" y="767.50"></text></g><g><title>`0x7FFCE15AD744 (1 samples, 0.04%)</title><rect x="99.0381%" y="741" width="0.0370%" height="15" fill="rgb(221,26,2)" fg:x="2677" fg:w="1"/><text x="99.2881%" y="751.50"></text></g><g><title>`0x7FFCDA5929E5 (3 samples, 0.11%)</title><rect x="99.0011%" y="853" width="0.1110%" height="15" fill="rgb(254,61,31)" fg:x="2676" fg:w="3"/><text x="99.2511%" y="863.50"></text></g><g><title>`0x7FFCDA59C29B (3 samples, 0.11%)</title><rect x="99.0011%" y="837" width="0.1110%" height="15" fill="rgb(222,173,38)" fg:x="2676" fg:w="3"/><text x="99.2511%" y="847.50"></text></g><g><title>`0x7FFCDA59C43E (3 samples, 0.11%)</title><rect x="99.0011%" y="821" width="0.1110%" height="15" fill="rgb(218,50,12)" fg:x="2676" fg:w="3"/><text x="99.2511%" y="831.50"></text></g><g><title>`0x7FFCE156EE42 (3 samples, 0.11%)</title><rect x="99.0011%" y="805" width="0.1110%" height="15" fill="rgb(223,88,40)" fg:x="2676" fg:w="3"/><text x="99.2511%" y="815.50"></text></g><g><title>`0x7FFCDA5960E7 (3 samples, 0.11%)</title><rect x="99.0011%" y="789" width="0.1110%" height="15" fill="rgb(237,54,19)" fg:x="2676" fg:w="3"/><text x="99.2511%" y="799.50"></text></g><g><title>`0x7FFCDA596B0C (3 samples, 0.11%)</title><rect x="99.0011%" y="773" width="0.1110%" height="15" fill="rgb(251,129,25)" fg:x="2676" fg:w="3"/><text x="99.2511%" y="783.50"></text></g><g><title>`0x7FFCDA5962C7 (1 samples, 0.04%)</title><rect x="99.0751%" y="757" width="0.0370%" height="15" fill="rgb(238,97,19)" fg:x="2678" fg:w="1"/><text x="99.3251%" y="767.50"></text></g><g><title>`0x7FFCE15347B1 (1 samples, 0.04%)</title><rect x="99.0751%" y="741" width="0.0370%" height="15" fill="rgb(240,169,18)" fg:x="2678" fg:w="1"/><text x="99.3251%" y="751.50"></text></g><g><title>`0x7FFCE1535B74 (1 samples, 0.04%)</title><rect x="99.0751%" y="725" width="0.0370%" height="15" fill="rgb(230,187,49)" fg:x="2678" fg:w="1"/><text x="99.3251%" y="735.50"></text></g><g><title>`0x7FFCE1536918 (1 samples, 0.04%)</title><rect x="99.0751%" y="709" width="0.0370%" height="15" fill="rgb(209,44,26)" fg:x="2678" fg:w="1"/><text x="99.3251%" y="719.50"></text></g><g><title>`0x7FFCDA5929F8 (1 samples, 0.04%)</title><rect x="99.1121%" y="853" width="0.0370%" height="15" fill="rgb(244,0,6)" fg:x="2679" fg:w="1"/><text x="99.3621%" y="863.50"></text></g><g><title>`0x7FFCDA594CE1 (1 samples, 0.04%)</title><rect x="99.1121%" y="837" width="0.0370%" height="15" fill="rgb(248,18,21)" fg:x="2679" fg:w="1"/><text x="99.3621%" y="847.50"></text></g><g><title>`0x7FFCDA595172 (1 samples, 0.04%)</title><rect x="99.1121%" y="821" width="0.0370%" height="15" fill="rgb(245,180,19)" fg:x="2679" fg:w="1"/><text x="99.3621%" y="831.50"></text></g><g><title>`0x7FFCDA5951C6 (1 samples, 0.04%)</title><rect x="99.1121%" y="805" width="0.0370%" height="15" fill="rgb(252,118,36)" fg:x="2679" fg:w="1"/><text x="99.3621%" y="815.50"></text></g><g><title>`0x7FFCDA5971B0 (1 samples, 0.04%)</title><rect x="99.1121%" y="789" width="0.0370%" height="15" fill="rgb(210,224,19)" fg:x="2679" fg:w="1"/><text x="99.3621%" y="799.50"></text></g><g><title>`0x7FFCDA59A8E4 (1 samples, 0.04%)</title><rect x="99.1121%" y="773" width="0.0370%" height="15" fill="rgb(218,30,24)" fg:x="2679" fg:w="1"/><text x="99.3621%" y="783.50"></text></g><g><title>`0x7FFCDA599B3D (1 samples, 0.04%)</title><rect x="99.1121%" y="757" width="0.0370%" height="15" fill="rgb(219,75,50)" fg:x="2679" fg:w="1"/><text x="99.3621%" y="767.50"></text></g><g><title>`0x7FFCDA592A2D (1 samples, 0.04%)</title><rect x="99.1491%" y="853" width="0.0370%" height="15" fill="rgb(234,72,50)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="863.50"></text></g><g><title>`0x7FFCDA5972F2 (1 samples, 0.04%)</title><rect x="99.1491%" y="837" width="0.0370%" height="15" fill="rgb(219,100,48)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="847.50"></text></g><g><title>`0x7FFCDA5A1B5F (1 samples, 0.04%)</title><rect x="99.1491%" y="821" width="0.0370%" height="15" fill="rgb(253,5,41)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="831.50"></text></g><g><title>`0x7FFCDA5A187D (1 samples, 0.04%)</title><rect x="99.1491%" y="805" width="0.0370%" height="15" fill="rgb(247,181,11)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="815.50"></text></g><g><title>`0x7FFCDA5A19CF (1 samples, 0.04%)</title><rect x="99.1491%" y="789" width="0.0370%" height="15" fill="rgb(222,223,25)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="799.50"></text></g><g><title>`0x7FFCDA5A133D (1 samples, 0.04%)</title><rect x="99.1491%" y="773" width="0.0370%" height="15" fill="rgb(214,198,28)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="783.50"></text></g><g><title>`0x7FFCDA5A1EFD (1 samples, 0.04%)</title><rect x="99.1491%" y="757" width="0.0370%" height="15" fill="rgb(230,46,43)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="767.50"></text></g><g><title>`0x7FFCDA5A1CC5 (1 samples, 0.04%)</title><rect x="99.1491%" y="741" width="0.0370%" height="15" fill="rgb(233,65,53)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="751.50"></text></g><g><title>`0x7FFCE15B01D4 (1 samples, 0.04%)</title><rect x="99.1491%" y="725" width="0.0370%" height="15" fill="rgb(221,121,27)" fg:x="2680" fg:w="1"/><text x="99.3991%" y="735.50"></text></g><g><title>`0x7FFCDA5982B4 (1 samples, 0.04%)</title><rect x="99.1861%" y="821" width="0.0370%" height="15" fill="rgb(247,70,47)" fg:x="2681" fg:w="1"/><text x="99.4361%" y="831.50"></text></g><g><title>`0x7FFCE1552EA0 (1 samples, 0.04%)</title><rect x="99.1861%" y="805" width="0.0370%" height="15" fill="rgb(228,85,35)" fg:x="2681" fg:w="1"/><text x="99.4361%" y="815.50"></text></g><g><title>`0x7FFCE15530E5 (1 samples, 0.04%)</title><rect x="99.1861%" y="789" width="0.0370%" height="15" fill="rgb(209,50,18)" fg:x="2681" fg:w="1"/><text x="99.4361%" y="799.50"></text></g><g><title>`0x7FFCE1552F86 (1 samples, 0.04%)</title><rect x="99.1861%" y="773" width="0.0370%" height="15" fill="rgb(250,19,35)" fg:x="2681" fg:w="1"/><text x="99.4361%" y="783.50"></text></g><g><title>`0x7FFCE15B0DF4 (1 samples, 0.04%)</title><rect x="99.1861%" y="757" width="0.0370%" height="15" fill="rgb(253,107,29)" fg:x="2681" fg:w="1"/><text x="99.4361%" y="767.50"></text></g><g><title>`0x7FFCDA59EDB7 (1 samples, 0.04%)</title><rect x="99.2231%" y="805" width="0.0370%" height="15" fill="rgb(252,179,29)" fg:x="2682" fg:w="1"/><text x="99.4731%" y="815.50"></text></g><g><title>`0x7FFCDA59EFF4 (1 samples, 0.04%)</title><rect x="99.2231%" y="789" width="0.0370%" height="15" fill="rgb(238,194,6)" fg:x="2682" fg:w="1"/><text x="99.4731%" y="799.50"></text></g><g><title>`0x7FFCDA59F654 (1 samples, 0.04%)</title><rect x="99.2231%" y="773" width="0.0370%" height="15" fill="rgb(238,164,29)" fg:x="2682" fg:w="1"/><text x="99.4731%" y="783.50"></text></g><g><title>`0x7FFCE15AE004 (1 samples, 0.04%)</title><rect x="99.2231%" y="757" width="0.0370%" height="15" fill="rgb(224,25,9)" fg:x="2682" fg:w="1"/><text x="99.4731%" y="767.50"></text></g><g><title>`0x7FFCDA5984A1 (2 samples, 0.07%)</title><rect x="99.2231%" y="821" width="0.0740%" height="15" fill="rgb(244,153,23)" fg:x="2682" fg:w="2"/><text x="99.4731%" y="831.50"></text></g><g><title>`0x7FFCDA59EE13 (1 samples, 0.04%)</title><rect x="99.2601%" y="805" width="0.0370%" height="15" fill="rgb(212,203,14)" fg:x="2683" fg:w="1"/><text x="99.5101%" y="815.50"></text></g><g><title>`0x7FFCE15ADEE4 (1 samples, 0.04%)</title><rect x="99.2601%" y="789" width="0.0370%" height="15" fill="rgb(220,164,20)" fg:x="2683" fg:w="1"/><text x="99.5101%" y="799.50"></text></g><g><title>`0x7FFCDA592A7C (4 samples, 0.15%)</title><rect x="99.1861%" y="853" width="0.1480%" height="15" fill="rgb(222,203,48)" fg:x="2681" fg:w="4"/><text x="99.4361%" y="863.50"></text></g><g><title>`0x7FFCDA59CB96 (4 samples, 0.15%)</title><rect x="99.1861%" y="837" width="0.1480%" height="15" fill="rgb(215,159,22)" fg:x="2681" fg:w="4"/><text x="99.4361%" y="847.50"></text></g><g><title>`0x7FFCDA5984BC (1 samples, 0.04%)</title><rect x="99.2971%" y="821" width="0.0370%" height="15" fill="rgb(216,183,47)" fg:x="2684" fg:w="1"/><text x="99.5471%" y="831.50"></text></g><g><title>`0x7FFCDA59EEC5 (1 samples, 0.04%)</title><rect x="99.2971%" y="805" width="0.0370%" height="15" fill="rgb(229,195,25)" fg:x="2684" fg:w="1"/><text x="99.5471%" y="815.50"></text></g><g><title>`0x7FFCDA59EFF4 (1 samples, 0.04%)</title><rect x="99.2971%" y="789" width="0.0370%" height="15" fill="rgb(224,132,51)" fg:x="2684" fg:w="1"/><text x="99.5471%" y="799.50"></text></g><g><title>`0x7FFCDA59F654 (1 samples, 0.04%)</title><rect x="99.2971%" y="773" width="0.0370%" height="15" fill="rgb(240,63,7)" fg:x="2684" fg:w="1"/><text x="99.5471%" y="783.50"></text></g><g><title>`0x7FFCE15AE004 (1 samples, 0.04%)</title><rect x="99.2971%" y="757" width="0.0370%" height="15" fill="rgb(249,182,41)" fg:x="2684" fg:w="1"/><text x="99.5471%" y="767.50"></text></g><g><title>`0x7FFCDA592AE2 (1 samples, 0.04%)</title><rect x="99.3341%" y="853" width="0.0370%" height="15" fill="rgb(243,47,26)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="863.50"></text></g><g><title>`0x7FFCDA597C99 (1 samples, 0.04%)</title><rect x="99.3341%" y="837" width="0.0370%" height="15" fill="rgb(233,48,2)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="847.50"></text></g><g><title>`0x7FFCDA591451 (1 samples, 0.04%)</title><rect x="99.3341%" y="821" width="0.0370%" height="15" fill="rgb(244,165,34)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="831.50"></text></g><g><title>`0x7FFCDA59E323 (1 samples, 0.04%)</title><rect x="99.3341%" y="805" width="0.0370%" height="15" fill="rgb(207,89,7)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="815.50"></text></g><g><title>`0x7FFCDA59A6DD (1 samples, 0.04%)</title><rect x="99.3341%" y="789" width="0.0370%" height="15" fill="rgb(244,117,36)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="799.50"></text></g><g><title>`0x7FFCDA59B678 (1 samples, 0.04%)</title><rect x="99.3341%" y="773" width="0.0370%" height="15" fill="rgb(226,144,34)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="783.50"></text></g><g><title>`0x7FFCDA598FDB (1 samples, 0.04%)</title><rect x="99.3341%" y="757" width="0.0370%" height="15" fill="rgb(213,23,19)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="767.50"></text></g><g><title>`0x7FFCDA59963F (1 samples, 0.04%)</title><rect x="99.3341%" y="741" width="0.0370%" height="15" fill="rgb(217,75,12)" fg:x="2685" fg:w="1"/><text x="99.5841%" y="751.50"></text></g><g><title>`0x7FFCE157C89D (12 samples, 0.44%)</title><rect x="98.9641%" y="869" width="0.4440%" height="15" fill="rgb(224,159,17)" fg:x="2675" fg:w="12"/><text x="99.2141%" y="879.50"></text></g><g><title>`0x7FFCDA592B5F (1 samples, 0.04%)</title><rect x="99.3711%" y="853" width="0.0370%" height="15" fill="rgb(217,118,1)" fg:x="2686" fg:w="1"/><text x="99.6211%" y="863.50"></text></g><g><title>`0x7FFCDA594DCD (1 samples, 0.04%)</title><rect x="99.3711%" y="837" width="0.0370%" height="15" fill="rgb(232,180,48)" fg:x="2686" fg:w="1"/><text x="99.6211%" y="847.50"></text></g><g><title>`0x7FFCDA594EBB (1 samples, 0.04%)</title><rect x="99.3711%" y="821" width="0.0370%" height="15" fill="rgb(230,27,33)" fg:x="2686" fg:w="1"/><text x="99.6211%" y="831.50"></text></g><g><title>`0x7FFCDA594EFA (1 samples, 0.04%)</title><rect x="99.3711%" y="805" width="0.0370%" height="15" fill="rgb(205,31,21)" fg:x="2686" fg:w="1"/><text x="99.6211%" y="815.50"></text></g><g><title>`0x7FFCDA594F7E (1 samples, 0.04%)</title><rect x="99.3711%" y="789" width="0.0370%" height="15" fill="rgb(253,59,4)" fg:x="2686" fg:w="1"/><text x="99.6211%" y="799.50"></text></g><g><title>`0x7FFCE15AD744 (1 samples, 0.04%)</title><rect x="99.3711%" y="773" width="0.0370%" height="15" fill="rgb(224,201,9)" fg:x="2686" fg:w="1"/><text x="99.6211%" y="783.50"></text></g><g><title>`0x7FFCE15800C5 (1 samples, 0.04%)</title><rect x="99.4081%" y="645" width="0.0370%" height="15" fill="rgb(229,206,30)" fg:x="2687" fg:w="1"/><text x="99.6581%" y="655.50"></text></g><g><title>`0x7FFCE153B44D (1 samples, 0.04%)</title><rect x="99.4081%" y="629" width="0.0370%" height="15" fill="rgb(212,67,47)" fg:x="2687" fg:w="1"/><text x="99.6581%" y="639.50"></text></g><g><title>`0x7FFCE153DBFA (1 samples, 0.04%)</title><rect x="99.4081%" y="613" width="0.0370%" height="15" fill="rgb(211,96,50)" fg:x="2687" fg:w="1"/><text x="99.6581%" y="623.50"></text></g><g><title>`0x7FFCE151E37B (1 samples, 0.04%)</title><rect x="99.4081%" y="597" width="0.0370%" height="15" fill="rgb(252,114,18)" fg:x="2687" fg:w="1"/><text x="99.6581%" y="607.50"></text></g><g><title>`0x7FFCE151E715 (1 samples, 0.04%)</title><rect x="99.4081%" y="581" width="0.0370%" height="15" fill="rgb(223,58,37)" fg:x="2687" fg:w="1"/><text x="99.6581%" y="591.50"></text></g><g><title>`0x7FFCE15AD864 (1 samples, 0.04%)</title><rect x="99.4081%" y="565" width="0.0370%" height="15" fill="rgb(237,70,4)" fg:x="2687" fg:w="1"/><text x="99.6581%" y="575.50"></text></g><g><title>`0x7FFCE1545D7E (2 samples, 0.07%)</title><rect x="99.4081%" y="677" width="0.0740%" height="15" fill="rgb(244,85,46)" fg:x="2687" fg:w="2"/><text x="99.6581%" y="687.50"></text></g><g><title>`0x7FFCE15464F9 (2 samples, 0.07%)</title><rect x="99.4081%" y="661" width="0.0740%" height="15" fill="rgb(223,39,52)" fg:x="2687" fg:w="2"/><text x="99.6581%" y="671.50"></text></g><g><title>`0x7FFCE158019C (1 samples, 0.04%)</title><rect x="99.4451%" y="645" width="0.0370%" height="15" fill="rgb(218,200,14)" fg:x="2688" fg:w="1"/><text x="99.6951%" y="655.50"></text></g><g><title>`0x7FFCE1580285 (1 samples, 0.04%)</title><rect x="99.4451%" y="629" width="0.0370%" height="15" fill="rgb(208,171,16)" fg:x="2688" fg:w="1"/><text x="99.6951%" y="639.50"></text></g><g><title>`0x7FFCE15485BC (1 samples, 0.04%)</title><rect x="99.4451%" y="613" width="0.0370%" height="15" fill="rgb(234,200,18)" fg:x="2688" fg:w="1"/><text x="99.6951%" y="623.50"></text></g><g><title>`0x7FFCE154E809 (1 samples, 0.04%)</title><rect x="99.4451%" y="597" width="0.0370%" height="15" fill="rgb(228,45,11)" fg:x="2688" fg:w="1"/><text x="99.6951%" y="607.50"></text></g><g><title>`0x7FFCE15AD7A4 (1 samples, 0.04%)</title><rect x="99.4451%" y="581" width="0.0370%" height="15" fill="rgb(237,182,11)" fg:x="2688" fg:w="1"/><text x="99.6951%" y="591.50"></text></g><g><title>`0x7FFCE157CB60 (3 samples, 0.11%)</title><rect x="99.4081%" y="837" width="0.1110%" height="15" fill="rgb(241,175,49)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="847.50"></text></g><g><title>`0x7FFCDA59644E (3 samples, 0.11%)</title><rect x="99.4081%" y="821" width="0.1110%" height="15" fill="rgb(247,38,35)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="831.50"></text></g><g><title>`0x7FFCDA5A6A3A (3 samples, 0.11%)</title><rect x="99.4081%" y="805" width="0.1110%" height="15" fill="rgb(228,39,49)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="815.50"></text></g><g><title>`0x7FFCDA5D0EE6 (3 samples, 0.11%)</title><rect x="99.4081%" y="789" width="0.1110%" height="15" fill="rgb(226,101,26)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="799.50"></text></g><g><title>`0x7FFCDA5CF29B (3 samples, 0.11%)</title><rect x="99.4081%" y="773" width="0.1110%" height="15" fill="rgb(206,141,19)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="783.50"></text></g><g><title>`0x7FFCDA5D04E5 (3 samples, 0.11%)</title><rect x="99.4081%" y="757" width="0.1110%" height="15" fill="rgb(211,200,13)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="767.50"></text></g><g><title>`0x7FFCDEDCFBAF (3 samples, 0.11%)</title><rect x="99.4081%" y="741" width="0.1110%" height="15" fill="rgb(241,121,6)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="751.50"></text></g><g><title>`0x7FFCE15816FE (3 samples, 0.11%)</title><rect x="99.4081%" y="725" width="0.1110%" height="15" fill="rgb(234,221,29)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="735.50"></text></g><g><title>`0x7FFCE1544292 (3 samples, 0.11%)</title><rect x="99.4081%" y="709" width="0.1110%" height="15" fill="rgb(229,136,5)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="719.50"></text></g><g><title>`0x7FFCE1546452 (3 samples, 0.11%)</title><rect x="99.4081%" y="693" width="0.1110%" height="15" fill="rgb(238,36,11)" fg:x="2687" fg:w="3"/><text x="99.6581%" y="703.50"></text></g><g><title>`0x7FFCE1545F42 (1 samples, 0.04%)</title><rect x="99.4821%" y="677" width="0.0370%" height="15" fill="rgb(251,55,41)" fg:x="2689" fg:w="1"/><text x="99.7321%" y="687.50"></text></g><g><title>`0x7FFCE154BE1E (1 samples, 0.04%)</title><rect x="99.4821%" y="661" width="0.0370%" height="15" fill="rgb(242,34,40)" fg:x="2689" fg:w="1"/><text x="99.7321%" y="671.50"></text></g><g><title>`0x7FFCE154B5DB (1 samples, 0.04%)</title><rect x="99.4821%" y="645" width="0.0370%" height="15" fill="rgb(215,42,17)" fg:x="2689" fg:w="1"/><text x="99.7321%" y="655.50"></text></g><g><title>`0x7FFCE154ADD1 (1 samples, 0.04%)</title><rect x="99.4821%" y="629" width="0.0370%" height="15" fill="rgb(207,44,46)" fg:x="2689" fg:w="1"/><text x="99.7321%" y="639.50"></text></g><g><title>`0x7FFCE154AFF9 (1 samples, 0.04%)</title><rect x="99.4821%" y="613" width="0.0370%" height="15" fill="rgb(211,206,28)" fg:x="2689" fg:w="1"/><text x="99.7321%" y="623.50"></text></g><g><title>`0x7FFCE154B21B (1 samples, 0.04%)</title><rect x="99.4821%" y="597" width="0.0370%" height="15" fill="rgb(237,167,16)" fg:x="2689" fg:w="1"/><text x="99.7321%" y="607.50"></text></g><g><title>`0x7FFCE154B063 (1 samples, 0.04%)</title><rect x="99.4821%" y="581" width="0.0370%" height="15" fill="rgb(233,66,6)" fg:x="2689" fg:w="1"/><text x="99.7321%" y="591.50"></text></g><g><title>`0x7FFCE15E3B10 (21 samples, 0.78%)</title><rect x="98.7791%" y="885" width="0.7769%" height="15" fill="rgb(246,123,29)" fg:x="2670" fg:w="21"/><text x="99.0291%" y="895.50"></text></g><g><title>`0x7FFCE157C8AB (4 samples, 0.15%)</title><rect x="99.4081%" y="869" width="0.1480%" height="15" fill="rgb(209,62,40)" fg:x="2687" fg:w="4"/><text x="99.6581%" y="879.50"></text></g><g><title>`0x7FFCE157CA1E (4 samples, 0.15%)</title><rect x="99.4081%" y="853" width="0.1480%" height="15" fill="rgb(218,4,25)" fg:x="2687" fg:w="4"/><text x="99.6581%" y="863.50"></text></g><g><title>`0x7FFCE157CB95 (1 samples, 0.04%)</title><rect x="99.5191%" y="837" width="0.0370%" height="15" fill="rgb(253,91,49)" fg:x="2690" fg:w="1"/><text x="99.7691%" y="847.50"></text></g><g><title>`0x7FFCE157CB60 (1 samples, 0.04%)</title><rect x="99.5191%" y="821" width="0.0370%" height="15" fill="rgb(228,155,29)" fg:x="2690" fg:w="1"/><text x="99.7691%" y="831.50"></text></g><g><title>`0x7FFCDA59644E (1 samples, 0.04%)</title><rect x="99.5191%" y="805" width="0.0370%" height="15" fill="rgb(243,57,37)" fg:x="2690" fg:w="1"/><text x="99.7691%" y="815.50"></text></g><g><title>`0x7FFCDA596507 (1 samples, 0.04%)</title><rect x="99.5191%" y="789" width="0.0370%" height="15" fill="rgb(244,167,17)" fg:x="2690" fg:w="1"/><text x="99.7691%" y="799.50"></text></g><g><title>`0x7FFCDA5966B9 (1 samples, 0.04%)</title><rect x="99.5191%" y="773" width="0.0370%" height="15" fill="rgb(207,181,38)" fg:x="2690" fg:w="1"/><text x="99.7691%" y="783.50"></text></g><g><title>`0x7FFCDA5968E7 (1 samples, 0.04%)</title><rect x="99.5191%" y="757" width="0.0370%" height="15" fill="rgb(211,8,23)" fg:x="2690" fg:w="1"/><text x="99.7691%" y="767.50"></text></g><g><title>`0x7FFCE15E3B98 (1 samples, 0.04%)</title><rect x="99.5560%" y="885" width="0.0370%" height="15" fill="rgb(235,11,44)" fg:x="2691" fg:w="1"/><text x="99.8060%" y="895.50"></text></g><g><title>`0x7FFCE1572B3B (1 samples, 0.04%)</title><rect x="99.5560%" y="869" width="0.0370%" height="15" fill="rgb(248,18,52)" fg:x="2691" fg:w="1"/><text x="99.8060%" y="879.50"></text></g><g><title>`0x7FFCE157307C (1 samples, 0.04%)</title><rect x="99.5560%" y="853" width="0.0370%" height="15" fill="rgb(208,4,7)" fg:x="2691" fg:w="1"/><text x="99.8060%" y="863.50"></text></g><g><title>`0x7FFCE1573231 (1 samples, 0.04%)</title><rect x="99.5560%" y="837" width="0.0370%" height="15" fill="rgb(240,17,39)" fg:x="2691" fg:w="1"/><text x="99.8060%" y="847.50"></text></g><g><title>`0x7FFCE1573315 (1 samples, 0.04%)</title><rect x="99.5560%" y="821" width="0.0370%" height="15" fill="rgb(207,170,3)" fg:x="2691" fg:w="1"/><text x="99.8060%" y="831.50"></text></g><g><title>`0x7FFCE15AE754 (1 samples, 0.04%)</title><rect x="99.5560%" y="805" width="0.0370%" height="15" fill="rgb(236,100,52)" fg:x="2691" fg:w="1"/><text x="99.8060%" y="815.50"></text></g><g><title>`0x7FFCE1570138 (1 samples, 0.04%)</title><rect x="99.5930%" y="853" width="0.0370%" height="15" fill="rgb(246,78,51)" fg:x="2692" fg:w="1"/><text x="99.8430%" y="863.50"></text></g><g><title>`0x7FFCE15426B7 (1 samples, 0.04%)</title><rect x="99.5930%" y="837" width="0.0370%" height="15" fill="rgb(211,17,15)" fg:x="2692" fg:w="1"/><text x="99.8430%" y="847.50"></text></g><g><title>`0x7FFCE15AC2EF (1 samples, 0.04%)</title><rect x="99.6300%" y="709" width="0.0370%" height="15" fill="rgb(209,59,46)" fg:x="2693" fg:w="1"/><text x="99.8800%" y="719.50"></text></g><g><title>`0x7FFCE162B0ED (1 samples, 0.04%)</title><rect x="99.6300%" y="693" width="0.0370%" height="15" fill="rgb(210,92,25)" fg:x="2693" fg:w="1"/><text x="99.8800%" y="703.50"></text></g><g><title>`0x7FFCE15AC75E (1 samples, 0.04%)</title><rect x="99.6300%" y="677" width="0.0370%" height="15" fill="rgb(238,174,52)" fg:x="2693" fg:w="1"/><text x="99.8800%" y="687.50"></text></g><g><title>`0x7FFCE15B01D4 (1 samples, 0.04%)</title><rect x="99.6300%" y="661" width="0.0370%" height="15" fill="rgb(230,73,7)" fg:x="2693" fg:w="1"/><text x="99.8800%" y="671.50"></text></g><g><title>`0x7FFCE15703D1 (2 samples, 0.07%)</title><rect x="99.6300%" y="821" width="0.0740%" height="15" fill="rgb(243,124,40)" fg:x="2693" fg:w="2"/><text x="99.8800%" y="831.50"></text></g><g><title>`0x7FFCE15714D2 (2 samples, 0.07%)</title><rect x="99.6300%" y="805" width="0.0740%" height="15" fill="rgb(244,170,11)" fg:x="2693" fg:w="2"/><text x="99.8800%" y="815.50"></text></g><g><title>`0x7FFCE15215D0 (2 samples, 0.07%)</title><rect x="99.6300%" y="789" width="0.0740%" height="15" fill="rgb(207,114,54)" fg:x="2693" fg:w="2"/><text x="99.8800%" y="799.50"></text></g><g><title>`0x7FFCE15217B1 (2 samples, 0.07%)</title><rect x="99.6300%" y="773" width="0.0740%" height="15" fill="rgb(205,42,20)" fg:x="2693" fg:w="2"/><text x="99.8800%" y="783.50"></text></g><g><title>`0x7FFCE157D710 (2 samples, 0.07%)</title><rect x="99.6300%" y="757" width="0.0740%" height="15" fill="rgb(230,30,28)" fg:x="2693" fg:w="2"/><text x="99.8800%" y="767.50"></text></g><g><title>`0x7FFCE15AC440 (2 samples, 0.07%)</title><rect x="99.6300%" y="741" width="0.0740%" height="15" fill="rgb(205,73,54)" fg:x="2693" fg:w="2"/><text x="99.8800%" y="751.50"></text></g><g><title>`0x7FFCE15AC18D (2 samples, 0.07%)</title><rect x="99.6300%" y="725" width="0.0740%" height="15" fill="rgb(254,227,23)" fg:x="2693" fg:w="2"/><text x="99.8800%" y="735.50"></text></g><g><title>`0x7FFCE15AC3B8 (1 samples, 0.04%)</title><rect x="99.6670%" y="709" width="0.0370%" height="15" fill="rgb(228,202,34)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="719.50"></text></g><g><title>`0x7FFCE15AC18D (1 samples, 0.04%)</title><rect x="99.6670%" y="693" width="0.0370%" height="15" fill="rgb(222,225,37)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="703.50"></text></g><g><title>`0x7FFCE15AC3B8 (1 samples, 0.04%)</title><rect x="99.6670%" y="677" width="0.0370%" height="15" fill="rgb(221,14,54)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="687.50"></text></g><g><title>`0x7FFCE15AC18D (1 samples, 0.04%)</title><rect x="99.6670%" y="661" width="0.0370%" height="15" fill="rgb(254,102,2)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="671.50"></text></g><g><title>`0x7FFCE15AC2EF (1 samples, 0.04%)</title><rect x="99.6670%" y="645" width="0.0370%" height="15" fill="rgb(232,104,17)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="655.50"></text></g><g><title>`0x7FFCE162B0ED (1 samples, 0.04%)</title><rect x="99.6670%" y="629" width="0.0370%" height="15" fill="rgb(250,220,14)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="639.50"></text></g><g><title>`0x7FFCE15AC75E (1 samples, 0.04%)</title><rect x="99.6670%" y="613" width="0.0370%" height="15" fill="rgb(241,158,9)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="623.50"></text></g><g><title>`0x7FFCE15B01D4 (1 samples, 0.04%)</title><rect x="99.6670%" y="597" width="0.0370%" height="15" fill="rgb(246,9,43)" fg:x="2694" fg:w="1"/><text x="99.9170%" y="607.50"></text></g><g><title>`0x7FFCE1570BE6 (3 samples, 0.11%)</title><rect x="99.6300%" y="837" width="0.1110%" height="15" fill="rgb(206,73,33)" fg:x="2693" fg:w="3"/><text x="99.8800%" y="847.50"></text></g><g><title>`0x7FFCE1570526 (1 samples, 0.04%)</title><rect x="99.7040%" y="821" width="0.0370%" height="15" fill="rgb(222,79,8)" fg:x="2695" fg:w="1"/><text x="99.9540%" y="831.50"></text></g><g><title>`0x7FFCE1570707 (1 samples, 0.04%)</title><rect x="99.7040%" y="805" width="0.0370%" height="15" fill="rgb(234,8,54)" fg:x="2695" fg:w="1"/><text x="99.9540%" y="815.50"></text></g><g><title>`0x7FFCE157087B (1 samples, 0.04%)</title><rect x="99.7040%" y="789" width="0.0370%" height="15" fill="rgb(209,134,38)" fg:x="2695" fg:w="1"/><text x="99.9540%" y="799.50"></text></g><g><title>`0x7FFCE15ADD04 (1 samples, 0.04%)</title><rect x="99.7040%" y="773" width="0.0370%" height="15" fill="rgb(230,127,29)" fg:x="2695" fg:w="1"/><text x="99.9540%" y="783.50"></text></g><g><title>`0x7FFCE157119C (1 samples, 0.04%)</title><rect x="99.7410%" y="821" width="0.0370%" height="15" fill="rgb(242,44,41)" fg:x="2696" fg:w="1"/><text x="99.9910%" y="831.50"></text></g><g><title>`0x7FFCE15ADBC4 (1 samples, 0.04%)</title><rect x="99.7410%" y="805" width="0.0370%" height="15" fill="rgb(222,56,43)" fg:x="2696" fg:w="1"/><text x="99.9910%" y="815.50"></text></g><g><title>`0x7FFCE15E3BF7 (6 samples, 0.22%)</title><rect x="99.5930%" y="885" width="0.2220%" height="15" fill="rgb(238,39,47)" fg:x="2692" fg:w="6"/><text x="99.8430%" y="895.50"></text></g><g><title>`0x7FFCE1570058 (6 samples, 0.22%)</title><rect x="99.5930%" y="869" width="0.2220%" height="15" fill="rgb(226,79,43)" fg:x="2692" fg:w="6"/><text x="99.8430%" y="879.50"></text></g><g><title>`0x7FFCE1570170 (5 samples, 0.18%)</title><rect x="99.6300%" y="853" width="0.1850%" height="15" fill="rgb(242,105,53)" fg:x="2693" fg:w="5"/><text x="99.8800%" y="863.50"></text></g><g><title>`0x7FFCE1570CB0 (2 samples, 0.07%)</title><rect x="99.7410%" y="837" width="0.0740%" height="15" fill="rgb(251,132,46)" fg:x="2696" fg:w="2"/><text x="99.9910%" y="847.50"></text></g><g><title>`0x7FFCE1571271 (1 samples, 0.04%)</title><rect x="99.7780%" y="821" width="0.0370%" height="15" fill="rgb(231,77,14)" fg:x="2697" fg:w="1"/><text x="100.0280%" y="831.50"></text></g><g><title>`0x7FFCE15AD744 (1 samples, 0.04%)</title><rect x="99.7780%" y="805" width="0.0370%" height="15" fill="rgb(240,135,9)" fg:x="2697" fg:w="1"/><text x="100.0280%" y="815.50"></text></g><g><title>`0x7FFCE154DBB4 (1 samples, 0.04%)</title><rect x="99.8150%" y="853" width="0.0370%" height="15" fill="rgb(248,109,14)" fg:x="2698" fg:w="1"/><text x="100.0650%" y="863.50"></text></g><g><title>`0x7FFCE154DD38 (1 samples, 0.04%)</title><rect x="99.8150%" y="837" width="0.0370%" height="15" fill="rgb(227,146,52)" fg:x="2698" fg:w="1"/><text x="100.0650%" y="847.50"></text></g><g><title>`0x7FFCDA59644E (1 samples, 0.04%)</title><rect x="99.8150%" y="821" width="0.0370%" height="15" fill="rgb(232,54,3)" fg:x="2698" fg:w="1"/><text x="100.0650%" y="831.50"></text></g><g><title>`0x7FFCDA596507 (1 samples, 0.04%)</title><rect x="99.8150%" y="805" width="0.0370%" height="15" fill="rgb(229,201,43)" fg:x="2698" fg:w="1"/><text x="100.0650%" y="815.50"></text></g><g><title>`0x7FFCDA5966B9 (1 samples, 0.04%)</title><rect x="99.8150%" y="789" width="0.0370%" height="15" fill="rgb(252,161,33)" fg:x="2698" fg:w="1"/><text x="100.0650%" y="799.50"></text></g><g><title>`0x7FFCDA596802 (1 samples, 0.04%)</title><rect x="99.8150%" y="773" width="0.0370%" height="15" fill="rgb(226,146,40)" fg:x="2698" fg:w="1"/><text x="100.0650%" y="783.50"></text></g><g><title>`0x7FFCE15A2699 (1 samples, 0.04%)</title><rect x="99.8150%" y="757" width="0.0370%" height="15" fill="rgb(219,47,25)" fg:x="2698" fg:w="1"/><text x="100.0650%" y="767.50"></text></g><g><title>`0x7FFCE15E3C16 (2 samples, 0.07%)</title><rect x="99.8150%" y="885" width="0.0740%" height="15" fill="rgb(250,135,13)" fg:x="2698" fg:w="2"/><text x="100.0650%" y="895.50"></text></g><g><title>`0x7FFCE154D8FB (2 samples, 0.07%)</title><rect x="99.8150%" y="869" width="0.0740%" height="15" fill="rgb(219,229,18)" fg:x="2698" fg:w="2"/><text x="100.0650%" y="879.50"></text></g><g><title>`0x7FFCE154DBF4 (1 samples, 0.04%)</title><rect x="99.8520%" y="853" width="0.0370%" height="15" fill="rgb(217,152,27)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="863.50"></text></g><g><title>`0x7FFCE154DBF4 (1 samples, 0.04%)</title><rect x="99.8520%" y="837" width="0.0370%" height="15" fill="rgb(225,71,47)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="847.50"></text></g><g><title>`0x7FFCE154DBB4 (1 samples, 0.04%)</title><rect x="99.8520%" y="821" width="0.0370%" height="15" fill="rgb(220,139,14)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="831.50"></text></g><g><title>`0x7FFCE154DD38 (1 samples, 0.04%)</title><rect x="99.8520%" y="805" width="0.0370%" height="15" fill="rgb(247,54,32)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="815.50"></text></g><g><title>`0x7FFCDA59644E (1 samples, 0.04%)</title><rect x="99.8520%" y="789" width="0.0370%" height="15" fill="rgb(252,131,39)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="799.50"></text></g><g><title>`0x7FFCDA596507 (1 samples, 0.04%)</title><rect x="99.8520%" y="773" width="0.0370%" height="15" fill="rgb(210,108,39)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="783.50"></text></g><g><title>`0x7FFCDA596589 (1 samples, 0.04%)</title><rect x="99.8520%" y="757" width="0.0370%" height="15" fill="rgb(205,23,29)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="767.50"></text></g><g><title>`0x7FFCDA596B0C (1 samples, 0.04%)</title><rect x="99.8520%" y="741" width="0.0370%" height="15" fill="rgb(246,139,46)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="751.50"></text></g><g><title>`0x7FFCDA5962A4 (1 samples, 0.04%)</title><rect x="99.8520%" y="725" width="0.0370%" height="15" fill="rgb(250,81,26)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="735.50"></text></g><g><title>`0x7FFCE15AD744 (1 samples, 0.04%)</title><rect x="99.8520%" y="709" width="0.0370%" height="15" fill="rgb(214,104,7)" fg:x="2699" fg:w="1"/><text x="100.1020%" y="719.50"></text></g><g><title>`0x7FFCE157D09A (1 samples, 0.04%)</title><rect x="99.8890%" y="853" width="0.0370%" height="15" fill="rgb(233,189,8)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="863.50"></text></g><g><title>`0x7FFCE157D307 (1 samples, 0.04%)</title><rect x="99.8890%" y="837" width="0.0370%" height="15" fill="rgb(228,141,17)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="847.50"></text></g><g><title>`0x7FFCE1529A1D (1 samples, 0.04%)</title><rect x="99.8890%" y="821" width="0.0370%" height="15" fill="rgb(247,157,1)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="831.50"></text></g><g><title>`0x7FFCC4ECF459 (1 samples, 0.04%)</title><rect x="99.8890%" y="805" width="0.0370%" height="15" fill="rgb(249,225,5)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="815.50"></text></g><g><title>`0x7FFCC4EC537E (1 samples, 0.04%)</title><rect x="99.8890%" y="789" width="0.0370%" height="15" fill="rgb(242,55,13)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="799.50"></text></g><g><title>`0x7FFCC4EC5404 (1 samples, 0.04%)</title><rect x="99.8890%" y="773" width="0.0370%" height="15" fill="rgb(230,49,50)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="783.50"></text></g><g><title>`0x7FFCC4EC5956 (1 samples, 0.04%)</title><rect x="99.8890%" y="757" width="0.0370%" height="15" fill="rgb(241,111,38)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="767.50"></text></g><g><title>`0x7FFCC4EC572F (1 samples, 0.04%)</title><rect x="99.8890%" y="741" width="0.0370%" height="15" fill="rgb(252,155,4)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="751.50"></text></g><g><title>`0x7FFCDEDA2612 (1 samples, 0.04%)</title><rect x="99.8890%" y="725" width="0.0370%" height="15" fill="rgb(212,69,32)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="735.50"></text></g><g><title>`0x7FFCE1526AF4 (1 samples, 0.04%)</title><rect x="99.8890%" y="709" width="0.0370%" height="15" fill="rgb(243,107,47)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="719.50"></text></g><g><title>`0x7FFCE15273E4 (1 samples, 0.04%)</title><rect x="99.8890%" y="693" width="0.0370%" height="15" fill="rgb(247,130,12)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="703.50"></text></g><g><title>`0x7FFCE152FA75 (1 samples, 0.04%)</title><rect x="99.8890%" y="677" width="0.0370%" height="15" fill="rgb(233,74,16)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="687.50"></text></g><g><title>`0x7FFCE152FCC9 (1 samples, 0.04%)</title><rect x="99.8890%" y="661" width="0.0370%" height="15" fill="rgb(208,58,18)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="671.50"></text></g><g><title>`0x7FFCE153113C (1 samples, 0.04%)</title><rect x="99.8890%" y="645" width="0.0370%" height="15" fill="rgb(242,225,1)" fg:x="2700" fg:w="1"/><text x="100.1390%" y="655.50"></text></g><g><title>`0x7FFCDF10710E (1 samples, 0.04%)</title><rect x="99.9260%" y="757" width="0.0370%" height="15" fill="rgb(249,39,40)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="767.50"></text></g><g><title>`0x7FFCDF107214 (1 samples, 0.04%)</title><rect x="99.9260%" y="741" width="0.0370%" height="15" fill="rgb(207,72,44)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="751.50"></text></g><g><title>`0x7FFCDF1076CC (1 samples, 0.04%)</title><rect x="99.9260%" y="725" width="0.0370%" height="15" fill="rgb(215,193,12)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="735.50"></text></g><g><title>`0x7FFCDF107980 (1 samples, 0.04%)</title><rect x="99.9260%" y="709" width="0.0370%" height="15" fill="rgb(248,41,39)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="719.50"></text></g><g><title>`0x7FFCDF107B11 (1 samples, 0.04%)</title><rect x="99.9260%" y="693" width="0.0370%" height="15" fill="rgb(253,85,4)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="703.50"></text></g><g><title>`0x7FFCDF107FCF (1 samples, 0.04%)</title><rect x="99.9260%" y="677" width="0.0370%" height="15" fill="rgb(243,70,31)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="687.50"></text></g><g><title>`0x7FFCDF108200 (1 samples, 0.04%)</title><rect x="99.9260%" y="661" width="0.0370%" height="15" fill="rgb(253,195,26)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="671.50"></text></g><g><title>`0x7FFCDEDCB9CD (1 samples, 0.04%)</title><rect x="99.9260%" y="645" width="0.0370%" height="15" fill="rgb(243,42,11)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="655.50"></text></g><g><title>`0x7FFCDEDCBF66 (1 samples, 0.04%)</title><rect x="99.9260%" y="629" width="0.0370%" height="15" fill="rgb(239,66,17)" fg:x="2701" fg:w="1"/><text x="100.1760%" y="639.50"></text></g><g><title>all (2,703 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(217,132,21)" fg:x="0" fg:w="2703"/><text x="0.2500%" y="959.50"></text></g><g><title>`0x7FFCE1585C2E (51 samples, 1.89%)</title><rect x="98.1132%" y="933" width="1.8868%" height="15" fill="rgb(252,202,21)" fg:x="2652" fg:w="51"/><text x="98.3632%" y="943.50">`..</text></g><g><title>`0x7FFCE1585C83 (51 samples, 1.89%)</title><rect x="98.1132%" y="917" width="1.8868%" height="15" fill="rgb(233,98,36)" fg:x="2652" fg:w="51"/><text x="98.3632%" y="927.50">`..</text></g><g><title>`0x7FFCE1585DFB (51 samples, 1.89%)</title><rect x="98.1132%" y="901" width="1.8868%" height="15" fill="rgb(216,153,54)" fg:x="2652" fg:w="51"/><text x="98.3632%" y="911.50">`..</text></g><g><title>`0x7FFCE15E3D32 (3 samples, 0.11%)</title><rect x="99.8890%" y="885" width="0.1110%" height="15" fill="rgb(250,99,7)" fg:x="2700" fg:w="3"/><text x="100.1390%" y="895.50"></text></g><g><title>`0x7FFCE157D120 (3 samples, 0.11%)</title><rect x="99.8890%" y="869" width="0.1110%" height="15" fill="rgb(207,56,50)" fg:x="2700" fg:w="3"/><text x="100.1390%" y="879.50"></text></g><g><title>`0x7FFCE157D120 (2 samples, 0.07%)</title><rect x="99.9260%" y="853" width="0.0740%" height="15" fill="rgb(244,61,34)" fg:x="2701" fg:w="2"/><text x="100.1760%" y="863.50"></text></g><g><title>`0x7FFCE157D09A (2 samples, 0.07%)</title><rect x="99.9260%" y="837" width="0.0740%" height="15" fill="rgb(241,50,38)" fg:x="2701" fg:w="2"/><text x="100.1760%" y="847.50"></text></g><g><title>`0x7FFCE157D307 (2 samples, 0.07%)</title><rect x="99.9260%" y="821" width="0.0740%" height="15" fill="rgb(212,166,30)" fg:x="2701" fg:w="2"/><text x="100.1760%" y="831.50"></text></g><g><title>`0x7FFCE1529A1D (2 samples, 0.07%)</title><rect x="99.9260%" y="805" width="0.0740%" height="15" fill="rgb(249,127,32)" fg:x="2701" fg:w="2"/><text x="100.1760%" y="815.50"></text></g><g><title>`0x7FFCDF116216 (2 samples, 0.07%)</title><rect x="99.9260%" y="789" width="0.0740%" height="15" fill="rgb(209,103,0)" fg:x="2701" fg:w="2"/><text x="100.1760%" y="799.50"></text></g><g><title>`0x7FFCDF117730 (2 samples, 0.07%)</title><rect x="99.9260%" y="773" width="0.0740%" height="15" fill="rgb(238,209,51)" fg:x="2701" fg:w="2"/><text x="100.1760%" y="783.50"></text></g><g><title>`0x7FFCDF121190 (1 samples, 0.04%)</title><rect x="99.9630%" y="757" width="0.0370%" height="15" fill="rgb(237,56,23)" fg:x="2702" fg:w="1"/><text x="100.2130%" y="767.50"></text></g></svg></svg>